(function() {
    var type_impls = Object.fromEntries([["arduino_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC0%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC0%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC0.html\" title=\"struct atmega_hal::port::PC0\">PC0</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC1.html\" title=\"struct atmega_hal::port::PC1\">PC1</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC2.html\" title=\"struct atmega_hal::port::PC2\">PC2</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC3.html\" title=\"struct atmega_hal::port::PC3\">PC3</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC4.html\" title=\"struct atmega_hal::port::PC4\">PC4</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC5%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC5%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"avr_device/devices/atmega328p/struct.ADC.html\" title=\"struct avr_device::devices::atmega328p::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC5.html\" title=\"struct atmega_hal::port::PC5\">PC5</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"avr_device/devices/atmega328p/adc/admux/enum.MUX_A.html\" title=\"enum avr_device::devices::atmega328p::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#472\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.InputMode.html\" title=\"trait arduino_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#473\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#445\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#446\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#338\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#339\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#100\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PwmOutput.html\" title=\"struct arduino_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#101\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"avr_hal_generic/simple_pwm/enum.PwmError.html\" title=\"enum avr_hal_generic::simple_pwm::PwmError\">PwmError</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#460\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.InputMode.html\" title=\"trait arduino_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#461\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#463\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#467\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#476\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.InputMode.html\" title=\"trait arduino_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#477\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#481\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#433\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#434\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#436\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#440\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#449\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#450\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#454\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#56\">Source</a><a href=\"#impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.IntoPwmPin.html\" title=\"trait arduino_hal::simple_pwm::IntoPwmPin\">IntoPwmPin</a>&lt;TC, PIN&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_pwm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#57\">Source</a><a href=\"#method.into_pwm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arduino_hal/simple_pwm/trait.IntoPwmPin.html#tymethod.into_pwm\" class=\"fn\">into_pwm</a>(self, _timer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;TC</a>) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PwmOutput.html\" title=\"struct arduino_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;</h4></section></div></details>","IntoPwmPin<TC, PIN>","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#396\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#397\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#399\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#404\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#410\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#411\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#416\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#324\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#325\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#327\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#332\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#342\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#343\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#348\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CAnalog,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#517\">Source</a><a href=\"#impl-Pin%3CAnalog,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"analog-input\"><a class=\"doc-anchor\" href=\"#analog-input\">§</a>Analog Input</h4>\n<p>Some pins can be configured as ADC channels.  For those pins, <code>analog_read()</code> can be used to\nread the voltage.  <code>analog_read()</code> corresponds to a blocking ADC read:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>adc = atmega_hal::Adc::new(dp.ADC, Default::default());\n\n<span class=\"kw\">let </span>a0 = pins.pc0.into_analog_input(<span class=\"kw-2\">&amp;mut </span>adc);\n\n<span class=\"kw\">let </span>voltage = a0.analog_read(<span class=\"kw-2\">&amp;mut </span>adc);\n<span class=\"comment\">// ^- this is equivalent to -v\n</span><span class=\"kw\">let </span>voltage = adc.read_blocking(<span class=\"kw-2\">&amp;</span>a0);</code></pre></div>\n</div><div class=\"impl-items\"><section id=\"method.analog_read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#518-522\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.analog_read\" class=\"fn\">analog_read</a>&lt;H, ADC, CLOCK&gt;(&amp;self, adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a><div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcOps.html\" title=\"trait arduino_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"arduino_hal/clock/trait.Clock.html\" title=\"trait arduino_hal::clock::Clock\">Clock</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#532-535\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_channel\" class=\"fn\">into_channel</a>&lt;H, ADC&gt;(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\">Channel</a>&lt;H, ADC&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcOps.html\" title=\"trait arduino_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into a generic <a href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\"><code>Channel</code></a> type.</p>\n<p>The generic channel type can be used to store multiple channels in an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_digital\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#545-552\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_digital\" class=\"fn\">into_digital</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Floating.html\" title=\"struct arduino_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcOps.html\" title=\"trait arduino_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"arduino_hal/clock/trait.Clock.html\" title=\"trait arduino_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin to a floating digital input pin.</p>\n<p>The pin is re-enabled in the digital input buffer and is no longer usable as an analog\ninput. You can get to other digital modes by calling one of the usual <code>into_...</code> methods\non the return value of this function.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#275\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"input-mode-downgrading\"><a class=\"doc-anchor\" href=\"#input-mode-downgrading\">§</a>Input-Mode Downgrading</h4>\n<p>There is a second kind of downgrading: In some cases it is not important whether an input pin\nis configured as <a href=\"arduino_hal/port/mode/struct.PullUp.html\" title=\"struct arduino_hal::port::mode::PullUp\"><code>mode::PullUp</code></a> or <a href=\"arduino_hal/port/mode/struct.Floating.html\" title=\"struct arduino_hal::port::mode::Floating\"><code>mode::Floating</code></a>.  For this, you can “forget” the\nconcrete input mode, leaving you with a type that is the same for pull-up or floating inputs:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"comment\">// This demo uses downgraded pins, but it works just as well\n// with non-downgraded ones!\n</span><span class=\"kw\">let </span>input_pin1: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd0\n    .into_floating_input()\n    .downgrade();\n<span class=\"kw\">let </span>input_pin2: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd1\n    .into_pull_up_input()\n    .downgrade();\n\n<span class=\"comment\">// With the input mode \"forgotten\", they have the same type now,\n// even if electically different.\n</span><span class=\"kw\">let </span>any_inputs: [Pin&lt;mode::Input&gt;; <span class=\"number\">2</span>] = [\n    input_pin1.forget_imode(),\n    input_pin2.forget_imode(),\n];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forget_imode\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#278\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.forget_imode\" class=\"fn\">forget_imode</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about whether the pin is currently a pull-up or a floating\ninput.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#487\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.InputMode.html\" title=\"trait arduino_hal::port::mode::InputMode\">InputMode</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-input\"><a class=\"doc-anchor\" href=\"#digital-input\">§</a>Digital Input</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#490\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#496\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven low.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#130\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.Io.html\" title=\"trait arduino_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"configuration\"><a class=\"doc-anchor\" href=\"#configuration\">§</a>Configuration</h4>\n<p>To change the mode of a pin, use one of the following conversion functions.  They consume the\noriginal <a href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\"><code>Pin</code></a> and return one with the desired mode.  Only when a pin is in the correct mode,\ndoes it have the mode-relevant methods availailable (e.g. <code>set_high()</code> is only available for\n<code>Output</code> pins).</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#133\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output\" class=\"fn\">into_output</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to low.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#144\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output_high\" class=\"fn\">into_output_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to high.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#155\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain\" class=\"fn\">into_opendrain</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to low.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#166\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain_high\" class=\"fn\">into_opendrain_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to high.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_floating_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#178\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_floating_input\" class=\"fn\">into_floating_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Floating.html\" title=\"struct arduino_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a floating input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p><em>Note</em>: To read deterministic values from the pin, it must be externally pulled to a\ndefined level (either VCC or GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pull_up_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#189\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_pull_up_input\" class=\"fn\">into_pull_up_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Input.html\" title=\"struct arduino_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PullUp.html\" title=\"struct arduino_hal::port::mode::PullUp\">PullUp</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a pulled-up input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p>With no external circuit pulling the pin low, it will be read high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_analog_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#201-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_analog_input\" class=\"fn\">into_analog_input</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Analog.html\" title=\"struct arduino_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcChannel.html\" title=\"trait arduino_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"arduino_hal/adc/trait.AdcOps.html\" title=\"trait arduino_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"arduino_hal/clock/trait.Clock.html\" title=\"trait arduino_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into an analog input (ADC channel).  See <a href=\"#analog-input\">Analog Input</a>.</p>\n<p>Some pins can be repurposed as ADC channels.  For those pins, the <code>into_analog_input()</code>\nmethod is available.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#236\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"arduino_hal/port/mode/trait.Io.html\" title=\"trait arduino_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"downgrading\"><a class=\"doc-anchor\" href=\"#downgrading\">§</a>Downgrading</h4>\n<p>For applications where the exact pin is irrelevant, a specific pin can be downgraded to a\n“dynamic pin” which can represent any pin:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"kw\">let </span>any_output_pin1: Pin&lt;mode::Output&gt; = pins.pd0.into_output().downgrade();\n<span class=\"kw\">let </span>any_output_pin2: Pin&lt;mode::Output&gt; = pins.pd1.into_output().downgrade();\n\n<span class=\"comment\">// Because they now have the same type, you can, for example, stuff them into an array:\n</span><span class=\"kw\">let </span>pins: [Pin&lt;mode::Output&gt;; <span class=\"number\">2</span>] = [any_output_pin1, any_output_pin2];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#240\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, &lt;PIN as <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>&gt;::<a class=\"associatedtype\" href=\"arduino_hal/port/trait.PinOps.html#associatedtype.Dynamic\" title=\"type arduino_hal::port::PinOps::Dynamic\">Dynamic</a>&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about which specific pin is represented.</p>\n<p><em>Note</em>: The returned “dynamic” pin has runtime overhead compared to a specific pin.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#365\">Source</a><a href=\"#impl-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output-open-drain\"><a class=\"doc-anchor\" href=\"#digital-output-open-drain\">§</a>Digital Output Open Drain</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#368\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set the pin high (Input without PullUp so it is floating)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#374\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND, Output to low).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#382\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#287\">Source</a><a href=\"#impl-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output\"><a class=\"doc-anchor\" href=\"#digital-output\">§</a>Digital Output</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#290\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin high (pull it to supply voltage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#302\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.toggle\" class=\"fn\">toggle</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Toggle a high pin to low and a low pin to high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#310\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#318\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#65\">Source</a><a href=\"#impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PwmOutput.html\" title=\"struct arduino_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.enable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#66\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.enable\" class=\"fn\">enable</a>(&amp;mut self)</h4></section><section id=\"method.disable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#70\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.disable\" class=\"fn\">disable</a>(&amp;mut self)</h4></section><section id=\"method.get_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_duty\" class=\"fn\">get_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type arduino_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.get_max_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#78\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_max_duty\" class=\"fn\">get_max_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type arduino_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.set_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#82\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_duty\" class=\"fn\">set_duty</a>(&amp;mut self, duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>)</h4></section></div></details>",0,"arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#104\">Source</a><a href=\"#impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.SetDutyCycle.html\" title=\"trait embedded_hal::pwm::SetDutyCycle\">SetDutyCycle</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PwmOutput.html\" title=\"struct arduino_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait arduino_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC, Duty = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#105\">Source</a><a href=\"#method.max_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\" class=\"fn\">max_duty_cycle</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Get the maximum duty cycle value. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#109\">Source</a><a href=\"#method.set_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\" class=\"fn\">set_duty_cycle</a>(\n    &amp;mut self,\n    duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.PwmOutput.html\" title=\"struct arduino_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>duty / max_duty</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_off\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#84\">Source</a><a href=\"#method.set_duty_cycle_fully_off\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_off\" class=\"fn\">set_duty_cycle_fully_off</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 0%, or always inactive.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#90\">Source</a><a href=\"#method.set_duty_cycle_fully_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_on\" class=\"fn\">set_duty_cycle_fully_on</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 100%, or always active.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fraction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#99\">Source</a><a href=\"#method.set_duty_cycle_fraction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\" class=\"fn\">set_duty_cycle_fraction</a>(\n    &amp;mut self,\n    num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n    denom: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>num / denom</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_percent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#115\">Source</a><a href=\"#method.set_duty_cycle_percent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\" class=\"fn\">set_duty_cycle_percent</a>(&amp;mut self, percent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>percent / 100</code> <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\">Read more</a></div></details></div></details>","SetDutyCycle","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#422\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#423\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#427\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.OpenDrain.html\" title=\"struct arduino_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","arduino_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#354\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"arduino_hal/port/trait.PinOps.html\" title=\"trait arduino_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#355\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#359\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"arduino_hal/port/mode/struct.Output.html\" title=\"struct arduino_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","arduino_hal::port::Pin"]]],["atmega_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC0%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC0%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC0.html\" title=\"struct atmega_hal::port::PC0\">PC0</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC1.html\" title=\"struct atmega_hal::port::PC1\">PC1</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC2.html\" title=\"struct atmega_hal::port::PC2\">PC2</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC3.html\" title=\"struct atmega_hal::port::PC3\">PC3</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC4.html\" title=\"struct atmega_hal::port::PC4\">PC4</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC5%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#impl-AdcChannel%3CAtmega,+ADC%3E-for-Pin%3CAnalog,+PC5%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"atmega_hal/struct.Atmega.html\" title=\"struct atmega_hal::Atmega\">Atmega</a>, <a class=\"struct\" href=\"atmega_hal/pac/struct.ADC.html\" title=\"struct atmega_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"atmega_hal/port/struct.PC5.html\" title=\"struct atmega_hal::port::PC5\">PC5</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atmega_hal/adc.rs.html#179-206\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"atmega_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum atmega_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Atmega, ADC>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#472\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.InputMode.html\" title=\"trait atmega_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#473\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#445\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#446\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#338\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#339\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#100\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PwmOutput.html\" title=\"struct atmega_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#101\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"avr_hal_generic/simple_pwm/enum.PwmError.html\" title=\"enum avr_hal_generic::simple_pwm::PwmError\">PwmError</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#460\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.InputMode.html\" title=\"trait atmega_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#461\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#463\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#467\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#476\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.InputMode.html\" title=\"trait atmega_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#477\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#481\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#433\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#434\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#436\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#440\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#449\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#450\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#454\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#56\">Source</a><a href=\"#impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.IntoPwmPin.html\" title=\"trait atmega_hal::simple_pwm::IntoPwmPin\">IntoPwmPin</a>&lt;TC, PIN&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_pwm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#57\">Source</a><a href=\"#method.into_pwm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atmega_hal/simple_pwm/trait.IntoPwmPin.html#tymethod.into_pwm\" class=\"fn\">into_pwm</a>(self, _timer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;TC</a>) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PwmOutput.html\" title=\"struct atmega_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;</h4></section></div></details>","IntoPwmPin<TC, PIN>","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#396\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#397\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#399\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#404\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#410\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#411\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#416\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#324\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#325\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#327\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#332\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#342\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#343\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#348\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CAnalog,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#517\">Source</a><a href=\"#impl-Pin%3CAnalog,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"analog-input\"><a class=\"doc-anchor\" href=\"#analog-input\">§</a>Analog Input</h4>\n<p>Some pins can be configured as ADC channels.  For those pins, <code>analog_read()</code> can be used to\nread the voltage.  <code>analog_read()</code> corresponds to a blocking ADC read:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>adc = atmega_hal::Adc::new(dp.ADC, Default::default());\n\n<span class=\"kw\">let </span>a0 = pins.pc0.into_analog_input(<span class=\"kw-2\">&amp;mut </span>adc);\n\n<span class=\"kw\">let </span>voltage = a0.analog_read(<span class=\"kw-2\">&amp;mut </span>adc);\n<span class=\"comment\">// ^- this is equivalent to -v\n</span><span class=\"kw\">let </span>voltage = adc.read_blocking(<span class=\"kw-2\">&amp;</span>a0);</code></pre></div>\n</div><div class=\"impl-items\"><section id=\"method.analog_read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#518-522\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.analog_read\" class=\"fn\">analog_read</a>&lt;H, ADC, CLOCK&gt;(&amp;self, adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a><div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcOps.html\" title=\"trait atmega_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"atmega_hal/clock/trait.Clock.html\" title=\"trait atmega_hal::clock::Clock\">Clock</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#532-535\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_channel\" class=\"fn\">into_channel</a>&lt;H, ADC&gt;(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\">Channel</a>&lt;H, ADC&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcOps.html\" title=\"trait atmega_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into a generic <a href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\"><code>Channel</code></a> type.</p>\n<p>The generic channel type can be used to store multiple channels in an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_digital\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#545-552\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_digital\" class=\"fn\">into_digital</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Floating.html\" title=\"struct atmega_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcOps.html\" title=\"trait atmega_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"atmega_hal/clock/trait.Clock.html\" title=\"trait atmega_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin to a floating digital input pin.</p>\n<p>The pin is re-enabled in the digital input buffer and is no longer usable as an analog\ninput. You can get to other digital modes by calling one of the usual <code>into_...</code> methods\non the return value of this function.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#275\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"input-mode-downgrading\"><a class=\"doc-anchor\" href=\"#input-mode-downgrading\">§</a>Input-Mode Downgrading</h4>\n<p>There is a second kind of downgrading: In some cases it is not important whether an input pin\nis configured as <a href=\"atmega_hal/port/mode/struct.PullUp.html\" title=\"struct atmega_hal::port::mode::PullUp\"><code>mode::PullUp</code></a> or <a href=\"atmega_hal/port/mode/struct.Floating.html\" title=\"struct atmega_hal::port::mode::Floating\"><code>mode::Floating</code></a>.  For this, you can “forget” the\nconcrete input mode, leaving you with a type that is the same for pull-up or floating inputs:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"comment\">// This demo uses downgraded pins, but it works just as well\n// with non-downgraded ones!\n</span><span class=\"kw\">let </span>input_pin1: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd0\n    .into_floating_input()\n    .downgrade();\n<span class=\"kw\">let </span>input_pin2: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd1\n    .into_pull_up_input()\n    .downgrade();\n\n<span class=\"comment\">// With the input mode \"forgotten\", they have the same type now,\n// even if electically different.\n</span><span class=\"kw\">let </span>any_inputs: [Pin&lt;mode::Input&gt;; <span class=\"number\">2</span>] = [\n    input_pin1.forget_imode(),\n    input_pin2.forget_imode(),\n];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forget_imode\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#278\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.forget_imode\" class=\"fn\">forget_imode</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about whether the pin is currently a pull-up or a floating\ninput.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#487\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.InputMode.html\" title=\"trait atmega_hal::port::mode::InputMode\">InputMode</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-input\"><a class=\"doc-anchor\" href=\"#digital-input\">§</a>Digital Input</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#490\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#496\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven low.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#130\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.Io.html\" title=\"trait atmega_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"configuration\"><a class=\"doc-anchor\" href=\"#configuration\">§</a>Configuration</h4>\n<p>To change the mode of a pin, use one of the following conversion functions.  They consume the\noriginal <a href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\"><code>Pin</code></a> and return one with the desired mode.  Only when a pin is in the correct mode,\ndoes it have the mode-relevant methods availailable (e.g. <code>set_high()</code> is only available for\n<code>Output</code> pins).</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#133\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output\" class=\"fn\">into_output</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to low.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#144\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output_high\" class=\"fn\">into_output_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to high.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#155\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain\" class=\"fn\">into_opendrain</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to low.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#166\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain_high\" class=\"fn\">into_opendrain_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to high.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_floating_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#178\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_floating_input\" class=\"fn\">into_floating_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Floating.html\" title=\"struct atmega_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a floating input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p><em>Note</em>: To read deterministic values from the pin, it must be externally pulled to a\ndefined level (either VCC or GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pull_up_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#189\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_pull_up_input\" class=\"fn\">into_pull_up_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Input.html\" title=\"struct atmega_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PullUp.html\" title=\"struct atmega_hal::port::mode::PullUp\">PullUp</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a pulled-up input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p>With no external circuit pulling the pin low, it will be read high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_analog_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#201-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_analog_input\" class=\"fn\">into_analog_input</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Analog.html\" title=\"struct atmega_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcChannel.html\" title=\"trait atmega_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"atmega_hal/adc/trait.AdcOps.html\" title=\"trait atmega_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"atmega_hal/clock/trait.Clock.html\" title=\"trait atmega_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into an analog input (ADC channel).  See <a href=\"#analog-input\">Analog Input</a>.</p>\n<p>Some pins can be repurposed as ADC channels.  For those pins, the <code>into_analog_input()</code>\nmethod is available.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#236\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"atmega_hal/port/mode/trait.Io.html\" title=\"trait atmega_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"downgrading\"><a class=\"doc-anchor\" href=\"#downgrading\">§</a>Downgrading</h4>\n<p>For applications where the exact pin is irrelevant, a specific pin can be downgraded to a\n“dynamic pin” which can represent any pin:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"kw\">let </span>any_output_pin1: Pin&lt;mode::Output&gt; = pins.pd0.into_output().downgrade();\n<span class=\"kw\">let </span>any_output_pin2: Pin&lt;mode::Output&gt; = pins.pd1.into_output().downgrade();\n\n<span class=\"comment\">// Because they now have the same type, you can, for example, stuff them into an array:\n</span><span class=\"kw\">let </span>pins: [Pin&lt;mode::Output&gt;; <span class=\"number\">2</span>] = [any_output_pin1, any_output_pin2];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#240\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, &lt;PIN as <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>&gt;::<a class=\"associatedtype\" href=\"atmega_hal/port/trait.PinOps.html#associatedtype.Dynamic\" title=\"type atmega_hal::port::PinOps::Dynamic\">Dynamic</a>&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about which specific pin is represented.</p>\n<p><em>Note</em>: The returned “dynamic” pin has runtime overhead compared to a specific pin.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#365\">Source</a><a href=\"#impl-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output-open-drain\"><a class=\"doc-anchor\" href=\"#digital-output-open-drain\">§</a>Digital Output Open Drain</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#368\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set the pin high (Input without PullUp so it is floating)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#374\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND, Output to low).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#382\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#287\">Source</a><a href=\"#impl-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output\"><a class=\"doc-anchor\" href=\"#digital-output\">§</a>Digital Output</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#290\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin high (pull it to supply voltage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#302\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.toggle\" class=\"fn\">toggle</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Toggle a high pin to low and a low pin to high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#310\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#318\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#65\">Source</a><a href=\"#impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PwmOutput.html\" title=\"struct atmega_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.enable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#66\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.enable\" class=\"fn\">enable</a>(&amp;mut self)</h4></section><section id=\"method.disable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#70\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.disable\" class=\"fn\">disable</a>(&amp;mut self)</h4></section><section id=\"method.get_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_duty\" class=\"fn\">get_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type atmega_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.get_max_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#78\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_max_duty\" class=\"fn\">get_max_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type atmega_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.set_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#82\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_duty\" class=\"fn\">set_duty</a>(&amp;mut self, duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>)</h4></section></div></details>",0,"atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#104\">Source</a><a href=\"#impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.SetDutyCycle.html\" title=\"trait embedded_hal::pwm::SetDutyCycle\">SetDutyCycle</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PwmOutput.html\" title=\"struct atmega_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait atmega_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC, Duty = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#105\">Source</a><a href=\"#method.max_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\" class=\"fn\">max_duty_cycle</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Get the maximum duty cycle value. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#109\">Source</a><a href=\"#method.set_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\" class=\"fn\">set_duty_cycle</a>(\n    &amp;mut self,\n    duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.PwmOutput.html\" title=\"struct atmega_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>duty / max_duty</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_off\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#84\">Source</a><a href=\"#method.set_duty_cycle_fully_off\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_off\" class=\"fn\">set_duty_cycle_fully_off</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 0%, or always inactive.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#90\">Source</a><a href=\"#method.set_duty_cycle_fully_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_on\" class=\"fn\">set_duty_cycle_fully_on</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 100%, or always active.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fraction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#99\">Source</a><a href=\"#method.set_duty_cycle_fraction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\" class=\"fn\">set_duty_cycle_fraction</a>(\n    &amp;mut self,\n    num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n    denom: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>num / denom</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_percent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#115\">Source</a><a href=\"#method.set_duty_cycle_percent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\" class=\"fn\">set_duty_cycle_percent</a>(&amp;mut self, percent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>percent / 100</code> <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\">Read more</a></div></details></div></details>","SetDutyCycle","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#422\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#423\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#427\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.OpenDrain.html\" title=\"struct atmega_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","atmega_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#354\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"atmega_hal/port/trait.PinOps.html\" title=\"trait atmega_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#355\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#359\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"atmega_hal/port/mode/struct.Output.html\" title=\"struct atmega_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","atmega_hal::port::Pin"]]],["attiny_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"attiny_hal/struct.Attiny.html\" title=\"struct attiny_hal::Attiny\">Attiny</a>, <a class=\"struct\" href=\"attiny_hal/pac/struct.ADC.html\" title=\"struct attiny_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"attiny_hal/port/struct.PB2.html\" title=\"struct attiny_hal::port::PB2\">PB2</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"attiny_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"attiny_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum attiny_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Attiny, ADC>","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"attiny_hal/struct.Attiny.html\" title=\"struct attiny_hal::Attiny\">Attiny</a>, <a class=\"struct\" href=\"attiny_hal/pac/struct.ADC.html\" title=\"struct attiny_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"attiny_hal/port/struct.PB3.html\" title=\"struct attiny_hal::port::PB3\">PB3</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"attiny_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"attiny_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum attiny_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Attiny, ADC>","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"attiny_hal/struct.Attiny.html\" title=\"struct attiny_hal::Attiny\">Attiny</a>, <a class=\"struct\" href=\"attiny_hal/pac/struct.ADC.html\" title=\"struct attiny_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"attiny_hal/port/struct.PB4.html\" title=\"struct attiny_hal::port::PB4\">PB4</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"attiny_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"attiny_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum attiny_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Attiny, ADC>","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB5%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#impl-AdcChannel%3CAttiny,+ADC%3E-for-Pin%3CAnalog,+PB5%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;<a class=\"struct\" href=\"attiny_hal/struct.Attiny.html\" title=\"struct attiny_hal::Attiny\">Attiny</a>, <a class=\"struct\" href=\"attiny_hal/pac/struct.ADC.html\" title=\"struct attiny_hal::pac::ADC\">ADC</a>&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, <a class=\"struct\" href=\"attiny_hal/port/struct.PB5.html\" title=\"struct attiny_hal::port::PB5\">PB5</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.channel\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/attiny_hal/adc.rs.html#105-133\">Source</a><a href=\"#method.channel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"attiny_hal/adc/trait.AdcChannel.html#tymethod.channel\" class=\"fn\">channel</a>(&amp;self) -&gt; <a class=\"enum\" href=\"attiny_hal/pac/adc/admux/enum.MUX_A.html\" title=\"enum attiny_hal::pac::adc::admux::MUX_A\">MUX_A</a></h4></section></div></details>","AdcChannel<Attiny, ADC>","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#472\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.InputMode.html\" title=\"trait attiny_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#473\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#445\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#446\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#338\">Source</a><a href=\"#impl-ErrorType-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#339\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#100\">Source</a><a href=\"#impl-ErrorType-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PwmOutput.html\" title=\"struct attiny_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#101\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"avr_hal_generic/simple_pwm/enum.PwmError.html\" title=\"enum avr_hal_generic::simple_pwm::PwmError\">PwmError</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#460\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.InputMode.html\" title=\"trait attiny_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#461\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#463\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#467\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#476\">Source</a><a href=\"#impl-InputPin-for-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.InputMode.html\" title=\"trait attiny_hal::port::mode::InputMode\">InputMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#477\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#481\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#433\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#434\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#436\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#440\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.InputPin.html\" title=\"trait embedded_hal::digital::v2::InputPin\">InputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.InputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::InputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#449\">Source</a><a href=\"#impl-InputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.InputPin.html\" title=\"trait embedded_hal::digital::InputPin\">InputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#450\">Source</a><a href=\"#method.is_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin high?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#454\">Source</a><a href=\"#method.is_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.InputPin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the input pin low?</div></details></div></details>","InputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#56\">Source</a><a href=\"#impl-IntoPwmPin%3CTC,+PIN%3E-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.IntoPwmPin.html\" title=\"trait attiny_hal::simple_pwm::IntoPwmPin\">IntoPwmPin</a>&lt;TC, PIN&gt; for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_pwm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#57\">Source</a><a href=\"#method.into_pwm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"attiny_hal/simple_pwm/trait.IntoPwmPin.html#tymethod.into_pwm\" class=\"fn\">into_pwm</a>(self, _timer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;TC</a>) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PwmOutput.html\" title=\"struct attiny_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;</h4></section></div></details>","IntoPwmPin<TC, PIN>","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#396\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#397\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#399\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#404\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#410\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#411\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#416\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#324\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#325\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#327\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#332\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/v2/trait.OutputPin.html\" title=\"trait embedded_hal::digital::v2::OutputPin\">OutputPin</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital/v2.rs.html#66\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/v2/enum.PinState.html\" title=\"enum embedded_hal::digital::v2::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/v2/trait.OutputPin.html#associatedtype.Error\" title=\"type embedded_hal::digital::v2::OutputPin::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value <a href=\"embedded_hal/digital/v2/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#342\">Source</a><a href=\"#impl-OutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#343\">Source</a><a href=\"#method.set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin low. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#348\">Source</a><a href=\"#method.set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high. <a href=\"embedded_hal/digital/trait.OutputPin.html#tymethod.set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#142\">Source</a><a href=\"#method.set_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\" class=\"fn\">set_state</a>(&amp;mut self, state: <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Drives the pin high or low depending on the provided value. <a href=\"embedded_hal/digital/trait.OutputPin.html#method.set_state\">Read more</a></div></details></div></details>","OutputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CAnalog,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#517\">Source</a><a href=\"#impl-Pin%3CAnalog,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"analog-input\"><a class=\"doc-anchor\" href=\"#analog-input\">§</a>Analog Input</h4>\n<p>Some pins can be configured as ADC channels.  For those pins, <code>analog_read()</code> can be used to\nread the voltage.  <code>analog_read()</code> corresponds to a blocking ADC read:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>adc = atmega_hal::Adc::new(dp.ADC, Default::default());\n\n<span class=\"kw\">let </span>a0 = pins.pc0.into_analog_input(<span class=\"kw-2\">&amp;mut </span>adc);\n\n<span class=\"kw\">let </span>voltage = a0.analog_read(<span class=\"kw-2\">&amp;mut </span>adc);\n<span class=\"comment\">// ^- this is equivalent to -v\n</span><span class=\"kw\">let </span>voltage = adc.read_blocking(<span class=\"kw-2\">&amp;</span>a0);</code></pre></div>\n</div><div class=\"impl-items\"><section id=\"method.analog_read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#518-522\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.analog_read\" class=\"fn\">analog_read</a>&lt;H, ADC, CLOCK&gt;(&amp;self, adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a><div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcOps.html\" title=\"trait attiny_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"attiny_hal/clock/trait.Clock.html\" title=\"trait attiny_hal::clock::Clock\">Clock</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#532-535\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_channel\" class=\"fn\">into_channel</a>&lt;H, ADC&gt;(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\">Channel</a>&lt;H, ADC&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcOps.html\" title=\"trait attiny_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into a generic <a href=\"avr_hal_generic/adc/struct.Channel.html\" title=\"struct avr_hal_generic::adc::Channel\"><code>Channel</code></a> type.</p>\n<p>The generic channel type can be used to store multiple channels in an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_digital\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#545-552\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_digital\" class=\"fn\">into_digital</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Floating.html\" title=\"struct attiny_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcOps.html\" title=\"trait attiny_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"attiny_hal/clock/trait.Clock.html\" title=\"trait attiny_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin to a floating digital input pin.</p>\n<p>The pin is re-enabled in the digital input buffer and is no longer usable as an analog\ninput. You can get to other digital modes by calling one of the usual <code>into_...</code> methods\non the return value of this function.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#275\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"input-mode-downgrading\"><a class=\"doc-anchor\" href=\"#input-mode-downgrading\">§</a>Input-Mode Downgrading</h4>\n<p>There is a second kind of downgrading: In some cases it is not important whether an input pin\nis configured as <a href=\"attiny_hal/port/mode/struct.PullUp.html\" title=\"struct attiny_hal::port::mode::PullUp\"><code>mode::PullUp</code></a> or <a href=\"attiny_hal/port/mode/struct.Floating.html\" title=\"struct attiny_hal::port::mode::Floating\"><code>mode::Floating</code></a>.  For this, you can “forget” the\nconcrete input mode, leaving you with a type that is the same for pull-up or floating inputs:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"comment\">// This demo uses downgraded pins, but it works just as well\n// with non-downgraded ones!\n</span><span class=\"kw\">let </span>input_pin1: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd0\n    .into_floating_input()\n    .downgrade();\n<span class=\"kw\">let </span>input_pin2: Pin&lt;mode::Input&lt;mode::Floating&gt;&gt; = pins.pd1\n    .into_pull_up_input()\n    .downgrade();\n\n<span class=\"comment\">// With the input mode \"forgotten\", they have the same type now,\n// even if electically different.\n</span><span class=\"kw\">let </span>any_inputs: [Pin&lt;mode::Input&gt;; <span class=\"number\">2</span>] = [\n    input_pin1.forget_imode(),\n    input_pin2.forget_imode(),\n];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forget_imode\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#278\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.forget_imode\" class=\"fn\">forget_imode</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about whether the pin is currently a pull-up or a floating\ninput.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#487\">Source</a><a href=\"#impl-Pin%3CInput%3CIMODE%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, IMODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;IMODE&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    IMODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.InputMode.html\" title=\"trait attiny_hal::port::mode::InputMode\">InputMode</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-input\"><a class=\"doc-anchor\" href=\"#digital-input\">§</a>Digital Input</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#490\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#496\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is driven low.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#130\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.Io.html\" title=\"trait attiny_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"configuration\"><a class=\"doc-anchor\" href=\"#configuration\">§</a>Configuration</h4>\n<p>To change the mode of a pin, use one of the following conversion functions.  They consume the\noriginal <a href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\"><code>Pin</code></a> and return one with the desired mode.  Only when a pin is in the correct mode,\ndoes it have the mode-relevant methods availailable (e.g. <code>set_high()</code> is only available for\n<code>Output</code> pins).</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#133\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output\" class=\"fn\">into_output</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to low.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_output_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#144\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_output_high\" class=\"fn\">into_output_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an output pin, setting the state to high.\nSee <a href=\"#digital-output\">Digital Output</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#155\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain\" class=\"fn\">into_opendrain</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to low.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_opendrain_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#166\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_opendrain_high\" class=\"fn\">into_opendrain_high</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into an open-drain output pin, setting the state to high.\nSee <a href=\"#digital-output-open-drain\">Digital Output Open Drain</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_floating_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#178\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_floating_input\" class=\"fn\">into_floating_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Floating.html\" title=\"struct attiny_hal::port::mode::Floating\">Floating</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a floating input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p><em>Note</em>: To read deterministic values from the pin, it must be externally pulled to a\ndefined level (either VCC or GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pull_up_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#189\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_pull_up_input\" class=\"fn\">into_pull_up_input</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Input.html\" title=\"struct attiny_hal::port::mode::Input\">Input</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PullUp.html\" title=\"struct attiny_hal::port::mode::PullUp\">PullUp</a>&gt;, PIN&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this pin into a pulled-up input pin.  See <a href=\"#digital-input\">Digital Input</a>.</p>\n<p>With no external circuit pulling the pin low, it will be read high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_analog_input\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#201-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.into_analog_input\" class=\"fn\">into_analog_input</a>&lt;H, ADC, CLOCK&gt;(\n    self,\n    adc: &amp;mut <a class=\"struct\" href=\"avr_hal_generic/adc/struct.Adc.html\" title=\"struct avr_hal_generic::adc::Adc\">Adc</a>&lt;H, ADC, CLOCK&gt;,\n) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Analog.html\" title=\"struct attiny_hal::port::mode::Analog\">Analog</a>, PIN&gt;: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcChannel.html\" title=\"trait attiny_hal::adc::AdcChannel\">AdcChannel</a>&lt;H, ADC&gt;,\n    ADC: <a class=\"trait\" href=\"attiny_hal/adc/trait.AdcOps.html\" title=\"trait attiny_hal::adc::AdcOps\">AdcOps</a>&lt;H&gt;,\n    CLOCK: <a class=\"trait\" href=\"attiny_hal/clock/trait.Clock.html\" title=\"trait attiny_hal::clock::Clock\">Clock</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert this pin into an analog input (ADC channel).  See <a href=\"#analog-input\">Analog Input</a>.</p>\n<p>Some pins can be repurposed as ADC channels.  For those pins, the <code>into_analog_input()</code>\nmethod is available.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CMODE,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#236\">Source</a><a href=\"#impl-Pin%3CMODE,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN, MODE&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,\n    MODE: <a class=\"trait\" href=\"attiny_hal/port/mode/trait.Io.html\" title=\"trait attiny_hal::port::mode::Io\">Io</a>,</div></h3><div class=\"docblock\"><h4 id=\"downgrading\"><a class=\"doc-anchor\" href=\"#downgrading\">§</a>Downgrading</h4>\n<p>For applications where the exact pin is irrelevant, a specific pin can be downgraded to a\n“dynamic pin” which can represent any pin:</p>\n</div></section></summary><div class=\"docblock\">\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>atmega_hal::port::{Pin, mode};\n\n<span class=\"kw\">let </span>dp = atmega_hal::Peripherals::take().unwrap();\n<span class=\"kw\">let </span>pins = <span class=\"macro\">atmega_hal::pins!</span>(dp);\n\n<span class=\"kw\">let </span>any_output_pin1: Pin&lt;mode::Output&gt; = pins.pd0.into_output().downgrade();\n<span class=\"kw\">let </span>any_output_pin2: Pin&lt;mode::Output&gt; = pins.pd1.into_output().downgrade();\n\n<span class=\"comment\">// Because they now have the same type, you can, for example, stuff them into an array:\n</span><span class=\"kw\">let </span>pins: [Pin&lt;mode::Output&gt;; <span class=\"number\">2</span>] = [any_output_pin1, any_output_pin2];</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#240\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(self) -&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;MODE, &lt;PIN as <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>&gt;::<a class=\"associatedtype\" href=\"attiny_hal/port/trait.PinOps.html#associatedtype.Dynamic\" title=\"type attiny_hal::port::PinOps::Dynamic\">Dynamic</a>&gt;</h4></section></summary><div class=\"docblock\"><p>“Erase” type-level information about which specific pin is represented.</p>\n<p><em>Note</em>: The returned “dynamic” pin has runtime overhead compared to a specific pin.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#365\">Source</a><a href=\"#impl-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output-open-drain\"><a class=\"doc-anchor\" href=\"#digital-output-open-drain\">§</a>Digital Output Open Drain</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#368\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set the pin high (Input without PullUp so it is floating)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#374\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND, Output to low).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#382\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_high\" class=\"fn\">is_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_low\" class=\"fn\">is_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#287\">Source</a><a href=\"#impl-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3><div class=\"docblock\"><h4 id=\"digital-output\"><a class=\"doc-anchor\" href=\"#digital-output\">§</a>Digital Output</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#290\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_high\" class=\"fn\">set_high</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin high (pull it to supply voltage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_low\" class=\"fn\">set_low</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Set pin low (pull it to GND).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#302\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.toggle\" class=\"fn\">toggle</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Toggle a high pin to low and a low pin to high.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#310\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set high.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#318\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the pin is set low.</p>\n<p><em>Note</em>: The electrical state of the pin might differ due to external circuitry.</p>\n</div></details></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#65\">Source</a><a href=\"#impl-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PwmOutput.html\" title=\"struct attiny_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.enable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#66\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.enable\" class=\"fn\">enable</a>(&amp;mut self)</h4></section><section id=\"method.disable\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#70\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.disable\" class=\"fn\">disable</a>(&amp;mut self)</h4></section><section id=\"method.get_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_duty\" class=\"fn\">get_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type attiny_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.get_max_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#78\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.get_max_duty\" class=\"fn\">get_max_duty</a>(&amp;self) -&gt; &lt;PIN as <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC&gt;&gt;::<a class=\"associatedtype\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html#associatedtype.Duty\" title=\"type attiny_hal::simple_pwm::PwmPinOps::Duty\">Duty</a></h4></section><section id=\"method.set_duty\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#82\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_hal_generic/port/struct.Pin.html#tymethod.set_duty\" class=\"fn\">set_duty</a>(&amp;mut self, duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>)</h4></section></div></details>",0,"attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#104\">Source</a><a href=\"#impl-SetDutyCycle-for-Pin%3CPwmOutput%3CTC%3E,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TC, PIN&gt; <a class=\"trait\" href=\"embedded_hal/pwm/trait.SetDutyCycle.html\" title=\"trait embedded_hal::pwm::SetDutyCycle\">SetDutyCycle</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PwmOutput.html\" title=\"struct attiny_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/simple_pwm/trait.PwmPinOps.html\" title=\"trait attiny_hal::simple_pwm::PwmPinOps\">PwmPinOps</a>&lt;TC, Duty = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#105\">Source</a><a href=\"#method.max_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\" class=\"fn\">max_duty_cycle</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Get the maximum duty cycle value. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.max_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/simple_pwm.rs.html#109\">Source</a><a href=\"#method.set_duty_cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\" class=\"fn\">set_duty_cycle</a>(\n    &amp;mut self,\n    duty: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.PwmOutput.html\" title=\"struct attiny_hal::port::mode::PwmOutput\">PwmOutput</a>&lt;TC&gt;, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/pwm/trait.ErrorType.html\" title=\"trait embedded_hal::pwm::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>duty / max_duty</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#tymethod.set_duty_cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_off\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#84\">Source</a><a href=\"#method.set_duty_cycle_fully_off\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_off\" class=\"fn\">set_duty_cycle_fully_off</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 0%, or always inactive.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fully_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#90\">Source</a><a href=\"#method.set_duty_cycle_fully_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fully_on\" class=\"fn\">set_duty_cycle_fully_on</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to 100%, or always active.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_fraction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#99\">Source</a><a href=\"#method.set_duty_cycle_fraction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\" class=\"fn\">set_duty_cycle_fraction</a>(\n    &amp;mut self,\n    num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n    denom: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>num / denom</code>. <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_fraction\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_duty_cycle_percent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/pwm.rs.html#115\">Source</a><a href=\"#method.set_duty_cycle_percent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\" class=\"fn\">set_duty_cycle_percent</a>(&amp;mut self, percent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/pwm/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::pwm::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the duty cycle to <code>percent / 100</code> <a href=\"embedded_hal/pwm/trait.SetDutyCycle.html#method.set_duty_cycle_percent\">Read more</a></div></details></div></details>","SetDutyCycle","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#422\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COpenDrain,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#423\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#427\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.OpenDrain.html\" title=\"struct attiny_hal::port::mode::OpenDrain\">OpenDrain</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","attiny_hal::port::Pin"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#354\">Source</a><a href=\"#impl-StatefulOutputPin-for-Pin%3COutput,+PIN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;PIN&gt; <a class=\"trait\" href=\"embedded_hal/digital/trait.StatefulOutputPin.html\" title=\"trait embedded_hal::digital::StatefulOutputPin\">StatefulOutputPin</a> for <a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt;<div class=\"where\">where\n    PIN: <a class=\"trait\" href=\"attiny_hal/port/trait.PinOps.html\" title=\"trait attiny_hal::port::PinOps\">PinOps</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_high\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#355\">Source</a><a href=\"#method.is_set_high\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\" class=\"fn\">is_set_high</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive high mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_high\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_set_low\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/avr_hal_generic/port.rs.html#359\">Source</a><a href=\"#method.is_set_low\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\" class=\"fn\">is_set_low</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a>, &lt;<a class=\"struct\" href=\"avr_hal_generic/port/struct.Pin.html\" title=\"struct avr_hal_generic::port::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"attiny_hal/port/mode/struct.Output.html\" title=\"struct attiny_hal::port::mode::Output\">Output</a>, PIN&gt; as <a class=\"trait\" href=\"embedded_hal/digital/trait.ErrorType.html\" title=\"trait embedded_hal::digital::ErrorType\">ErrorType</a>&gt;::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Is the pin in drive low mode? <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#tymethod.is_set_low\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_hal/digital.rs.html#180\">Source</a><a href=\"#method.toggle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/digital/trait.StatefulOutputPin.html#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/digital/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::digital::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Toggle pin output.</div></details></div></details>","StatefulOutputPin","attiny_hal::port::Pin"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[107052,106399,103087]}