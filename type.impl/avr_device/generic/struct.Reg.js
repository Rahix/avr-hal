(function() {
    var type_impls = Object.fromEntries([["atmega_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#110\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#124\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.read\" class=\"fn\">read</a>(&amp;self) -&gt; &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a></h4></section></summary><div class=\"docblock\"><p>Reads the contents of a <code>Readable</code> register.</p>\n<p>You can read the raw contents of a register by using <code>bits</code>:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bits = periph.reg.read().bits();</code></pre></div>\n<p>or get the content of a particular field of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reader = periph.reg.read();\n<span class=\"kw\">let </span>bits = reader.field1().bits();\n<span class=\"kw\">let </span>flag = reader.field2().bit_is_set();</code></pre></div>\n</div></details></div></details>",0,"atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#132\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Resettable.html\" title=\"trait avr_device::generic::Resettable\">Resettable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Writes the reset value to <code>Writable</code> register.</p>\n<p>Resets the register to its initial state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#165-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write\" class=\"fn\">write</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes bits to a <code>Writable</code> register.</p>\n<p>You can write raw bits into a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| <span class=\"kw\">unsafe </span>{ w.bits(rawbits) });</code></pre></div>\n<p>or write only the fields you need:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>In the latter case, other fields will be set to their reset value.</p>\n</div></details></div></details>",0,"atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#180\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_with_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#189-191\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write_with_zero\" class=\"fn\">write_with_zero</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes 0 to a <code>Writable</code> register.</p>\n<p>Similar to <code>write</code>, but unused bits will contain 0.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Unsafe to use with registers which don’t allow to write 0.</p>\n</div></details></div></details>",0,"atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#203\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#230-232\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.modify\" class=\"fn\">modify</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: for&lt;'w&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;&lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a>, &amp;'w mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;'w mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Modifies the contents of the register by reading and then writing it.</p>\n<p>E.g. to do a read-modify-write sequence to change parts of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|r, w| <span class=\"kw\">unsafe </span>{ w.bits(\n   r.bits() | <span class=\"number\">3\n</span>) });</code></pre></div>\n<p>or</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>Other fields will have the value they had before the call to <code>modify</code>.</p>\n</div></details></div></details>",0,"atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#98\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#105\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*mut </a>&lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying memory address of register.</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reg_ptr = periph.reg.as_ptr();</code></pre></div>\n</div></details></div></details>",0,"atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"],["<section id=\"impl-Send-for-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#96\">Source</a><a href=\"#impl-Send-for-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>,\n    &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","atmega_hal::pac::ac::ACSR","atmega_hal::pac::ac::DIDR1","atmega_hal::pac::adc::ADC","atmega_hal::pac::adc::ADCSRA","atmega_hal::pac::adc::ADCSRB","atmega_hal::pac::adc::ADMUX","atmega_hal::pac::adc::DIDR0","atmega_hal::pac::cpu::CLKPR","atmega_hal::pac::cpu::GPIOR0","atmega_hal::pac::cpu::GPIOR1","atmega_hal::pac::cpu::GPIOR2","atmega_hal::pac::cpu::MCUCR","atmega_hal::pac::cpu::MCUSR","atmega_hal::pac::cpu::OSCCAL","atmega_hal::pac::cpu::PRR","atmega_hal::pac::cpu::SMCR","atmega_hal::pac::cpu::SPMCSR","atmega_hal::pac::eeprom::EEAR","atmega_hal::pac::eeprom::EECR","atmega_hal::pac::eeprom::EEDR","atmega_hal::pac::exint::EICRA","atmega_hal::pac::exint::EIFR","atmega_hal::pac::exint::EIMSK","atmega_hal::pac::exint::PCICR","atmega_hal::pac::exint::PCIFR","atmega_hal::pac::exint::PCMSK0","atmega_hal::pac::exint::PCMSK1","atmega_hal::pac::exint::PCMSK2","atmega_hal::pac::fuse::EXTENDED","atmega_hal::pac::fuse::HIGH","atmega_hal::pac::fuse::LOW","atmega_hal::pac::lockbit::LOCKBIT","atmega_hal::pac::portb::DDRB","atmega_hal::pac::portb::PINB","atmega_hal::pac::portb::PORTB","atmega_hal::pac::portc::DDRC","atmega_hal::pac::portc::PINC","atmega_hal::pac::portc::PORTC","atmega_hal::pac::portd::DDRD","atmega_hal::pac::portd::PIND","atmega_hal::pac::portd::PORTD","atmega_hal::pac::spi::SPCR","atmega_hal::pac::spi::SPDR","atmega_hal::pac::spi::SPSR","atmega_hal::pac::tc0::GTCCR","atmega_hal::pac::tc0::OCR0A","atmega_hal::pac::tc0::OCR0B","atmega_hal::pac::tc0::TCCR0A","atmega_hal::pac::tc0::TCCR0B","atmega_hal::pac::tc0::TCNT0","atmega_hal::pac::tc0::TIFR0","atmega_hal::pac::tc0::TIMSK0","atmega_hal::pac::tc1::GTCCR","atmega_hal::pac::tc1::ICR1","atmega_hal::pac::tc1::OCR1A","atmega_hal::pac::tc1::OCR1B","atmega_hal::pac::tc1::TCCR1A","atmega_hal::pac::tc1::TCCR1B","atmega_hal::pac::tc1::TCCR1C","atmega_hal::pac::tc1::TCNT1","atmega_hal::pac::tc1::TIFR1","atmega_hal::pac::tc1::TIMSK1","atmega_hal::pac::tc2::ASSR","atmega_hal::pac::tc2::GTCCR","atmega_hal::pac::tc2::OCR2A","atmega_hal::pac::tc2::OCR2B","atmega_hal::pac::tc2::TCCR2A","atmega_hal::pac::tc2::TCCR2B","atmega_hal::pac::tc2::TCNT2","atmega_hal::pac::tc2::TIFR2","atmega_hal::pac::tc2::TIMSK2","atmega_hal::pac::twi::TWAMR","atmega_hal::pac::twi::TWAR","atmega_hal::pac::twi::TWBR","atmega_hal::pac::twi::TWCR","atmega_hal::pac::twi::TWDR","atmega_hal::pac::twi::TWSR","atmega_hal::pac::usart0::UBRR0","atmega_hal::pac::usart0::UCSR0A","atmega_hal::pac::usart0::UCSR0B","atmega_hal::pac::usart0::UCSR0C","atmega_hal::pac::usart0::UDR0","atmega_hal::pac::wdt::WDTCSR"]]],["attiny_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#110\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#124\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.read\" class=\"fn\">read</a>(&amp;self) -&gt; &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a></h4></section></summary><div class=\"docblock\"><p>Reads the contents of a <code>Readable</code> register.</p>\n<p>You can read the raw contents of a register by using <code>bits</code>:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bits = periph.reg.read().bits();</code></pre></div>\n<p>or get the content of a particular field of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reader = periph.reg.read();\n<span class=\"kw\">let </span>bits = reader.field1().bits();\n<span class=\"kw\">let </span>flag = reader.field2().bit_is_set();</code></pre></div>\n</div></details></div></details>",0,"attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#132\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Resettable.html\" title=\"trait avr_device::generic::Resettable\">Resettable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Writes the reset value to <code>Writable</code> register.</p>\n<p>Resets the register to its initial state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#165-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write\" class=\"fn\">write</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes bits to a <code>Writable</code> register.</p>\n<p>You can write raw bits into a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| <span class=\"kw\">unsafe </span>{ w.bits(rawbits) });</code></pre></div>\n<p>or write only the fields you need:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>In the latter case, other fields will be set to their reset value.</p>\n</div></details></div></details>",0,"attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#180\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_with_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#189-191\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write_with_zero\" class=\"fn\">write_with_zero</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes 0 to a <code>Writable</code> register.</p>\n<p>Similar to <code>write</code>, but unused bits will contain 0.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Unsafe to use with registers which don’t allow to write 0.</p>\n</div></details></div></details>",0,"attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#203\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#230-232\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.modify\" class=\"fn\">modify</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: for&lt;'w&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;&lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a>, &amp;'w mut &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;'w mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Modifies the contents of the register by reading and then writing it.</p>\n<p>E.g. to do a read-modify-write sequence to change parts of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|r, w| <span class=\"kw\">unsafe </span>{ w.bits(\n   r.bits() | <span class=\"number\">3\n</span>) });</code></pre></div>\n<p>or</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>Other fields will have the value they had before the call to <code>modify</code>.</p>\n</div></details></div></details>",0,"attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#98\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#105\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*mut </a>&lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying memory address of register.</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reg_ptr = periph.reg.as_ptr();</code></pre></div>\n</div></details></div></details>",0,"attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"],["<section id=\"impl-Send-for-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#96\">Source</a><a href=\"#impl-Send-for-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>,\n    &lt;REG as <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt;::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","attiny_hal::pac::ac::ACSR","attiny_hal::pac::ac::ADCSRB","attiny_hal::pac::ac::DIDR0","attiny_hal::pac::adc::ADC","attiny_hal::pac::adc::ADCSRA","attiny_hal::pac::adc::ADCSRB","attiny_hal::pac::adc::ADMUX","attiny_hal::pac::adc::DIDR0","attiny_hal::pac::boot_load::SPMCSR","attiny_hal::pac::cpu::CLKPR","attiny_hal::pac::cpu::DWDR","attiny_hal::pac::cpu::GPIOR0","attiny_hal::pac::cpu::GPIOR1","attiny_hal::pac::cpu::GPIOR2","attiny_hal::pac::cpu::MCUCR","attiny_hal::pac::cpu::MCUSR","attiny_hal::pac::cpu::OSCCAL","attiny_hal::pac::cpu::PLLCSR","attiny_hal::pac::cpu::PRR","attiny_hal::pac::eeprom::EEAR","attiny_hal::pac::eeprom::EECR","attiny_hal::pac::eeprom::EEDR","attiny_hal::pac::exint::GIFR","attiny_hal::pac::exint::GIMSK","attiny_hal::pac::exint::MCUCR","attiny_hal::pac::exint::PCMSK","attiny_hal::pac::fuse::EXTENDED","attiny_hal::pac::fuse::HIGH","attiny_hal::pac::fuse::LOW","attiny_hal::pac::lockbit::LOCKBIT","attiny_hal::pac::portb::DDRB","attiny_hal::pac::portb::PINB","attiny_hal::pac::portb::PORTB","attiny_hal::pac::tc0::GTCCR","attiny_hal::pac::tc0::OCR0A","attiny_hal::pac::tc0::OCR0B","attiny_hal::pac::tc0::TCCR0A","attiny_hal::pac::tc0::TCCR0B","attiny_hal::pac::tc0::TCNT0","attiny_hal::pac::tc0::TIFR","attiny_hal::pac::tc0::TIMSK","attiny_hal::pac::tc1::DT1A","attiny_hal::pac::tc1::DT1B","attiny_hal::pac::tc1::DTPS","attiny_hal::pac::tc1::GTCCR","attiny_hal::pac::tc1::OCR1A","attiny_hal::pac::tc1::OCR1B","attiny_hal::pac::tc1::OCR1C","attiny_hal::pac::tc1::TCCR1","attiny_hal::pac::tc1::TCNT1","attiny_hal::pac::tc1::TIFR","attiny_hal::pac::tc1::TIMSK","attiny_hal::pac::usi::USIBR","attiny_hal::pac::usi::USICR","attiny_hal::pac::usi::USIDR","attiny_hal::pac::usi::USISR","attiny_hal::pac::wdt::WDTCR"]]],["avr_device",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#110-130\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#124-129\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.read\" class=\"fn\">read</a>(&amp;self) -&gt; REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a></h4></section></summary><div class=\"docblock\"><p>Reads the contents of a <code>Readable</code> register.</p>\n<p>You can read the raw contents of a register by using <code>bits</code>:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bits = periph.reg.read().bits();</code></pre></div>\n<p>or get the content of a particular field of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reader = periph.reg.read();\n<span class=\"kw\">let </span>bits = reader.field1().bits();\n<span class=\"kw\">let </span>flag = reader.field2().bit_is_set();</code></pre></div>\n</div></details></div></details>",0,"avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#132-178\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Resettable.html\" title=\"trait avr_device::generic::Resettable\">Resettable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#137-139\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Writes the reset value to <code>Writable</code> register.</p>\n<p>Resets the register to its initial state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#165-177\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write\" class=\"fn\">write</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes bits to a <code>Writable</code> register.</p>\n<p>You can write raw bits into a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| <span class=\"kw\">unsafe </span>{ w.bits(rawbits) });</code></pre></div>\n<p>or write only the fields you need:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>In the latter case, other fields will be set to their reset value.</p>\n</div></details></div></details>",0,"avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#180-201\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_with_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#189-200\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write_with_zero\" class=\"fn\">write_with_zero</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes 0 to a <code>Writable</code> register.</p>\n<p>Similar to <code>write</code>, but unused bits will contain 0.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Unsafe to use with registers which don’t allow to write 0.</p>\n</div></details></div></details>",0,"avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#203-250\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#230-249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.modify\" class=\"fn\">modify</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    for&lt;'w&gt; F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a>, &amp;'w mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;'w mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Modifies the contents of the register by reading and then writing it.</p>\n<p>E.g. to do a read-modify-write sequence to change parts of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|r, w| <span class=\"kw\">unsafe </span>{ w.bits(\n   r.bits() | <span class=\"number\">3\n</span>) });</code></pre></div>\n<p>or</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>Other fields will have the value they had before the call to <code>modify</code>.</p>\n</div></details></div></details>",0,"avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#98-108\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#105-107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*mut </a>REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying memory address of register.</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reg_ptr = periph.reg.as_ptr();</code></pre></div>\n</div></details></div></details>",0,"avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"],["<section id=\"impl-Send-for-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#96\">Source</a><a href=\"#impl-Send-for-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","avr_device::devices::atmega328p::ac::ACSR","avr_device::devices::atmega328p::ac::DIDR1","avr_device::devices::atmega328p::adc::ADC","avr_device::devices::atmega328p::adc::ADCSRA","avr_device::devices::atmega328p::adc::ADCSRB","avr_device::devices::atmega328p::adc::ADMUX","avr_device::devices::atmega328p::adc::DIDR0","avr_device::devices::atmega328p::cpu::CLKPR","avr_device::devices::atmega328p::cpu::GPIOR0","avr_device::devices::atmega328p::cpu::GPIOR1","avr_device::devices::atmega328p::cpu::GPIOR2","avr_device::devices::atmega328p::cpu::MCUCR","avr_device::devices::atmega328p::cpu::MCUSR","avr_device::devices::atmega328p::cpu::OSCCAL","avr_device::devices::atmega328p::cpu::PRR","avr_device::devices::atmega328p::cpu::SMCR","avr_device::devices::atmega328p::cpu::SPMCSR","avr_device::devices::atmega328p::eeprom::EEAR","avr_device::devices::atmega328p::eeprom::EECR","avr_device::devices::atmega328p::eeprom::EEDR","avr_device::devices::atmega328p::exint::EICRA","avr_device::devices::atmega328p::exint::EIFR","avr_device::devices::atmega328p::exint::EIMSK","avr_device::devices::atmega328p::exint::PCICR","avr_device::devices::atmega328p::exint::PCIFR","avr_device::devices::atmega328p::exint::PCMSK0","avr_device::devices::atmega328p::exint::PCMSK1","avr_device::devices::atmega328p::exint::PCMSK2","avr_device::devices::atmega328p::fuse::EXTENDED","avr_device::devices::atmega328p::fuse::HIGH","avr_device::devices::atmega328p::fuse::LOW","avr_device::devices::atmega328p::lockbit::LOCKBIT","avr_device::devices::atmega328p::portb::DDRB","avr_device::devices::atmega328p::portb::PINB","avr_device::devices::atmega328p::portb::PORTB","avr_device::devices::atmega328p::portc::DDRC","avr_device::devices::atmega328p::portc::PINC","avr_device::devices::atmega328p::portc::PORTC","avr_device::devices::atmega328p::portd::DDRD","avr_device::devices::atmega328p::portd::PIND","avr_device::devices::atmega328p::portd::PORTD","avr_device::devices::atmega328p::spi::SPCR","avr_device::devices::atmega328p::spi::SPDR","avr_device::devices::atmega328p::spi::SPSR","avr_device::devices::atmega328p::tc0::GTCCR","avr_device::devices::atmega328p::tc0::OCR0A","avr_device::devices::atmega328p::tc0::OCR0B","avr_device::devices::atmega328p::tc0::TCCR0A","avr_device::devices::atmega328p::tc0::TCCR0B","avr_device::devices::atmega328p::tc0::TCNT0","avr_device::devices::atmega328p::tc0::TIFR0","avr_device::devices::atmega328p::tc0::TIMSK0","avr_device::devices::atmega328p::tc1::GTCCR","avr_device::devices::atmega328p::tc1::ICR1","avr_device::devices::atmega328p::tc1::OCR1A","avr_device::devices::atmega328p::tc1::OCR1B","avr_device::devices::atmega328p::tc1::TCCR1A","avr_device::devices::atmega328p::tc1::TCCR1B","avr_device::devices::atmega328p::tc1::TCCR1C","avr_device::devices::atmega328p::tc1::TCNT1","avr_device::devices::atmega328p::tc1::TIFR1","avr_device::devices::atmega328p::tc1::TIMSK1","avr_device::devices::atmega328p::tc2::ASSR","avr_device::devices::atmega328p::tc2::GTCCR","avr_device::devices::atmega328p::tc2::OCR2A","avr_device::devices::atmega328p::tc2::OCR2B","avr_device::devices::atmega328p::tc2::TCCR2A","avr_device::devices::atmega328p::tc2::TCCR2B","avr_device::devices::atmega328p::tc2::TCNT2","avr_device::devices::atmega328p::tc2::TIFR2","avr_device::devices::atmega328p::tc2::TIMSK2","avr_device::devices::atmega328p::twi::TWAMR","avr_device::devices::atmega328p::twi::TWAR","avr_device::devices::atmega328p::twi::TWBR","avr_device::devices::atmega328p::twi::TWCR","avr_device::devices::atmega328p::twi::TWDR","avr_device::devices::atmega328p::twi::TWSR","avr_device::devices::atmega328p::usart0::UBRR0","avr_device::devices::atmega328p::usart0::UCSR0A","avr_device::devices::atmega328p::usart0::UCSR0B","avr_device::devices::atmega328p::usart0::UCSR0C","avr_device::devices::atmega328p::usart0::UDR0","avr_device::devices::atmega328p::wdt::WDTCSR"]]],["avr_device",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#110-130\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#124-129\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.read\" class=\"fn\">read</a>(&amp;self) -&gt; REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a></h4></section></summary><div class=\"docblock\"><p>Reads the contents of a <code>Readable</code> register.</p>\n<p>You can read the raw contents of a register by using <code>bits</code>:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bits = periph.reg.read().bits();</code></pre></div>\n<p>or get the content of a particular field of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reader = periph.reg.read();\n<span class=\"kw\">let </span>bits = reader.field1().bits();\n<span class=\"kw\">let </span>flag = reader.field2().bit_is_set();</code></pre></div>\n</div></details></div></details>",0,"avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#132-178\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Resettable.html\" title=\"trait avr_device::generic::Resettable\">Resettable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#137-139\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Writes the reset value to <code>Writable</code> register.</p>\n<p>Resets the register to its initial state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#165-177\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write\" class=\"fn\">write</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes bits to a <code>Writable</code> register.</p>\n<p>You can write raw bits into a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| <span class=\"kw\">unsafe </span>{ w.bits(rawbits) });</code></pre></div>\n<p>or write only the fields you need:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.write(|w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>In the latter case, other fields will be set to their reset value.</p>\n</div></details></div></details>",0,"avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#180-201\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_with_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#189-200\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.write_with_zero\" class=\"fn\">write_with_zero</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Writes 0 to a <code>Writable</code> register.</p>\n<p>Similar to <code>write</code>, but unused bits will contain 0.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Unsafe to use with registers which don’t allow to write 0.</p>\n</div></details></div></details>",0,"avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#203-250\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.Readable.html\" title=\"trait avr_device::generic::Readable\">Readable</a> + <a class=\"trait\" href=\"avr_device/generic/trait.Writable.html\" title=\"trait avr_device::generic::Writable\">Writable</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#230-249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.modify\" class=\"fn\">modify</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    for&lt;'w&gt; F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Readable.html#associatedtype.Reader\" title=\"type avr_device::generic::Readable::Reader\">Reader</a>, &amp;'w mut REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.Writable.html#associatedtype.Writer\" title=\"type avr_device::generic::Writable::Writer\">Writer</a>) -&gt; &amp;'w mut <a class=\"struct\" href=\"avr_device/generic/struct.W.html\" title=\"struct avr_device::generic::W\">W</a>&lt;REG&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Modifies the contents of the register by reading and then writing it.</p>\n<p>E.g. to do a read-modify-write sequence to change parts of a register:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|r, w| <span class=\"kw\">unsafe </span>{ w.bits(\n   r.bits() | <span class=\"number\">3\n</span>) });</code></pre></div>\n<p>or</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| w\n    .field1().bits(newfield1bits)\n    .field2().set_bit()\n    .field3().variant(VARIANT)\n);</code></pre></div>\n<p>or an alternative way of saying the same:</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>periph.reg.modify(|<span class=\"kw\">_</span>, w| {\n    w.field1().bits(newfield1bits);\n    w.field2().set_bit();\n    w.field3().variant(VARIANT)\n});</code></pre></div>\n<p>Other fields will have the value they had before the call to <code>modify</code>.</p>\n</div></details></div></details>",0,"avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#98-108\">Source</a><a href=\"#impl-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt; <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#105-107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"avr_device/generic/struct.Reg.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*mut </a>REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying memory address of register.</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>reg_ptr = periph.reg.as_ptr();</code></pre></div>\n</div></details></div></details>",0,"avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"],["<section id=\"impl-Send-for-Reg%3CREG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/avr_device/generic.rs.html#96\">Source</a><a href=\"#impl-Send-for-Reg%3CREG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;REG: <a class=\"trait\" href=\"avr_device/generic/trait.RegisterSpec.html\" title=\"trait avr_device::generic::RegisterSpec\">RegisterSpec</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"avr_device/generic/struct.Reg.html\" title=\"struct avr_device::generic::Reg\">Reg</a>&lt;REG&gt;<div class=\"where\">where\n    REG::<a class=\"associatedtype\" href=\"avr_device/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type avr_device::generic::RegisterSpec::Ux\">Ux</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","avr_device::devices::attiny85::ac::ACSR","avr_device::devices::attiny85::ac::ADCSRB","avr_device::devices::attiny85::ac::DIDR0","avr_device::devices::attiny85::adc::ADC","avr_device::devices::attiny85::adc::ADCSRA","avr_device::devices::attiny85::adc::ADCSRB","avr_device::devices::attiny85::adc::ADMUX","avr_device::devices::attiny85::adc::DIDR0","avr_device::devices::attiny85::boot_load::SPMCSR","avr_device::devices::attiny85::cpu::CLKPR","avr_device::devices::attiny85::cpu::DWDR","avr_device::devices::attiny85::cpu::GPIOR0","avr_device::devices::attiny85::cpu::GPIOR1","avr_device::devices::attiny85::cpu::GPIOR2","avr_device::devices::attiny85::cpu::MCUCR","avr_device::devices::attiny85::cpu::MCUSR","avr_device::devices::attiny85::cpu::OSCCAL","avr_device::devices::attiny85::cpu::PLLCSR","avr_device::devices::attiny85::cpu::PRR","avr_device::devices::attiny85::eeprom::EEAR","avr_device::devices::attiny85::eeprom::EECR","avr_device::devices::attiny85::eeprom::EEDR","avr_device::devices::attiny85::exint::GIFR","avr_device::devices::attiny85::exint::GIMSK","avr_device::devices::attiny85::exint::MCUCR","avr_device::devices::attiny85::exint::PCMSK","avr_device::devices::attiny85::fuse::EXTENDED","avr_device::devices::attiny85::fuse::HIGH","avr_device::devices::attiny85::fuse::LOW","avr_device::devices::attiny85::lockbit::LOCKBIT","avr_device::devices::attiny85::portb::DDRB","avr_device::devices::attiny85::portb::PINB","avr_device::devices::attiny85::portb::PORTB","avr_device::devices::attiny85::tc0::GTCCR","avr_device::devices::attiny85::tc0::OCR0A","avr_device::devices::attiny85::tc0::OCR0B","avr_device::devices::attiny85::tc0::TCCR0A","avr_device::devices::attiny85::tc0::TCCR0B","avr_device::devices::attiny85::tc0::TCNT0","avr_device::devices::attiny85::tc0::TIFR","avr_device::devices::attiny85::tc0::TIMSK","avr_device::devices::attiny85::tc1::DT1A","avr_device::devices::attiny85::tc1::DT1B","avr_device::devices::attiny85::tc1::DTPS","avr_device::devices::attiny85::tc1::GTCCR","avr_device::devices::attiny85::tc1::OCR1A","avr_device::devices::attiny85::tc1::OCR1B","avr_device::devices::attiny85::tc1::OCR1C","avr_device::devices::attiny85::tc1::TCCR1","avr_device::devices::attiny85::tc1::TCNT1","avr_device::devices::attiny85::tc1::TIFR","avr_device::devices::attiny85::tc1::TIMSK","avr_device::devices::attiny85::usi::USIBR","avr_device::devices::attiny85::usi::USICR","avr_device::devices::attiny85::usi::USIDR","avr_device::devices::attiny85::usi::USISR","avr_device::devices::attiny85::wdt::WDTCR"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[29283,24406,36081,28023]}