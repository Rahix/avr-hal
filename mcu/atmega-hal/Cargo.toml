[package]
name = "atmega-hal"
version = "0.4.0"

authors = ["Rahix <rahix@rahix.de>"]
edition = "2021"
description = "HAL crate for ATmega-series AVR microcontrollers"
license = "MIT OR Apache-2.0"
repository = "https://github.com/rahix/avr-hal"
keywords = ["avr", "arduino"]
categories = ["no-std", "embedded", "hardware-support"]

[features]
rt = ["avr-device/rt"]
enable-extra-adc = []

# MCU-specific targets. 
atmega48p = ["_mcu-atmega48p"]
atmega164pa = ["_mcu-atmega164pa"]
atmega168 = ["_mcu-atmega168"]
atmega328p = ["_mcu-atmega328p"]
atmega328pb = ["_mcu-atmega328pb"]
atmega32a = ["_mcu-atmega32a"]
atmega32u4 = ["_mcu-atmega32u4"]
atmega2560 = ["_mcu-atmega2560"]
atmega128a = ["_mcu-atmega128a"]
atmega1280 = ["_mcu-atmega1280"]
atmega1284p = ["_mcu-atmega1284p"]
atmega8 = ["_mcu-atmega8"]

critical-section-impl = ["avr-device/critical-section-impl"]

default = []

docsrs = [
    "atmega48p",
    "atmega164pa",
    "atmega168",
    "atmega328p",
    "atmega328pb",
    "atmega32a",
    "atmega32u4",
    "atmega2560",
    "atmega128a",
    "atmega1280",
    "atmega1284p",
    "atmega8",
]

# If using this crate from another library crate you may want to suppress this error and provide your own
disable-device-selection-error = []

# MCU-specific implementation features
_mcu-atmega48p = ["_mcu-selected", "_peripheral-spi", "_peripheral-simple-pwm", "avr-device/atmega48p"]
_mcu-atmega164pa = ["_mcu-selected", "_peripheral-usart", "_peripheral-simple-pwm", "avr-device/atmega164pa"]
_mcu-atmega168 = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega168",
]
_mcu-atmega328p = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega328p",
]
_mcu-atmega328pb = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega328pb",
]
_mcu-atmega32a = ["_mcu-selected", "_peripheral-usart", "_peripheral-spi", "avr-device/atmega32a"]
_mcu-atmega32u4 = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega32u4",
]
_mcu-atmega2560 = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega2560",
]
_mcu-atmega128a = ["_mcu-selected", "_peripheral-usart", "_peripheral-spi", "avr-device/atmega128a"]
_mcu-atmega1280 = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega1280",
]
_mcu-atmega1284p = [
    "_mcu-selected",
    "_peripheral-usart",
    "_peripheral-spi",
    "_peripheral-simple-pwm",
    "avr-device/atmega1284p",
]
_mcu-atmega8 = ["_mcu-selected", "_peripheral-usart", "_peripheral-spi", "_peripheral-simple-pwm", "avr-device/atmega8"]

_mcu-selected = []
_peripheral-simple-pwm = []
_peripheral-spi = []
_peripheral-usart = []

[dependencies]
avr-hal-generic = { path = "../../avr-hal-generic/" }

[dependencies.avr-device]
version = "0.5.4"

# Because this crate has its own check that at least one device is selected, we
# can safely "circumvent" the check in `avr-device`.
#
# Why would we want that?  Otherwise, as `avr-device` is compiled first, its
# error will be shown and ours won't which leads to a degraded user experience
# as the displayed error message does not really tell what needs to be done...
features = ["device-selected"]

[package.metadata.docs.rs]
features = ["docsrs"]
