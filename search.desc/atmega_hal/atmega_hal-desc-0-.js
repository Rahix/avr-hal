searchState.loadedDescShard("atmega_hal", 0, "<code>atmega-hal</code>\nAC\nADC\nCPU\nEEPROM\nEXINT\nFUSE\nLOCKBIT\nPORTB\nPORTC\nPORTD\nAll the peripherals.\nSPI\nTC0\nTC1\nTC2\nTWI\nUSART0\nWDT\nAnalog-to-Digital Converter\nCore clock speed management\nDelay implementations\nEEPROM\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReexport of <code>atmega328p</code> from <code>avr-device</code>\nPort\nPrelude containing all HAL traits\nSPI\nUnchecked version of <code>Peripherals::take</code>.\nReturns all the peripherals <em>once</em>.\nUSART\nDefault reference voltage (default).\nCheck the <code>avr_hal_generic::adc::Adc</code> documentation.\nTrait marking a type as an ADC channel for a certain ADC.\nInternal trait for the low-level ADC peripheral.\nConfiguration for the ADC peripheral.\nVoltage applied to AREF pin.\nCheck the <code>avr_hal_generic::adc::Channel</code> documentation.\nChannel ID type for this ADC.\nThe division factor between the system clock frequency and …\n(default)\nInternal reference voltage.\nSelect the voltage reference for the ADC peripheral\nSettings type for this ADC.\nAdditional channels\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear the DIDR (Digital Input Disable) for a certain …\nSet the DIDR (Digital Input Disable) for a certain channel.\nInitialize the ADC peripheral with the specified settings.\nCheck whether the ADC is currently converting a signal.\nRead out the ADC data register.\nSet the multiplexer to a certain channel.\nStart a conversion on the currently selected channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA clock speed\nFrequency of this clock in Hz\n1 MHz Clock\n10 MHz Clock\n12 MHz Clock\n16 MHz Clock\n20 MHz Clock\n24 MHz Clock\n8 MHz Clock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA busy-loop delay implementation\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInternal trait for low-level EEPROM peripherals.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nErase a single byte at offset <code>address</code>.  Does not do a …\nRead a single byte from offset <code>address</code>.  Does not do a …\nErase and write a single byte at offset <code>address</code>.  Does not …\nNo slave answered for this address or a slave replied NACK\nLost arbitration while trying to acquire bus\nA bus-error occured\nSlave replied NACK to sent data\nI2C Transfer Direction\nI2C Error\nInternal trait for low-level I2C peripherals.\nRead from a slave (LSB is 1)\nAn unknown error occured.  The bus might be in an unknown …\nWrite to a slave (LSB is 0)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead some bytes from the bus.\nSetup the bus for operation at a certain speed.\nStart a bus transaction to a certain <code>address</code> in either …\nSend a stop-condition and release the bus.\nWrite some bytes to the bus.\nTWI Status Codes\nIllegal start or stop condition\nArbitration lost in SLA+R or NACK\nData received, ACK returned\nData received, NACK returned\nSLA+R transmitted, ACK received\nSLA+R transmitted, NACK received\nArbitration lost in SLA+W or data\nData transmitted, ACK received\nData transmitted, NACK received\nSLA+W transmitted, ACK received\nSLA+W transmitted, NACK received\nNo state information available\nRepeated start condition transmitted\nArbitration lost in SLA+RW, general call received, ACK …\nArbitration lost in SLA+RW, SLA+W received, ACK returned\nData received, ACK returned\nData received, NACK returned\nGeneral call received, ACK returned\nGeneral call data received, ACK returned\nGeneral call data received, NACK returned\nSLA+W received, ACK returned\nStop or repeated start condition received while selected\nStart condition transmitted\nArbitration lost in SLA+RW, SLA+R received, ACK returned\nData transmitted, ACK received\nData transmitted, NACK received\nLast data byte transmitted, ACK received\nSLA+R received, ACK returned\nAnalog Comparator\nAC\nAnalog-to-Digital Converter\nADC\n21 - ADC Conversion Complete\n23 - Analog Comparator\nCPU Registers\nCPU\nEEPROM\nEEPROM\n22 - EEPROM Ready\nExternal Interrupts\nEXINT\nFuses\nFUSE\n1 - External Interrupt Request 0\n2 - External Interrupt Request 1\nEnumeration of all the interrupts.\nLockbits\nLOCKBIT\nNumber available in the NVIC for configuring priority\n3 - Pin Change Interrupt Request 0\n4 - Pin Change Interrupt Request 1\n5 - Pin Change Interrupt Request 2\nI/O Port\nPORTB\nI/O Port\nPORTC\nI/O Port\nPORTD\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nAll the peripherals.\n0 - External Pin, Power-on Reset, Brown-out Reset and …\nSerial Peripheral Interface\nSPI\n17 - SPI Serial Transfer Complete\n25 - Store Program Memory Read\nTimer/Counter, 8-bit\nTC0\nTimer/Counter, 16-bit\nTC1\nTimer/Counter, 8-bit Async\nTC2\n14 - TimerCounter0 Compare Match A\n15 - TimerCounter0 Compare Match B\n16 - Timer/Couner0 Overflow\n10 - Timer/Counter1 Capture Event\n11 - Timer/Counter1 Compare Match A\n12 - Timer/Counter1 Compare Match B\n13 - Timer/Counter1 Overflow\n7 - Timer/Counter2 Compare Match A\n8 - Timer/Counter2 Compare Match B\n9 - Timer/Counter2 Overflow\nTwo Wire Serial Interface\nTWI\n24 - Two-wire Serial Interface\nUSART\nUSART0\n18 - USART Rx Complete\n20 - USART Tx Complete\n19 - USART, Data Register Empty\nWatchdog Timer\nWDT\n6 - Watchdog Time-out Interrupt\nAnalog Comparator\nAnalog-to-Digital Converter\nCPU Registers\nEEPROM\nExternal Interrupts\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuses\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLockbits\nI/O Port\nI/O Port\nI/O Port\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nSerial Peripheral Interface\nTimer/Counter, 8-bit\nTimer/Counter, 16-bit\nTimer/Counter, 8-bit Async\nAttempt to convert a given value into an <code>Interrupt</code>\nTwo Wire Serial Interface\nUSART\nWatchdog Timer\nACSR (rw) register accessor: an alias for <code>Reg&lt;ACSR_SPEC&gt;</code>\nDIDR1 (rw) register accessor: an alias for <code>Reg&lt;DIDR1_SPEC&gt;</code>\nRegister block\nAnalog Comparator Control And Status Register\n0x00 - Analog Comparator Control And Status Register\nDigital Input Disable Register 1\n0x2f - Digital Input Disable Register 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ACBG</code> reader - Analog Comparator Bandgap Select\nField <code>ACBG</code> writer - Analog Comparator Bandgap Select\nField <code>ACD</code> reader - Analog Comparator Disable\nField <code>ACD</code> writer - Analog Comparator Disable\nField <code>ACIC</code> reader - Analog Comparator Input Capture Enable\nField <code>ACIC</code> writer - Analog Comparator Input Capture Enable\nField <code>ACIE</code> reader - Analog Comparator Interrupt Enable\nField <code>ACIE</code> writer - Analog Comparator Interrupt Enable\nAnalog Comparator Interrupt Mode Select\nField <code>ACIS</code> reader - Analog Comparator Interrupt Mode Select\nField <code>ACIS</code> writer - Analog Comparator Interrupt Mode Select\nField <code>ACI</code> reader - Analog Comparator Interrupt Flag\nField <code>ACI</code> writer - Analog Comparator Interrupt Flag\nField <code>ACO</code> reader - Analog Compare Output\nAnalog Comparator Control And Status Register\n2: Interrupt on Falling Edge\n3: Interrupt on Rising Edge\n0: Interrupt on Toggle\nRegister <code>ACSR</code> reader\nRegister <code>ACSR</code> writer\nBit 6 - Analog Comparator Bandgap Select\nBit 6 - Analog Comparator Bandgap Select\nBit 7 - Analog Comparator Disable\nBit 7 - Analog Comparator Disable\nBit 4 - Analog Comparator Interrupt Flag\nBit 4 - Analog Comparator Interrupt Flag\nBit 2 - Analog Comparator Input Capture Enable\nBit 2 - Analog Comparator Input Capture Enable\nBit 3 - Analog Comparator Interrupt Enable\nBit 3 - Analog Comparator Interrupt Enable\nBits 0:1 - Analog Comparator Interrupt Mode Select\nBits 0:1 - Analog Comparator Interrupt Mode Select\nBit 5 - Analog Compare Output\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>AIN0D</code> reader - AIN0 Digital Input Disable\nField <code>AIN0D</code> writer - AIN0 Digital Input Disable\nField <code>AIN1D</code> reader - AIN1 Digital Input Disable\nField <code>AIN1D</code> writer - AIN1 Digital Input Disable\nDigital Input Disable Register 1\nRegister <code>DIDR1</code> reader\nRegister <code>DIDR1</code> writer\nBit 0 - AIN0 Digital Input Disable\nBit 0 - AIN0 Digital Input Disable\nBit 1 - AIN1 Digital Input Disable\nBit 1 - AIN1 Digital Input Disable\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nADC (rw) register accessor: an alias for <code>Reg&lt;ADC_SPEC&gt;</code>\nADCSRA (rw) register accessor: an alias for …\nADCSRB (rw) register accessor: an alias for …\nADMUX (rw) register accessor: an alias for <code>Reg&lt;ADMUX_SPEC&gt;</code>\nDIDR0 (rw) register accessor: an alias for <code>Reg&lt;DIDR0_SPEC&gt;</code>\nRegister block\nADC Data Register Bytes\n0x00 - ADC Data Register Bytes\nThe ADC Control and Status register A\n0x02 - The ADC Control and Status register A\nThe ADC Control and Status register B\n0x03 - The ADC Control and Status register B\nThe ADC multiplexer Selection Register\n0x04 - The ADC multiplexer Selection Register\nDigital Input Disable Register\n0x06 - Digital Input Disable Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nADC Data Register Bytes\nRegister <code>ADC</code> reader\nRegister <code>ADC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ADATE</code> reader - ADC Auto Trigger Enable\nField <code>ADATE</code> writer - ADC Auto Trigger Enable\nThe ADC Control and Status register A\nField <code>ADEN</code> reader - ADC Enable\nField <code>ADEN</code> writer - ADC Enable\nField <code>ADIE</code> reader - ADC Interrupt Enable\nField <code>ADIE</code> writer - ADC Interrupt Enable\nField <code>ADIF</code> reader - ADC Interrupt Flag\nField <code>ADIF</code> writer - ADC Interrupt Flag\nADC Prescaler Select Bits\nField <code>ADPS</code> reader - ADC Prescaler Select Bits\nField <code>ADPS</code> writer - ADC Prescaler Select Bits\nField <code>ADSC</code> reader - ADC Start Conversion\nField <code>ADSC</code> writer - ADC Start Conversion\n7: Prescaler Value 128\n4: Prescaler Value 16\n1: Prescaler Value 2\n5: Prescaler Value 32\n2: Prescaler Value 4\n6: Prescaler Value 64\n3: Prescaler Value 8\nRegister <code>ADCSRA</code> reader\nRegister <code>ADCSRA</code> writer\nBit 5 - ADC Auto Trigger Enable\nBit 5 - ADC Auto Trigger Enable\nBit 7 - ADC Enable\nBit 7 - ADC Enable\nBit 3 - ADC Interrupt Enable\nBit 3 - ADC Interrupt Enable\nBit 4 - ADC Interrupt Flag\nBit 4 - ADC Interrupt Flag\nBits 0:2 - ADC Prescaler Select Bits\nBits 0:2 - ADC Prescaler Select Bits\nBit 6 - ADC Start Conversion\nBit 6 - ADC Start Conversion\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ACME</code> reader - No Description.\nField <code>ACME</code> writer - No Description.\nThe ADC Control and Status register B\nADC Auto Trigger Source bits\nField <code>ADTS</code> reader - ADC Auto Trigger Source bits\nField <code>ADTS</code> writer - ADC Auto Trigger Source bits\nRegister <code>ADCSRB</code> reader\n0: Free Running mode\n1: Analog Comparator\n2: External Interrupt Request 0\n3: Timer/Counter0 Compare Match A\n4: Timer/Counter0 Overflow\n5: Timer/Counter1 Compare Match B\n6: Timer/Counter1 Overflow\n7: Timer/Counter1 Capture Event\nRegister <code>ADCSRB</code> writer\nBit 6 - No Description.\nBit 6 - No Description.\nBits 0:2 - ADC Auto Trigger Source bits\nBits 0:2 - ADC Auto Trigger Source bits\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: ADC Single Ended Input pin 0\n1: ADC Single Ended Input pin 1\n2: ADC Single Ended Input pin 2\n3: ADC Single Ended Input pin 3\n4: ADC Single Ended Input pin 4\n5: ADC Single Ended Input pin 5\n6: ADC Single Ended Input pin 6\n7: ADC Single Ended Input pin 7\n15: 0V (GND)\n14: Internal Reference (VBG)\nField <code>ADLAR</code> reader - Left Adjust Result\nField <code>ADLAR</code> writer - Left Adjust Result\nThe ADC multiplexer Selection Register\n0: Aref Internal Vref turned off\n1: AVcc with external capacitor at AREF pin\n3: Internal 1.1V Voltage Reference with external capacitor …\nAnalog Channel Selection Bits\nField <code>MUX</code> reader - Analog Channel Selection Bits\nField <code>MUX</code> writer - Analog Channel Selection Bits\nRegister <code>ADMUX</code> reader\nReference Selection Bits\nField <code>REFS</code> reader - Reference Selection Bits\nField <code>REFS</code> writer - Reference Selection Bits\n8: Temperature sensor\nRegister <code>ADMUX</code> writer\nBit 5 - Left Adjust Result\nBit 5 - Left Adjust Result\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:3 - Analog Channel Selection Bits\nBits 0:3 - Analog Channel Selection Bits\nBits 6:7 - Reference Selection Bits\nBits 6:7 - Reference Selection Bits\nField <code>ADC0D</code> reader - No Description.\nField <code>ADC0D</code> writer - No Description.\nField <code>ADC1D</code> reader - No Description.\nField <code>ADC1D</code> writer - No Description.\nField <code>ADC2D</code> reader - No Description.\nField <code>ADC2D</code> writer - No Description.\nField <code>ADC3D</code> reader - No Description.\nField <code>ADC3D</code> writer - No Description.\nField <code>ADC4D</code> reader - No Description.\nField <code>ADC4D</code> writer - No Description.\nField <code>ADC5D</code> reader - No Description.\nField <code>ADC5D</code> writer - No Description.\nDigital Input Disable Register\nRegister <code>DIDR0</code> reader\nRegister <code>DIDR0</code> writer\nBit 0 - No Description.\nBit 0 - No Description.\nBit 1 - No Description.\nBit 1 - No Description.\nBit 2 - No Description.\nBit 2 - No Description.\nBit 3 - No Description.\nBit 3 - No Description.\nBit 4 - No Description.\nBit 4 - No Description.\nBit 5 - No Description.\nBit 5 - No Description.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLKPR (rw) register accessor: an alias for <code>Reg&lt;CLKPR_SPEC&gt;</code>\nGPIOR0 (rw) register accessor: an alias for …\nGPIOR1 (rw) register accessor: an alias for …\nGPIOR2 (rw) register accessor: an alias for …\nMCUCR (rw) register accessor: an alias for <code>Reg&lt;MCUCR_SPEC&gt;</code>\nMCUSR (rw) register accessor: an alias for <code>Reg&lt;MCUSR_SPEC&gt;</code>\nOSCCAL (rw) register accessor: an alias for …\nPRR (rw) register accessor: an alias for <code>Reg&lt;PRR_SPEC&gt;</code>\nRegister block\nSMCR (rw) register accessor: an alias for <code>Reg&lt;SMCR_SPEC&gt;</code>\nSPMCSR (rw) register accessor: an alias for …\nClock Prescale Register\n0x23 - Clock Prescale Register\nReturns the argument unchanged.\nGeneral Purpose I/O Register 0\n0x00 - General Purpose I/O Register 0\nGeneral Purpose I/O Register 1\n0x0c - General Purpose I/O Register 1\nGeneral Purpose I/O Register 2\n0x0d - General Purpose I/O Register 2\nCalls <code>U::from(self)</code>.\nMCU Control Register\n0x17 - MCU Control Register\nMCU Status Register\n0x16 - MCU Status Register\nOscillator Calibration Value\n0x28 - Oscillator Calibration Value\nPower Reduction Register\n0x26 - Power Reduction Register\nSleep Mode Control Register\n0x15 - Sleep Mode Control Register\nStore Program Memory Control and Status Register\n0x19 - Store Program Memory Control and Status Register\nField <code>CLKPCE</code> reader - Clock Prescaler Change Enable\nField <code>CLKPCE</code> writer - Clock Prescaler Change Enable\nClock Prescale Register\nClock Prescaler Select Bits\nField <code>CLKPS</code> reader - Clock Prescaler Select Bits\nField <code>CLKPS</code> writer - Clock Prescaler Select Bits\nRegister <code>CLKPR</code> reader\n0: 1\n1: 2\n2: 4\n3: 8\n4: 16\n5: 32\n6: 64\n7: 128\n8: 256\nRegister <code>CLKPR</code> writer\nWrites raw bits to the register.\nBit 7 - Clock Prescaler Change Enable\nBit 7 - Clock Prescaler Change Enable\nBits 0:3 - Clock Prescaler Select Bits\nBits 0:3 - Clock Prescaler Select Bits\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral Purpose I/O Register 0\nRegister <code>GPIOR0</code> reader\nRegister <code>GPIOR0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral Purpose I/O Register 1\nRegister <code>GPIOR1</code> reader\nRegister <code>GPIOR1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral Purpose I/O Register 2\nRegister <code>GPIOR2</code> reader\nRegister <code>GPIOR2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BODSE</code> reader - BOD Sleep Enable\nField <code>BODSE</code> writer - BOD Sleep Enable\nField <code>BODS</code> reader - BOD Sleep\nField <code>BODS</code> writer - BOD Sleep\nField <code>IVCE</code> reader - No Description.\nField <code>IVCE</code> writer - No Description.\nField <code>IVSEL</code> reader - No Description.\nField <code>IVSEL</code> writer - No Description.\nMCU Control Register\nField <code>PUD</code> reader - No Description.\nField <code>PUD</code> writer - No Description.\nRegister <code>MCUCR</code> reader\nRegister <code>MCUCR</code> writer\nWrites raw bits to the register.\nBit 6 - BOD Sleep\nBit 6 - BOD Sleep\nBit 5 - BOD Sleep Enable\nBit 5 - BOD Sleep Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - No Description.\nBit 0 - No Description.\nBit 1 - No Description.\nBit 1 - No Description.\nBit 4 - No Description.\nBit 4 - No Description.\nField <code>BORF</code> reader - Brown-out Reset Flag\nField <code>BORF</code> writer - Brown-out Reset Flag\nField <code>EXTRF</code> reader - External Reset Flag\nField <code>EXTRF</code> writer - External Reset Flag\nMCU Status Register\nField <code>PORF</code> reader - Power-on reset flag\nField <code>PORF</code> writer - Power-on reset flag\nRegister <code>MCUSR</code> reader\nRegister <code>MCUSR</code> writer\nField <code>WDRF</code> reader - Watchdog Reset Flag\nField <code>WDRF</code> writer - Watchdog Reset Flag\nWrites raw bits to the register.\nBit 2 - Brown-out Reset Flag\nBit 2 - Brown-out Reset Flag\nBit 1 - External Reset Flag\nBit 1 - External Reset Flag\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Power-on reset flag\nBit 0 - Power-on reset flag\nBit 3 - Watchdog Reset Flag\nBit 3 - Watchdog Reset Flag\nField <code>OSCCAL</code> reader - Oscillator Calibration\nOscillator Calibration Value\nField <code>OSCCAL</code> writer - Oscillator Calibration\nRegister <code>OSCCAL</code> reader\nRegister <code>OSCCAL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Oscillator Calibration\nBits 0:7 - Oscillator Calibration\nField <code>PRADC</code> reader - Power Reduction ADC\nField <code>PRADC</code> writer - Power Reduction ADC\nPower Reduction Register\nField <code>PRSPI</code> reader - Power Reduction Serial Peripheral …\nField <code>PRSPI</code> writer - Power Reduction Serial Peripheral …\nField <code>PRTIM0</code> reader - Power Reduction Timer/Counter0\nField <code>PRTIM0</code> writer - Power Reduction Timer/Counter0\nField <code>PRTIM1</code> reader - Power Reduction Timer/Counter1\nField <code>PRTIM1</code> writer - Power Reduction Timer/Counter1\nField <code>PRTIM2</code> reader - Power Reduction Timer/Counter2\nField <code>PRTIM2</code> writer - Power Reduction Timer/Counter2\nField <code>PRTWI</code> reader - Power Reduction TWI\nField <code>PRTWI</code> writer - Power Reduction TWI\nField <code>PRUSART0</code> reader - Power Reduction USART\nField <code>PRUSART0</code> writer - Power Reduction USART\nRegister <code>PRR</code> reader\nRegister <code>PRR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Power Reduction ADC\nBit 0 - Power Reduction ADC\nBit 2 - Power Reduction Serial Peripheral Interface\nBit 2 - Power Reduction Serial Peripheral Interface\nBit 5 - Power Reduction Timer/Counter0\nBit 5 - Power Reduction Timer/Counter0\nBit 3 - Power Reduction Timer/Counter1\nBit 3 - Power Reduction Timer/Counter1\nBit 6 - Power Reduction Timer/Counter2\nBit 6 - Power Reduction Timer/Counter2\nBit 7 - Power Reduction TWI\nBit 7 - Power Reduction TWI\nBit 1 - Power Reduction USART\nBit 1 - Power Reduction USART\n1: ADC Noise Reduction (If Available)\n7: Extended Standby\n0: Idle\n2: Power Down\n3: Power Save\nRegister <code>SMCR</code> reader\nField <code>SE</code> reader - Sleep Enable\nField <code>SE</code> writer - Sleep Enable\nSleep Mode Control Register\nSleep Mode Select Bits\nField <code>SM</code> reader - Sleep Mode Select Bits\nField <code>SM</code> writer - Sleep Mode Select Bits\n6: Standby\n4: Reserved\n5: Reserved\nRegister <code>SMCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Enable\nBit 0 - Sleep Enable\nBits 1:3 - Sleep Mode Select Bits\nBits 1:3 - Sleep Mode Select Bits\nField <code>BLBSET</code> reader - Boot Lock Bit Set\nField <code>BLBSET</code> writer - Boot Lock Bit Set\nField <code>PGERS</code> reader - Page Erase\nField <code>PGERS</code> writer - Page Erase\nField <code>PGWRT</code> reader - Page Write\nField <code>PGWRT</code> writer - Page Write\nRegister <code>SPMCSR</code> reader\nField <code>RWWSB</code> reader - Read-While-Write Section Busy\nField <code>RWWSB</code> writer - Read-While-Write Section Busy\nField <code>RWWSRE</code> reader - Read-While-Write section read enable\nField <code>RWWSRE</code> writer - Read-While-Write section read enable\nField <code>SIGRD</code> reader - Signature Row Read\nField <code>SIGRD</code> writer - Signature Row Read\nStore Program Memory Control and Status Register\nField <code>SPMEN</code> reader - Store Program Memory\nField <code>SPMEN</code> writer - Store Program Memory\nField <code>SPMIE</code> reader - SPM Interrupt Enable\nField <code>SPMIE</code> writer - SPM Interrupt Enable\nRegister <code>SPMCSR</code> writer\nWrites raw bits to the register.\nBit 3 - Boot Lock Bit Set\nBit 3 - Boot Lock Bit Set\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Page Erase\nBit 1 - Page Erase\nBit 2 - Page Write\nBit 2 - Page Write\nBit 6 - Read-While-Write Section Busy\nBit 6 - Read-While-Write Section Busy\nBit 4 - Read-While-Write section read enable\nBit 4 - Read-While-Write section read enable\nBit 5 - Signature Row Read\nBit 5 - Signature Row Read\nBit 0 - Store Program Memory\nBit 0 - Store Program Memory\nBit 7 - SPM Interrupt Enable\nBit 7 - SPM Interrupt Enable\nEEAR (rw) register accessor: an alias for <code>Reg&lt;EEAR_SPEC&gt;</code>\nEECR (rw) register accessor: an alias for <code>Reg&lt;EECR_SPEC&gt;</code>\nEEDR (rw) register accessor: an alias for <code>Reg&lt;EEDR_SPEC&gt;</code>\nRegister block\nEEPROM Address Register Bytes\n0x02 - EEPROM Address Register Bytes\nEEPROM Control Register\n0x00 - EEPROM Control Register\nEEPROM Data Register\n0x01 - EEPROM Data Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEEPROM Address Register Bytes\nRegister <code>EEAR</code> reader\nRegister <code>EEAR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEEPROM Control Register\nField <code>EEMPE</code> reader - EEPROM Master Write Enable\nField <code>EEMPE</code> writer - EEPROM Master Write Enable\nField <code>EEPE</code> reader - EEPROM Write Enable\nField <code>EEPE</code> writer - EEPROM Write Enable\nEEPROM Programming Mode Bits\nField <code>EEPM</code> reader - EEPROM Programming Mode Bits\nField <code>EEPM</code> writer - EEPROM Programming Mode Bits\nField <code>EERE</code> reader - EEPROM Read Enable\nField <code>EERE</code> writer - EEPROM Read Enable\nField <code>EERIE</code> reader - EEPROM Ready Interrupt Enable\nField <code>EERIE</code> writer - EEPROM Ready Interrupt Enable\nRegister <code>EECR</code> reader\n0: Erase and Write in one operation\n1: Erase Only\n2: Write Only\nRegister <code>EECR</code> writer\nWrites raw bits to the register.\nBit 2 - EEPROM Master Write Enable\nBit 2 - EEPROM Master Write Enable\nBit 1 - EEPROM Write Enable\nBit 1 - EEPROM Write Enable\nBits 4:5 - EEPROM Programming Mode Bits\nBits 4:5 - EEPROM Programming Mode Bits\nBit 0 - EEPROM Read Enable\nBit 0 - EEPROM Read Enable\nBit 3 - EEPROM Ready Interrupt Enable\nBit 3 - EEPROM Ready Interrupt Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEEPROM Data Register\nRegister <code>EEDR</code> reader\nRegister <code>EEDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEICRA (rw) register accessor: an alias for <code>Reg&lt;EICRA_SPEC&gt;</code>\nEIFR (rw) register accessor: an alias for <code>Reg&lt;EIFR_SPEC&gt;</code>\nEIMSK (rw) register accessor: an alias for <code>Reg&lt;EIMSK_SPEC&gt;</code>\nPCICR (rw) register accessor: an alias for <code>Reg&lt;PCICR_SPEC&gt;</code>\nPCIFR (rw) register accessor: an alias for <code>Reg&lt;PCIFR_SPEC&gt;</code>\nPCMSK0 (rw) register accessor: an alias for …\nPCMSK1 (rw) register accessor: an alias for …\nPCMSK2 (rw) register accessor: an alias for …\nRegister block\nExternal Interrupt Control Register\n0x2e - External Interrupt Control Register\nExternal Interrupt Flag Register\n0x01 - External Interrupt Flag Register\nExternal Interrupt Mask Register\n0x02 - External Interrupt Mask Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin Change Interrupt Control Register\n0x2d - Pin Change Interrupt Control Register\nPin Change Interrupt Flag Register\n0x00 - Pin Change Interrupt Flag Register\nPin Change Mask Register 0\n0x30 - Pin Change Mask Register 0\nPin Change Mask Register 1\n0x31 - Pin Change Mask Register 1\nPin Change Mask Register 2\n0x32 - Pin Change Mask Register 2\nExternal Interrupt Control Register\nExternal Interrupt Sense Control 0 Bits\nField <code>ISC0</code> reader - External Interrupt Sense Control 0 Bits\nField <code>ISC0</code> writer - External Interrupt Sense Control 0 Bits\nExternal Interrupt Sense Control 1 Bits\nField <code>ISC1</code> reader - External Interrupt Sense Control 1 Bits\nField <code>ISC1</code> writer - External Interrupt Sense Control 1 Bits\nRegister <code>EICRA</code> reader\n0: Low Level of INTX\n0: Low Level of INTX\n1: Any Logical Change of INTX\n1: Any Logical Change of INTX\n2: Falling Edge of INTX\n2: Falling Edge of INTX\n3: Rising Edge of INTX\n3: Rising Edge of INTX\nRegister <code>EICRA</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - External Interrupt Sense Control 0 Bits\nBits 0:1 - External Interrupt Sense Control 0 Bits\nBits 2:3 - External Interrupt Sense Control 1 Bits\nBits 2:3 - External Interrupt Sense Control 1 Bits\nExternal Interrupt Flag Register\nField <code>INTF</code> reader - External Interrupt Flags\nField <code>INTF</code> writer - External Interrupt Flags\nRegister <code>EIFR</code> reader\nRegister <code>EIFR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - External Interrupt Flags\nBits 0:1 - External Interrupt Flags\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExternal Interrupt Mask Register\nField <code>INT0</code> reader - External Interrupt Request Enable\nField <code>INT0</code> writer - External Interrupt Request Enable\nField <code>INT1</code> reader - External Interrupt Request Enable\nField <code>INT1</code> writer - External Interrupt Request Enable\nRegister <code>EIMSK</code> reader\nRegister <code>EIMSK</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - External Interrupt Request Enable\nBit 0 - External Interrupt Request Enable\nBit 1 - External Interrupt Request Enable\nBit 1 - External Interrupt Request Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPin Change Interrupt Control Register\nField <code>PCIE</code> reader - Pin Change Interrupt Enables\nField <code>PCIE</code> writer - Pin Change Interrupt Enables\nRegister <code>PCICR</code> reader\nRegister <code>PCICR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Pin Change Interrupt Enables\nBits 0:2 - Pin Change Interrupt Enables\nPin Change Interrupt Flag Register\nField <code>PCIF</code> reader - Pin Change Interrupt Flags\nField <code>PCIF</code> writer - Pin Change Interrupt Flags\nRegister <code>PCIFR</code> reader\nRegister <code>PCIFR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Pin Change Interrupt Flags\nBits 0:2 - Pin Change Interrupt Flags\nField <code>PCINT</code> reader - Pin Change Enable Masks\nField <code>PCINT</code> writer - Pin Change Enable Masks\nPin Change Mask Register 0\nRegister <code>PCMSK0</code> reader\nRegister <code>PCMSK0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Pin Change Enable Masks\nBits 0:7 - Pin Change Enable Masks\nField <code>PCINT</code> reader - Pin Change Enable Masks\nField <code>PCINT</code> writer - Pin Change Enable Masks\nPin Change Mask Register 1\nRegister <code>PCMSK1</code> reader\nRegister <code>PCMSK1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - Pin Change Enable Masks\nBits 0:6 - Pin Change Enable Masks\nField <code>PCINT</code> reader - Pin Change Enable Masks\nField <code>PCINT</code> writer - Pin Change Enable Masks\nPin Change Mask Register 2\nRegister <code>PCMSK2</code> reader\nRegister <code>PCMSK2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Pin Change Enable Masks\nBits 0:7 - Pin Change Enable Masks\nEXTENDED (rw) register accessor: an alias for …\nHIGH (rw) register accessor: an alias for <code>Reg&lt;HIGH_SPEC&gt;</code>\nLOW (rw) register accessor: an alias for <code>Reg&lt;LOW_SPEC&gt;</code>\nRegister block\nNo Description.\n0x02 - No Description.\nReturns the argument unchanged.\nNo Description.\n0x01 - No Description.\nCalls <code>U::from(self)</code>.\nNo Description.\n0x00 - No Description.\nBrown-out Detector trigger level\nField <code>BODLEVEL</code> reader - Brown-out Detector trigger level\nField <code>BODLEVEL</code> writer - Brown-out Detector trigger level\n7: Brown-out detection disabled\nNo Description.\nRegister <code>EXTENDED</code> reader\nRegister <code>EXTENDED</code> writer\n6: Brown-out detection at VCC=1.8 V\n5: Brown-out detection at VCC=2.7 V\n4: Brown-out detection at VCC=4.3 V\nWrites raw bits to the register.\nBits 0:2 - Brown-out Detector trigger level\nBits 0:2 - Brown-out Detector trigger level\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BOOTRST</code> reader - Boot Reset vector Enabled\nField <code>BOOTRST</code> writer - Boot Reset vector Enabled\nSelect boot size\nField <code>BOOTSZ</code> reader - Select boot size\nField <code>BOOTSZ</code> writer - Select boot size\nField <code>DWEN</code> reader - Debug Wire enable\nField <code>DWEN</code> writer - Debug Wire enable\nField <code>EESAVE</code> reader - Preserve EEPROM through the Chip …\nField <code>EESAVE</code> writer - Preserve EEPROM through the Chip …\nNo Description.\nRegister <code>HIGH</code> reader\nField <code>RSTDISBL</code> reader - Reset Disabled (Enable PC6 as i/o …\nField <code>RSTDISBL</code> writer - Reset Disabled (Enable PC6 as i/o …\nField <code>SPIEN</code> reader - Serial program downloading (SPI) …\nField <code>SPIEN</code> writer - Serial program downloading (SPI) …\nRegister <code>HIGH</code> writer\nField <code>WDTON</code> reader - Watch-dog Timer always on\nField <code>WDTON</code> writer - Watch-dog Timer always on\n1: Boot Flash size=1024 words start address=$3C00\n0: Boot Flash size=2048 words start address=$3800\n3: Boot Flash size=256 words start address=$3F00\n2: Boot Flash size=512 words start address=$3E00\nWrites raw bits to the register.\nBit 0 - Boot Reset vector Enabled\nBit 0 - Boot Reset vector Enabled\nBits 1:2 - Select boot size\nBits 1:2 - Select boot size\nBit 6 - Debug Wire enable\nBit 6 - Debug Wire enable\nBit 3 - Preserve EEPROM through the Chip Erase cycle\nBit 3 - Preserve EEPROM through the Chip Erase cycle\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 7 - Reset Disabled (Enable PC6 as i/o pin)\nBit 7 - Reset Disabled (Enable PC6 as i/o pin)\nBit 5 - Serial program downloading (SPI) enabled\nBit 5 - Serial program downloading (SPI) enabled\nBit 4 - Watch-dog Timer always on\nBit 4 - Watch-dog Timer always on\nField <code>CKDIV8</code> reader - Divide clock by 8 internally\nField <code>CKDIV8</code> writer - Divide clock by 8 internally\nField <code>CKOUT</code> reader - Clock output on PORTB0\nField <code>CKOUT</code> writer - Clock output on PORTB0\n0: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 …\n16: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\n32: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\n23: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n39: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n55: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n38: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n54: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n7: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 1K …\n6: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n22: Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: …\n4: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\n20: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\n36: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\n5: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32K …\n21: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: …\n37: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: …\n25: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n41: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n57: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n40: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n56: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n9: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n8: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n24: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n27: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n43: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n59: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n42: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n58: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n11: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n10: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n26: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n29: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n45: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n61: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n44: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n60: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n13: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n12: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n28: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n31: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n47: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n63: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n46: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n62: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n15: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n14: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n30: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n3: Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 …\n19: Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 …\n35: Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 …\n2: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 …\n18: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 …\n34: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 …\nNo Description.\nRegister <code>LOW</code> reader\nSelect Clock Source\nField <code>SUT_CKSEL</code> reader - Select Clock Source\nField <code>SUT_CKSEL</code> writer - Select Clock Source\nRegister <code>LOW</code> writer\nWrites raw bits to the register.\nBit 7 - Divide clock by 8 internally\nBit 7 - Divide clock by 8 internally\nBit 6 - Clock output on PORTB0\nBit 6 - Clock output on PORTB0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:5 - Select Clock Source\nBits 0:5 - Select Clock Source\nLOCKBIT (rw) register accessor: an alias for …\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNo Description.\n0x00 - No Description.\nBoot Loader Protection Mode\nField <code>BLB0</code> reader - Boot Loader Protection Mode\nField <code>BLB0</code> writer - Boot Loader Protection Mode\nBoot Loader Protection Mode\nField <code>BLB1</code> reader - Boot Loader Protection Mode\nField <code>BLB1</code> writer - Boot Loader Protection Mode\nMemory Lock\nField <code>LB</code> reader - Memory Lock\nField <code>LB</code> writer - Memory Lock\nNo Description.\n1: LPM prohibited in Application Section\n1: LPM prohibited in Boot Section\n0: LPM and SPM prohibited in Application Section\n0: LPM and SPM prohibited in Boot Section\n3: No memory lock features enabled\n3: No lock on SPM and LPM in Application Section\n3: No lock on SPM and LPM in Boot Section\n2: Further programming disabled\n0: Further programming and verification disabled\nRegister <code>LOCKBIT</code> reader\n2: SPM prohibited in Application Section\n2: SPM prohibited in Boot Section\nRegister <code>LOCKBIT</code> writer\nWrites raw bits to the register.\nBits 2:3 - Boot Loader Protection Mode\nBits 2:3 - Boot Loader Protection Mode\nBits 4:5 - Boot Loader Protection Mode\nBits 4:5 - Boot Loader Protection Mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - Memory Lock\nBits 0:1 - Memory Lock\nDDRB (rw) register accessor: an alias for <code>Reg&lt;DDRB_SPEC&gt;</code>\nPINB (rw) register accessor: an alias for <code>Reg&lt;PINB_SPEC&gt;</code>\nPORTB (rw) register accessor: an alias for <code>Reg&lt;PORTB_SPEC&gt;</code>\nRegister block\nPort B Data Direction Register\n0x01 - Port B Data Direction Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPort B Input Pins\n0x00 - Port B Input Pins\nPort B Data Register\n0x02 - Port B Data Register\nPort B Data Direction Register\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nField <code>PB6</code> reader - Pin B6\nField <code>PB6</code> writer - Pin B6\nField <code>PB7</code> reader - Pin B7\nField <code>PB7</code> writer - Pin B7\nRegister <code>DDRB</code> reader\nRegister <code>DDRB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nBit 6 - Pin B6\nBit 6 - Pin B6\nBit 7 - Pin B7\nBit 7 - Pin B7\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nField <code>PB6</code> reader - Pin B6\nField <code>PB6</code> writer - Pin B6\nField <code>PB7</code> reader - Pin B7\nField <code>PB7</code> writer - Pin B7\nPort B Input Pins\nRegister <code>PINB</code> reader\nRegister <code>PINB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nBit 6 - Pin B6\nBit 6 - Pin B6\nBit 7 - Pin B7\nBit 7 - Pin B7\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nField <code>PB6</code> reader - Pin B6\nField <code>PB6</code> writer - Pin B6\nField <code>PB7</code> reader - Pin B7\nField <code>PB7</code> writer - Pin B7\nPort B Data Register\nRegister <code>PORTB</code> reader\nRegister <code>PORTB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nBit 6 - Pin B6\nBit 6 - Pin B6\nBit 7 - Pin B7\nBit 7 - Pin B7\nDDRC (rw) register accessor: an alias for <code>Reg&lt;DDRC_SPEC&gt;</code>\nPINC (rw) register accessor: an alias for <code>Reg&lt;PINC_SPEC&gt;</code>\nPORTC (rw) register accessor: an alias for <code>Reg&lt;PORTC_SPEC&gt;</code>\nRegister block\nPort C Data Direction Register\n0x01 - Port C Data Direction Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPort C Input Pins\n0x00 - Port C Input Pins\nPort C Data Register\n0x02 - Port C Data Register\nPort C Data Direction Register\nField <code>PC0</code> reader - Pin C0\nField <code>PC0</code> writer - Pin C0\nField <code>PC1</code> reader - Pin C1\nField <code>PC1</code> writer - Pin C1\nField <code>PC2</code> reader - Pin C2\nField <code>PC2</code> writer - Pin C2\nField <code>PC3</code> reader - Pin C3\nField <code>PC3</code> writer - Pin C3\nField <code>PC4</code> reader - Pin C4\nField <code>PC4</code> writer - Pin C4\nField <code>PC5</code> reader - Pin C5\nField <code>PC5</code> writer - Pin C5\nField <code>PC6</code> reader - Pin C6\nField <code>PC6</code> writer - Pin C6\nRegister <code>DDRC</code> reader\nRegister <code>DDRC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin C0\nBit 0 - Pin C0\nBit 1 - Pin C1\nBit 1 - Pin C1\nBit 2 - Pin C2\nBit 2 - Pin C2\nBit 3 - Pin C3\nBit 3 - Pin C3\nBit 4 - Pin C4\nBit 4 - Pin C4\nBit 5 - Pin C5\nBit 5 - Pin C5\nBit 6 - Pin C6\nBit 6 - Pin C6\nField <code>PC0</code> reader - Pin C0\nField <code>PC0</code> writer - Pin C0\nField <code>PC1</code> reader - Pin C1\nField <code>PC1</code> writer - Pin C1\nField <code>PC2</code> reader - Pin C2\nField <code>PC2</code> writer - Pin C2\nField <code>PC3</code> reader - Pin C3\nField <code>PC3</code> writer - Pin C3\nField <code>PC4</code> reader - Pin C4\nField <code>PC4</code> writer - Pin C4\nField <code>PC5</code> reader - Pin C5\nField <code>PC5</code> writer - Pin C5\nField <code>PC6</code> reader - Pin C6\nField <code>PC6</code> writer - Pin C6\nPort C Input Pins\nRegister <code>PINC</code> reader\nRegister <code>PINC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin C0\nBit 0 - Pin C0\nBit 1 - Pin C1\nBit 1 - Pin C1\nBit 2 - Pin C2\nBit 2 - Pin C2\nBit 3 - Pin C3\nBit 3 - Pin C3\nBit 4 - Pin C4\nBit 4 - Pin C4\nBit 5 - Pin C5\nBit 5 - Pin C5\nBit 6 - Pin C6\nBit 6 - Pin C6\nField <code>PC0</code> reader - Pin C0\nField <code>PC0</code> writer - Pin C0\nField <code>PC1</code> reader - Pin C1\nField <code>PC1</code> writer - Pin C1\nField <code>PC2</code> reader - Pin C2\nField <code>PC2</code> writer - Pin C2\nField <code>PC3</code> reader - Pin C3\nField <code>PC3</code> writer - Pin C3\nField <code>PC4</code> reader - Pin C4\nField <code>PC4</code> writer - Pin C4\nField <code>PC5</code> reader - Pin C5\nField <code>PC5</code> writer - Pin C5\nField <code>PC6</code> reader - Pin C6\nField <code>PC6</code> writer - Pin C6\nPort C Data Register\nRegister <code>PORTC</code> reader\nRegister <code>PORTC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin C0\nBit 0 - Pin C0\nBit 1 - Pin C1\nBit 1 - Pin C1\nBit 2 - Pin C2\nBit 2 - Pin C2\nBit 3 - Pin C3\nBit 3 - Pin C3\nBit 4 - Pin C4\nBit 4 - Pin C4\nBit 5 - Pin C5\nBit 5 - Pin C5\nBit 6 - Pin C6\nBit 6 - Pin C6\nDDRD (rw) register accessor: an alias for <code>Reg&lt;DDRD_SPEC&gt;</code>\nPIND (rw) register accessor: an alias for <code>Reg&lt;PIND_SPEC&gt;</code>\nPORTD (rw) register accessor: an alias for <code>Reg&lt;PORTD_SPEC&gt;</code>\nRegister block\nPort D Data Direction Register\n0x01 - Port D Data Direction Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPort D Input Pins\n0x00 - Port D Input Pins\nPort D Data Register\n0x02 - Port D Data Register\nPort D Data Direction Register\nField <code>PD0</code> reader - Pin D0\nField <code>PD0</code> writer - Pin D0\nField <code>PD1</code> reader - Pin D1\nField <code>PD1</code> writer - Pin D1\nField <code>PD2</code> reader - Pin D2\nField <code>PD2</code> writer - Pin D2\nField <code>PD3</code> reader - Pin D3\nField <code>PD3</code> writer - Pin D3\nField <code>PD4</code> reader - Pin D4\nField <code>PD4</code> writer - Pin D4\nField <code>PD5</code> reader - Pin D5\nField <code>PD5</code> writer - Pin D5\nField <code>PD6</code> reader - Pin D6\nField <code>PD6</code> writer - Pin D6\nField <code>PD7</code> reader - Pin D7\nField <code>PD7</code> writer - Pin D7\nRegister <code>DDRD</code> reader\nRegister <code>DDRD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin D0\nBit 0 - Pin D0\nBit 1 - Pin D1\nBit 1 - Pin D1\nBit 2 - Pin D2\nBit 2 - Pin D2\nBit 3 - Pin D3\nBit 3 - Pin D3\nBit 4 - Pin D4\nBit 4 - Pin D4\nBit 5 - Pin D5\nBit 5 - Pin D5\nBit 6 - Pin D6\nBit 6 - Pin D6\nBit 7 - Pin D7\nBit 7 - Pin D7\nField <code>PD0</code> reader - Pin D0\nField <code>PD0</code> writer - Pin D0\nField <code>PD1</code> reader - Pin D1\nField <code>PD1</code> writer - Pin D1\nField <code>PD2</code> reader - Pin D2\nField <code>PD2</code> writer - Pin D2\nField <code>PD3</code> reader - Pin D3\nField <code>PD3</code> writer - Pin D3\nField <code>PD4</code> reader - Pin D4\nField <code>PD4</code> writer - Pin D4\nField <code>PD5</code> reader - Pin D5\nField <code>PD5</code> writer - Pin D5\nField <code>PD6</code> reader - Pin D6\nField <code>PD6</code> writer - Pin D6\nField <code>PD7</code> reader - Pin D7\nField <code>PD7</code> writer - Pin D7\nPort D Input Pins\nRegister <code>PIND</code> reader\nRegister <code>PIND</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin D0\nBit 0 - Pin D0\nBit 1 - Pin D1\nBit 1 - Pin D1\nBit 2 - Pin D2\nBit 2 - Pin D2\nBit 3 - Pin D3\nBit 3 - Pin D3\nBit 4 - Pin D4\nBit 4 - Pin D4\nBit 5 - Pin D5\nBit 5 - Pin D5\nBit 6 - Pin D6\nBit 6 - Pin D6\nBit 7 - Pin D7\nBit 7 - Pin D7\nField <code>PD0</code> reader - Pin D0\nField <code>PD0</code> writer - Pin D0\nField <code>PD1</code> reader - Pin D1\nField <code>PD1</code> writer - Pin D1\nField <code>PD2</code> reader - Pin D2\nField <code>PD2</code> writer - Pin D2\nField <code>PD3</code> reader - Pin D3\nField <code>PD3</code> writer - Pin D3\nField <code>PD4</code> reader - Pin D4\nField <code>PD4</code> writer - Pin D4\nField <code>PD5</code> reader - Pin D5\nField <code>PD5</code> writer - Pin D5\nField <code>PD6</code> reader - Pin D6\nField <code>PD6</code> writer - Pin D6\nField <code>PD7</code> reader - Pin D7\nField <code>PD7</code> writer - Pin D7\nPort D Data Register\nRegister <code>PORTD</code> reader\nRegister <code>PORTD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin D0\nBit 0 - Pin D0\nBit 1 - Pin D1\nBit 1 - Pin D1\nBit 2 - Pin D2\nBit 2 - Pin D2\nBit 3 - Pin D3\nBit 3 - Pin D3\nBit 4 - Pin D4\nBit 4 - Pin D4\nBit 5 - Pin D5\nBit 5 - Pin D5\nBit 6 - Pin D6\nBit 6 - Pin D6\nBit 7 - Pin D7\nBit 7 - Pin D7\nRegister block\nSPCR (rw) register accessor: an alias for <code>Reg&lt;SPCR_SPEC&gt;</code>\nSPDR (rw) register accessor: an alias for <code>Reg&lt;SPDR_SPEC&gt;</code>\nSPSR (rw) register accessor: an alias for <code>Reg&lt;SPSR_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSPI Control Register\n0x00 - SPI Control Register\nSPI Data Register\n0x02 - SPI Data Register\nSPI Status Register\n0x01 - SPI Status Register\nField <code>CPHA</code> reader - Clock Phase\nField <code>CPHA</code> writer - Clock Phase\nField <code>CPOL</code> reader - Clock polarity\nField <code>CPOL</code> writer - Clock polarity\nField <code>DORD</code> reader - Data Order\nField <code>DORD</code> writer - Data Order\n3: Fosc/128 if SPI2X == 0 else Fosc/64\n1: Fosc/16 if SPI2X == 0 else Fosc/8\n0: Fosc/4 if SPI2X == 0 else Fosc/2\n2: Fosc/64 if SPI2X == 0 else Fosc/32\nField <code>MSTR</code> reader - Master/Slave Select\nField <code>MSTR</code> writer - Master/Slave Select\nRegister <code>SPCR</code> reader\nSPI Control Register\nField <code>SPE</code> reader - SPI Enable\nField <code>SPE</code> writer - SPI Enable\nField <code>SPIE</code> reader - SPI Interrupt Enable\nField <code>SPIE</code> writer - SPI Interrupt Enable\nSPI Clock Rate Selects\nField <code>SPR</code> reader - SPI Clock Rate Selects\nField <code>SPR</code> writer - SPI Clock Rate Selects\nRegister <code>SPCR</code> writer\nWrites raw bits to the register.\nBit 2 - Clock Phase\nBit 2 - Clock Phase\nBit 3 - Clock polarity\nBit 3 - Clock polarity\nBit 5 - Data Order\nBit 5 - Data Order\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 4 - Master/Slave Select\nBit 4 - Master/Slave Select\nBit 6 - SPI Enable\nBit 6 - SPI Enable\nBit 7 - SPI Interrupt Enable\nBit 7 - SPI Interrupt Enable\nBits 0:1 - SPI Clock Rate Selects\nBits 0:1 - SPI Clock Rate Selects\nRegister <code>SPDR</code> reader\nSPI Data Register\nRegister <code>SPDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>SPSR</code> reader\nField <code>SPI2X</code> reader - Double SPI Speed Bit\nField <code>SPI2X</code> writer - Double SPI Speed Bit\nField <code>SPIF</code> reader - SPI Interrupt Flag\nSPI Status Register\nRegister <code>SPSR</code> writer\nField <code>WCOL</code> reader - Write Collision Flag\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Double SPI Speed Bit\nBit 0 - Double SPI Speed Bit\nBit 7 - SPI Interrupt Flag\nBit 6 - Write Collision Flag\nGTCCR (rw) register accessor: an alias for <code>Reg&lt;GTCCR_SPEC&gt;</code>\nOCR0A (rw) register accessor: an alias for <code>Reg&lt;OCR0A_SPEC&gt;</code>\nOCR0B (rw) register accessor: an alias for <code>Reg&lt;OCR0B_SPEC&gt;</code>\nRegister block\nTCCR0A (rw) register accessor: an alias for …\nTCCR0B (rw) register accessor: an alias for …\nTCNT0 (rw) register accessor: an alias for <code>Reg&lt;TCNT0_SPEC&gt;</code>\nTIFR0 (rw) register accessor: an alias for <code>Reg&lt;TIFR0_SPEC&gt;</code>\nTIMSK0 (rw) register accessor: an alias for …\nReturns the argument unchanged.\nGeneral Timer/Counter Control Register\n0x0e - General Timer/Counter Control Register\nCalls <code>U::from(self)</code>.\nTimer/Counter0 Output Compare Register\n0x12 - Timer/Counter0 Output Compare Register\nTimer/Counter0 Output Compare Register\n0x13 - Timer/Counter0 Output Compare Register\nTimer/Counter Control Register A\n0x0f - Timer/Counter Control Register A\nTimer/Counter Control Register B\n0x10 - Timer/Counter Control Register B\nTimer/Counter0\n0x11 - Timer/Counter0\nTimer/Counter0 Interrupt Flag register\n0x00 - Timer/Counter0 Interrupt Flag register\nTimer/Counter0 Interrupt Mask Register\n0x39 - Timer/Counter0 Interrupt Mask Register\nGeneral Timer/Counter Control Register\nField <code>PSRSYNC</code> reader - Prescaler Reset Timer/Counter1 and …\nField <code>PSRSYNC</code> writer - Prescaler Reset Timer/Counter1 and …\nRegister <code>GTCCR</code> reader\nField <code>TSM</code> reader - Timer/Counter Synchronization Mode\nField <code>TSM</code> writer - Timer/Counter Synchronization Mode\nRegister <code>GTCCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 7 - Timer/Counter Synchronization Mode\nBit 7 - Timer/Counter Synchronization Mode\nTimer/Counter0 Output Compare Register\nRegister <code>OCR0A</code> reader\nRegister <code>OCR0A</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTimer/Counter0 Output Compare Register\nRegister <code>OCR0B</code> reader\nRegister <code>OCR0B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COM0B</code> reader - Compare Output B Mode\nField <code>COM0B</code> writer - Compare Output B Mode\nCompare Output B Mode\nField <code>COM0B</code> reader - Compare Output B Mode\nField <code>COM0B</code> writer - Compare Output B Mode\n2: CTC, Top: <em>OCRA</em>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n0: Normal port operation, OCix disconnected\n2: Clear OCix on Compare Match (If PWM is enabled, OCix is …\n3: Set OCix on Compare Match (If PWM is enabled, OCix is …\n1: Toggle OCix on Compare Match (Might depend on WGM)\n0: Normal, Top: <code>0xff</code>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n3: Fast PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>MAX</em>\n1: Phase Correct PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>BOTTOM</em>\nRegister <code>TCCR0A</code> reader\nTimer/Counter Control Register A\nRegister <code>TCCR0A</code> writer\nWaveform Generation Mode\nField <code>WGM0</code> reader - Waveform Generation Mode\nField <code>WGM0</code> writer - Waveform Generation Mode\nWrites raw bits to the register.\nBits 6:7 - Compare Output A Mode\nBits 6:7 - Compare Output A Mode\nBits 4:5 - Compare Output B Mode\nBits 4:5 - Compare Output B Mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - Waveform Generation Mode\nBits 0:1 - Waveform Generation Mode\nClock Select\nField <code>CS0</code> reader - Clock Select\nField <code>CS0</code> writer - Clock Select\n1: Running, No Prescaling\n6: Running, ExtClk Tx Falling Edge\n7: Running, ExtClk Tx Rising Edge\nField <code>FOC0A</code> writer - Force Output Compare A\nField <code>FOC0B</code> writer - Force Output Compare B\n0: No clock source (Timer/Counter stopped)\n5: Running, CLK/1024\n4: Running, CLK/256\n3: Running, CLK/64\n2: Running, CLK/8\nRegister <code>TCCR0B</code> reader\nTimer/Counter Control Register B\nRegister <code>TCCR0B</code> writer\nField <code>WGM02</code> reader - Waveform Generation Mode High Bit …\nField <code>WGM02</code> writer - Waveform Generation Mode High Bit …\nWrites raw bits to the register.\nBits 0:2 - Clock Select\nBits 0:2 - Clock Select\nBit 7 - Force Output Compare A\nBit 6 - Force Output Compare B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nRegister <code>TCNT0</code> reader\nTimer/Counter0\nRegister <code>TCNT0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>OCF0A</code> reader - Timer/Counter0 Output Compare Flag 0A\nField <code>OCF0A</code> writer - Timer/Counter0 Output Compare Flag 0A\nField <code>OCF0B</code> reader - Timer/Counter0 Output Compare Flag 0B\nField <code>OCF0B</code> writer - Timer/Counter0 Output Compare Flag 0B\nRegister <code>TIFR0</code> reader\nTimer/Counter0 Interrupt Flag register\nField <code>TOV0</code> reader - Timer/Counter0 Overflow Flag\nField <code>TOV0</code> writer - Timer/Counter0 Overflow Flag\nRegister <code>TIFR0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Timer/Counter0 Output Compare Flag 0A\nBit 1 - Timer/Counter0 Output Compare Flag 0A\nBit 2 - Timer/Counter0 Output Compare Flag 0B\nBit 2 - Timer/Counter0 Output Compare Flag 0B\nBit 0 - Timer/Counter0 Overflow Flag\nBit 0 - Timer/Counter0 Overflow Flag\nField <code>OCIE0A</code> reader - Timer/Counter0 Output Compare Match …\nField <code>OCIE0A</code> writer - Timer/Counter0 Output Compare Match …\nField <code>OCIE0B</code> reader - Timer/Counter0 Output Compare Match …\nField <code>OCIE0B</code> writer - Timer/Counter0 Output Compare Match …\nRegister <code>TIMSK0</code> reader\nTimer/Counter0 Interrupt Mask Register\nField <code>TOIE0</code> reader - Timer/Counter0 Overflow Interrupt …\nField <code>TOIE0</code> writer - Timer/Counter0 Overflow Interrupt …\nRegister <code>TIMSK0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Timer/Counter0 Output Compare Match A Interrupt …\nBit 1 - Timer/Counter0 Output Compare Match A Interrupt …\nBit 2 - Timer/Counter0 Output Compare Match B Interrupt …\nBit 2 - Timer/Counter0 Output Compare Match B Interrupt …\nBit 0 - Timer/Counter0 Overflow Interrupt Enable\nBit 0 - Timer/Counter0 Overflow Interrupt Enable\nGTCCR (rw) register accessor: an alias for <code>Reg&lt;GTCCR_SPEC&gt;</code>\nICR1 (rw) register accessor: an alias for <code>Reg&lt;ICR1_SPEC&gt;</code>\nOCR1A (rw) register accessor: an alias for <code>Reg&lt;OCR1A_SPEC&gt;</code>\nOCR1B (rw) register accessor: an alias for <code>Reg&lt;OCR1B_SPEC&gt;</code>\nRegister block\nTCCR1A (rw) register accessor: an alias for …\nTCCR1B (rw) register accessor: an alias for …\nTCCR1C (rw) register accessor: an alias for …\nTCNT1 (rw) register accessor: an alias for <code>Reg&lt;TCNT1_SPEC&gt;</code>\nTIFR1 (rw) register accessor: an alias for <code>Reg&lt;TIFR1_SPEC&gt;</code>\nTIMSK1 (rw) register accessor: an alias for …\nReturns the argument unchanged.\nGeneral Timer/Counter Control Register\n0x0d - General Timer/Counter Control Register\nTimer/Counter1 Input Capture Register Bytes\n0x50 - Timer/Counter1 Input Capture Register Bytes\nCalls <code>U::from(self)</code>.\nTimer/Counter1 Output Compare Register Bytes\n0x52 - Timer/Counter1 Output Compare Register Bytes\nTimer/Counter1 Output Compare Register Bytes\n0x54 - Timer/Counter1 Output Compare Register Bytes\nTimer/Counter1 Control Register A\n0x4a - Timer/Counter1 Control Register A\nTimer/Counter1 Control Register B\n0x4b - Timer/Counter1 Control Register B\nTimer/Counter1 Control Register C\n0x4c - Timer/Counter1 Control Register C\nTimer/Counter1 Bytes\n0x4e - Timer/Counter1 Bytes\nTimer/Counter Interrupt Flag register\n0x00 - Timer/Counter Interrupt Flag register\nTimer/Counter Interrupt Mask Register\n0x39 - Timer/Counter Interrupt Mask Register\nGeneral Timer/Counter Control Register\nField <code>PSRSYNC</code> reader - Prescaler Reset Timer/Counter1 and …\nField <code>PSRSYNC</code> writer - Prescaler Reset Timer/Counter1 and …\nRegister <code>GTCCR</code> reader\nField <code>TSM</code> reader - Timer/Counter Synchronization Mode\nField <code>TSM</code> writer - Timer/Counter Synchronization Mode\nRegister <code>GTCCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 7 - Timer/Counter Synchronization Mode\nBit 7 - Timer/Counter Synchronization Mode\nTimer/Counter1 Input Capture Register Bytes\nRegister <code>ICR1</code> reader\nRegister <code>ICR1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTimer/Counter1 Output Compare Register Bytes\nRegister <code>OCR1A</code> reader\nRegister <code>OCR1A</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTimer/Counter1 Output Compare Register Bytes\nRegister <code>OCR1B</code> reader\nRegister <code>OCR1B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COM1B</code> reader - Compare Output Mode 1B, bits\nField <code>COM1B</code> writer - Compare Output Mode 1B, bits\nCompare Output Mode 1B, bits\nField <code>COM1B</code> reader - Compare Output Mode 1B, bits\nField <code>COM1B</code> writer - Compare Output Mode 1B, bits\n0: Normal port operation, OCix disconnected\n2: Clear OCix on Compare Match (If PWM is enabled, OCix is …\n3: Set OCix on Compare Match (If PWM is enabled, OCix is …\n1: Toggle OCix on Compare Match (Might depend on WGM)\nRegister <code>TCCR1A</code> reader\nTimer/Counter1 Control Register A\nRegister <code>TCCR1A</code> writer\nField <code>WGM1</code> reader - Waveform Generation Mode\nField <code>WGM1</code> writer - Waveform Generation Mode\nWrites raw bits to the register.\nBits 6:7 - Compare Output Mode 1A, bits\nBits 6:7 - Compare Output Mode 1A, bits\nBits 4:5 - Compare Output Mode 1B, bits\nBits 4:5 - Compare Output Mode 1B, bits\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - Waveform Generation Mode\nBits 0:1 - Waveform Generation Mode\nPrescaler source of Timer/Counter 1\nField <code>CS1</code> reader - Prescaler source of Timer/Counter 1\nField <code>CS1</code> writer - Prescaler source of Timer/Counter 1\n1: Running, No Prescaling\n6: Running, ExtClk Tx Falling Edge\n7: Running, ExtClk Tx Rising Edge\nField <code>ICES1</code> reader - Input Capture 1 Edge Select\nField <code>ICES1</code> writer - Input Capture 1 Edge Select\nField <code>ICNC1</code> reader - Input Capture 1 Noise Canceler\nField <code>ICNC1</code> writer - Input Capture 1 Noise Canceler\n0: No clock source (Timer/Counter stopped)\n5: Running, CLK/1024\n4: Running, CLK/256\n3: Running, CLK/64\n2: Running, CLK/8\nRegister <code>TCCR1B</code> reader\nTimer/Counter1 Control Register B\nRegister <code>TCCR1B</code> writer\nField <code>WGM1</code> reader - Waveform Generation Mode\nField <code>WGM1</code> writer - Waveform Generation Mode\nWrites raw bits to the register.\nBits 0:2 - Prescaler source of Timer/Counter 1\nBits 0:2 - Prescaler source of Timer/Counter 1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 6 - Input Capture 1 Edge Select\nBit 6 - Input Capture 1 Edge Select\nBit 7 - Input Capture 1 Noise Canceler\nBit 7 - Input Capture 1 Noise Canceler\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 3:4 - Waveform Generation Mode\nBits 3:4 - Waveform Generation Mode\nField <code>FOC1A</code> writer - No Description.\nField <code>FOC1B</code> writer - No Description.\nRegister <code>TCCR1C</code> reader\nTimer/Counter1 Control Register C\nRegister <code>TCCR1C</code> writer\nWrites raw bits to the register.\nBit 7 - No Description.\nBit 6 - No Description.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>TCNT1</code> reader\nTimer/Counter1 Bytes\nRegister <code>TCNT1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ICF1</code> reader - Input Capture Flag 1\nField <code>ICF1</code> writer - Input Capture Flag 1\nField <code>OCF1A</code> reader - Output Compare Flag 1A\nField <code>OCF1A</code> writer - Output Compare Flag 1A\nField <code>OCF1B</code> reader - Output Compare Flag 1B\nField <code>OCF1B</code> writer - Output Compare Flag 1B\nRegister <code>TIFR1</code> reader\nTimer/Counter Interrupt Flag register\nField <code>TOV1</code> reader - Timer/Counter1 Overflow Flag\nField <code>TOV1</code> writer - Timer/Counter1 Overflow Flag\nRegister <code>TIFR1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 5 - Input Capture Flag 1\nBit 5 - Input Capture Flag 1\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Output Compare Flag 1A\nBit 1 - Output Compare Flag 1A\nBit 2 - Output Compare Flag 1B\nBit 2 - Output Compare Flag 1B\nBit 0 - Timer/Counter1 Overflow Flag\nBit 0 - Timer/Counter1 Overflow Flag\nField <code>ICIE1</code> reader - Timer/Counter1 Input Capture …\nField <code>ICIE1</code> writer - Timer/Counter1 Input Capture …\nField <code>OCIE1A</code> reader - Timer/Counter1 Output CompareA Match …\nField <code>OCIE1A</code> writer - Timer/Counter1 Output CompareA Match …\nField <code>OCIE1B</code> reader - Timer/Counter1 Output CompareB Match …\nField <code>OCIE1B</code> writer - Timer/Counter1 Output CompareB Match …\nRegister <code>TIMSK1</code> reader\nTimer/Counter Interrupt Mask Register\nField <code>TOIE1</code> reader - Timer/Counter1 Overflow Interrupt …\nField <code>TOIE1</code> writer - Timer/Counter1 Overflow Interrupt …\nRegister <code>TIMSK1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 5 - Timer/Counter1 Input Capture Interrupt Enable\nBit 5 - Timer/Counter1 Input Capture Interrupt Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Timer/Counter1 Output CompareA Match Interrupt …\nBit 1 - Timer/Counter1 Output CompareA Match Interrupt …\nBit 2 - Timer/Counter1 Output CompareB Match Interrupt …\nBit 2 - Timer/Counter1 Output CompareB Match Interrupt …\nBit 0 - Timer/Counter1 Overflow Interrupt Enable\nBit 0 - Timer/Counter1 Overflow Interrupt Enable\nASSR (rw) register accessor: an alias for <code>Reg&lt;ASSR_SPEC&gt;</code>\nGTCCR (rw) register accessor: an alias for <code>Reg&lt;GTCCR_SPEC&gt;</code>\nOCR2A (rw) register accessor: an alias for <code>Reg&lt;OCR2A_SPEC&gt;</code>\nOCR2B (rw) register accessor: an alias for <code>Reg&lt;OCR2B_SPEC&gt;</code>\nRegister block\nTCCR2A (rw) register accessor: an alias for …\nTCCR2B (rw) register accessor: an alias for …\nTCNT2 (rw) register accessor: an alias for <code>Reg&lt;TCNT2_SPEC&gt;</code>\nTIFR2 (rw) register accessor: an alias for <code>Reg&lt;TIFR2_SPEC&gt;</code>\nTIMSK2 (rw) register accessor: an alias for …\nAsynchronous Status Register\n0x7f - Asynchronous Status Register\nReturns the argument unchanged.\nGeneral Timer Counter Control register\n0x0c - General Timer Counter Control register\nCalls <code>U::from(self)</code>.\nTimer/Counter2 Output Compare Register A\n0x7c - Timer/Counter2 Output Compare Register A\nTimer/Counter2 Output Compare Register B\n0x7d - Timer/Counter2 Output Compare Register B\nTimer/Counter2 Control Register A\n0x79 - Timer/Counter2 Control Register A\nTimer/Counter2 Control Register B\n0x7a - Timer/Counter2 Control Register B\nTimer/Counter2\n0x7b - Timer/Counter2\nTimer/Counter Interrupt Flag Register\n0x00 - Timer/Counter Interrupt Flag Register\nTimer/Counter Interrupt Mask register\n0x39 - Timer/Counter Interrupt Mask register\nField <code>AS2</code> reader - Asynchronous Timer/Counter2\nField <code>AS2</code> writer - Asynchronous Timer/Counter2\nAsynchronous Status Register\nField <code>EXCLK</code> reader - Enable External Clock Input\nField <code>EXCLK</code> writer - Enable External Clock Input\nField <code>OCR2AUB</code> reader - Output Compare Register2 Update Busy\nField <code>OCR2AUB</code> writer - Output Compare Register2 Update Busy\nField <code>OCR2BUB</code> reader - Output Compare Register 2 Update …\nField <code>OCR2BUB</code> writer - Output Compare Register 2 Update …\nRegister <code>ASSR</code> reader\nField <code>TCN2UB</code> reader - Timer/Counter2 Update Busy\nField <code>TCN2UB</code> writer - Timer/Counter2 Update Busy\nField <code>TCR2AUB</code> reader - Timer/Counter Control Register2 …\nField <code>TCR2AUB</code> writer - Timer/Counter Control Register2 …\nField <code>TCR2BUB</code> reader - Timer/Counter Control Register2 …\nField <code>TCR2BUB</code> writer - Timer/Counter Control Register2 …\nRegister <code>ASSR</code> writer\nBit 5 - Asynchronous Timer/Counter2\nBit 5 - Asynchronous Timer/Counter2\nWrites raw bits to the register.\nBit 6 - Enable External Clock Input\nBit 6 - Enable External Clock Input\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 3 - Output Compare Register2 Update Busy\nBit 3 - Output Compare Register2 Update Busy\nBit 2 - Output Compare Register 2 Update Busy\nBit 2 - Output Compare Register 2 Update Busy\nBit 4 - Timer/Counter2 Update Busy\nBit 4 - Timer/Counter2 Update Busy\nBit 1 - Timer/Counter Control Register2 Update Busy\nBit 1 - Timer/Counter Control Register2 Update Busy\nBit 0 - Timer/Counter Control Register2 Update Busy\nBit 0 - Timer/Counter Control Register2 Update Busy\nGeneral Timer Counter Control register\nField <code>PSRASY</code> reader - Prescaler Reset Timer/Counter2\nField <code>PSRASY</code> writer - Prescaler Reset Timer/Counter2\nRegister <code>GTCCR</code> reader\nField <code>TSM</code> reader - Timer/Counter Synchronization Mode\nField <code>TSM</code> writer - Timer/Counter Synchronization Mode\nRegister <code>GTCCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Prescaler Reset Timer/Counter2\nBit 1 - Prescaler Reset Timer/Counter2\nBit 7 - Timer/Counter Synchronization Mode\nBit 7 - Timer/Counter Synchronization Mode\nTimer/Counter2 Output Compare Register A\nRegister <code>OCR2A</code> reader\nRegister <code>OCR2A</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTimer/Counter2 Output Compare Register B\nRegister <code>OCR2B</code> reader\nRegister <code>OCR2B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COM2B</code> reader - Compare Output B Mode\nField <code>COM2B</code> writer - Compare Output B Mode\nCompare Output B Mode\nField <code>COM2B</code> reader - Compare Output B Mode\nField <code>COM2B</code> writer - Compare Output B Mode\n2: CTC, Top: <em>OCRA</em>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n0: Normal port operation, OCix disconnected\n2: Clear OCix on Compare Match (If PWM is enabled, OCix is …\n3: Set OCix on Compare Match (If PWM is enabled, OCix is …\n1: Toggle OCix on Compare Match (Might depend on WGM)\n0: Normal, Top: <code>0xff</code>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n3: Fast PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>MAX</em>\n1: Phase Correct PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>BOTTOM</em>\nRegister <code>TCCR2A</code> reader\nTimer/Counter2 Control Register A\nRegister <code>TCCR2A</code> writer\nWaveform Genration Mode\nField <code>WGM2</code> reader - Waveform Genration Mode\nField <code>WGM2</code> writer - Waveform Genration Mode\nWrites raw bits to the register.\nBits 6:7 - Compare Output A Mode\nBits 6:7 - Compare Output A Mode\nBits 4:5 - Compare Output B Mode\nBits 4:5 - Compare Output B Mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - Waveform Genration Mode\nBits 0:1 - Waveform Genration Mode\nClock Select bits\nField <code>CS2</code> reader - Clock Select bits\nField <code>CS2</code> writer - Clock Select bits\n1: Running, No Prescaling\nField <code>FOC2A</code> writer - Force Output Compare A\nField <code>FOC2B</code> writer - Force Output Compare B\n0: No clock source (Timer/Counter stopped)\n7: Running, CLK/1024\n5: Running, CLK/128\n6: Running, CLK/256\n3: Running, CLK/32\n4: Running, CLK/64\n2: Running, CLK/8\nRegister <code>TCCR2B</code> reader\nTimer/Counter2 Control Register B\nRegister <code>TCCR2B</code> writer\nField <code>WGM22</code> reader - Waveform Generation Mode High Bit …\nField <code>WGM22</code> writer - Waveform Generation Mode High Bit …\nWrites raw bits to the register.\nBits 0:2 - Clock Select bits\nBits 0:2 - Clock Select bits\nBit 7 - Force Output Compare A\nBit 6 - Force Output Compare B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nRegister <code>TCNT2</code> reader\nTimer/Counter2\nRegister <code>TCNT2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>OCF2A</code> reader - Output Compare Flag 2A\nField <code>OCF2A</code> writer - Output Compare Flag 2A\nField <code>OCF2B</code> reader - Output Compare Flag 2B\nField <code>OCF2B</code> writer - Output Compare Flag 2B\nRegister <code>TIFR2</code> reader\nTimer/Counter Interrupt Flag Register\nField <code>TOV2</code> reader - Timer/Counter2 Overflow Flag\nField <code>TOV2</code> writer - Timer/Counter2 Overflow Flag\nRegister <code>TIFR2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Output Compare Flag 2A\nBit 1 - Output Compare Flag 2A\nBit 2 - Output Compare Flag 2B\nBit 2 - Output Compare Flag 2B\nBit 0 - Timer/Counter2 Overflow Flag\nBit 0 - Timer/Counter2 Overflow Flag\nField <code>OCIE2A</code> reader - Timer/Counter2 Output Compare Match …\nField <code>OCIE2A</code> writer - Timer/Counter2 Output Compare Match …\nField <code>OCIE2B</code> reader - Timer/Counter2 Output Compare Match …\nField <code>OCIE2B</code> writer - Timer/Counter2 Output Compare Match …\nRegister <code>TIMSK2</code> reader\nTimer/Counter Interrupt Mask register\nField <code>TOIE2</code> reader - Timer/Counter2 Overflow Interrupt …\nField <code>TOIE2</code> writer - Timer/Counter2 Overflow Interrupt …\nRegister <code>TIMSK2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Timer/Counter2 Output Compare Match A Interrupt …\nBit 1 - Timer/Counter2 Output Compare Match A Interrupt …\nBit 2 - Timer/Counter2 Output Compare Match B Interrupt …\nBit 2 - Timer/Counter2 Output Compare Match B Interrupt …\nBit 0 - Timer/Counter2 Overflow Interrupt Enable\nBit 0 - Timer/Counter2 Overflow Interrupt Enable\nRegister block\nTWAMR (rw) register accessor: an alias for <code>Reg&lt;TWAMR_SPEC&gt;</code>\nTWAR (rw) register accessor: an alias for <code>Reg&lt;TWAR_SPEC&gt;</code>\nTWBR (rw) register accessor: an alias for <code>Reg&lt;TWBR_SPEC&gt;</code>\nTWCR (rw) register accessor: an alias for <code>Reg&lt;TWCR_SPEC&gt;</code>\nTWDR (rw) register accessor: an alias for <code>Reg&lt;TWDR_SPEC&gt;</code>\nTWSR (rw) register accessor: an alias for <code>Reg&lt;TWSR_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTWI (Slave) Address Mask Register\n0x05 - TWI (Slave) Address Mask Register\nTWI (Slave) Address register\n0x02 - TWI (Slave) Address register\nTWI Bit Rate register\n0x00 - TWI Bit Rate register\nTWI Control Register\n0x04 - TWI Control Register\nTWI Data register\n0x03 - TWI Data register\nTWI Status Register\n0x01 - TWI Status Register\nRegister <code>TWAMR</code> reader\nTWI (Slave) Address Mask Register\nField <code>TWAM</code> reader - TWI (Slave) Address Mask Bits\nField <code>TWAM</code> writer - TWI (Slave) Address Mask Bits\nRegister <code>TWAMR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 1:7 - TWI (Slave) Address Mask Bits\nBits 1:7 - TWI (Slave) Address Mask Bits\nRegister <code>TWAR</code> reader\nTWI (Slave) Address register\nField <code>TWA</code> reader - TWI (Slave) Address register Bits\nField <code>TWA</code> writer - TWI (Slave) Address register Bits\nField <code>TWGCE</code> reader - TWI General Call Recognition Enable …\nField <code>TWGCE</code> writer - TWI General Call Recognition Enable …\nRegister <code>TWAR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 1:7 - TWI (Slave) Address register Bits\nBits 1:7 - TWI (Slave) Address register Bits\nBit 0 - TWI General Call Recognition Enable Bit\nBit 0 - TWI General Call Recognition Enable Bit\nRegister <code>TWBR</code> reader\nTWI Bit Rate register\nRegister <code>TWBR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>TWCR</code> reader\nTWI Control Register\nField <code>TWEA</code> reader - TWI Enable Acknowledge Bit\nField <code>TWEA</code> writer - TWI Enable Acknowledge Bit\nField <code>TWEN</code> reader - TWI Enable Bit\nField <code>TWEN</code> writer - TWI Enable Bit\nField <code>TWIE</code> reader - TWI Interrupt Enable\nField <code>TWIE</code> writer - TWI Interrupt Enable\nField <code>TWINT</code> reader - TWI Interrupt Flag\nField <code>TWINT</code> writer - TWI Interrupt Flag\nField <code>TWSTA</code> reader - TWI Start Condition Bit\nField <code>TWSTA</code> writer - TWI Start Condition Bit\nField <code>TWSTO</code> reader - TWI Stop Condition Bit\nField <code>TWSTO</code> writer - TWI Stop Condition Bit\nField <code>TWWC</code> reader - TWI Write Collition Flag\nRegister <code>TWCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 6 - TWI Enable Acknowledge Bit\nBit 6 - TWI Enable Acknowledge Bit\nBit 2 - TWI Enable Bit\nBit 2 - TWI Enable Bit\nBit 0 - TWI Interrupt Enable\nBit 0 - TWI Interrupt Enable\nBit 7 - TWI Interrupt Flag\nBit 7 - TWI Interrupt Flag\nBit 5 - TWI Start Condition Bit\nBit 5 - TWI Start Condition Bit\nBit 4 - TWI Stop Condition Bit\nBit 4 - TWI Stop Condition Bit\nBit 3 - TWI Write Collition Flag\nRegister <code>TWDR</code> reader\nTWI Data register\nRegister <code>TWDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Prescaler Value 1\n2: Prescaler Value 16\n1: Prescaler Value 4\n3: Prescaler Value 64\nRegister <code>TWSR</code> reader\nTWI Prescaler\nField <code>TWPS</code> reader - TWI Prescaler\nField <code>TWPS</code> writer - TWI Prescaler\nTWI Status Register\nField <code>TWS</code> reader - TWI Status\nRegister <code>TWSR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:1 - TWI Prescaler\nBits 0:1 - TWI Prescaler\nBits 3:7 - TWI Status\nRegister block\nUBRR0 (rw) register accessor: an alias for <code>Reg&lt;UBRR0_SPEC&gt;</code>\nUCSR0A (rw) register accessor: an alias for …\nUCSR0B (rw) register accessor: an alias for …\nUCSR0C (rw) register accessor: an alias for …\nUDR0 (rw) register accessor: an alias for <code>Reg&lt;UDR0_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Baud Rate Register Bytes\n0x04 - USART Baud Rate Register Bytes\nUSART Control and Status Register A\n0x00 - USART Control and Status Register A\nUSART Control and Status Register B\n0x01 - USART Control and Status Register B\nUSART Control and Status Register C\n0x02 - USART Control and Status Register C\nUSART I/O Data Register\n0x06 - USART I/O Data Register\nRegister <code>UBRR0</code> reader\nUSART Baud Rate Register Bytes\nRegister <code>UBRR0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DOR0</code> reader - Data overRun\nField <code>FE0</code> reader - Framing Error\nField <code>MPCM0</code> reader - Multi-processor Communication Mode\nField <code>MPCM0</code> writer - Multi-processor Communication Mode\nRegister <code>UCSR0A</code> reader\nField <code>RXC0</code> reader - USART Receive Complete\nField <code>TXC0</code> reader - USART Transmit Complete\nField <code>TXC0</code> writer - USART Transmit Complete\nField <code>U2X0</code> reader - Double the USART transmission speed\nField <code>U2X0</code> writer - Double the USART transmission speed\nUSART Control and Status Register A\nField <code>UDRE0</code> reader - USART Data Register Empty\nField <code>UPE0</code> reader - Parity Error\nRegister <code>UCSR0A</code> writer\nWrites raw bits to the register.\nBit 3 - Data overRun\nBit 4 - Framing Error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Multi-processor Communication Mode\nBit 0 - Multi-processor Communication Mode\nBit 7 - USART Receive Complete\nBit 6 - USART Transmit Complete\nBit 6 - USART Transmit Complete\nBit 1 - Double the USART transmission speed\nBit 1 - Double the USART transmission speed\nBit 5 - USART Data Register Empty\nBit 2 - Parity Error\nRegister <code>UCSR0B</code> reader\nField <code>RXB80</code> reader - Receive Data Bit 8\nField <code>RXCIE0</code> reader - RX Complete Interrupt Enable\nField <code>RXCIE0</code> writer - RX Complete Interrupt Enable\nField <code>RXEN0</code> reader - Receiver Enable\nField <code>RXEN0</code> writer - Receiver Enable\nField <code>TXB80</code> reader - Transmit Data Bit 8\nField <code>TXB80</code> writer - Transmit Data Bit 8\nField <code>TXCIE0</code> reader - TX Complete Interrupt Enable\nField <code>TXCIE0</code> writer - TX Complete Interrupt Enable\nField <code>TXEN0</code> reader - Transmitter Enable\nField <code>TXEN0</code> writer - Transmitter Enable\nUSART Control and Status Register B\nField <code>UCSZ02</code> reader - Character Size\nField <code>UCSZ02</code> writer - Character Size\nField <code>UDRIE0</code> reader - USART Data register Empty Interrupt …\nField <code>UDRIE0</code> writer - USART Data register Empty Interrupt …\nRegister <code>UCSR0B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Receive Data Bit 8\nBit 7 - RX Complete Interrupt Enable\nBit 7 - RX Complete Interrupt Enable\nBit 4 - Receiver Enable\nBit 4 - Receiver Enable\nBit 0 - Transmit Data Bit 8\nBit 0 - Transmit Data Bit 8\nBit 6 - TX Complete Interrupt Enable\nBit 6 - TX Complete Interrupt Enable\nBit 3 - Transmitter Enable\nBit 3 - Transmitter Enable\nBit 2 - Character Size\nBit 2 - Character Size\nBit 5 - USART Data register Empty Interrupt Enable\nBit 5 - USART Data register Empty Interrupt Enable\n0: Character Size: 5 bit\n1: Character Size: 6 bit\n2: Character Size: 7 bit\n3: Character Size: 8 bit\n0: Disabled\n1: Transmit on Falling XCKn Edge, Receive on Rising XCKn …\n2: Enabled, Even Parity\n3: Enabled, Odd Parity\nRegister <code>UCSR0C</code> reader\n0: Transmit on Rising XCKn Edge, Receive on Falling XCKn …\n3: Master SPI (MSPIM)\n0: 1-bit\n1: 2-bit\nClock Polarity\nField <code>UCPOL0</code> reader - Clock Polarity\nField <code>UCPOL0</code> writer - Clock Polarity\nUSART Control and Status Register C\nCharacter Size\nField <code>UCSZ0</code> reader - Character Size\nField <code>UCSZ0</code> writer - Character Size\nUSART Mode Select\nField <code>UMSEL0</code> reader - USART Mode Select\nField <code>UMSEL0</code> writer - USART Mode Select\nParity Mode Bits\nField <code>UPM0</code> reader - Parity Mode Bits\nField <code>UPM0</code> writer - Parity Mode Bits\n0: Asynchronous USART\n1: Synchronous USART\nStop Bit Select\nField <code>USBS0</code> reader - Stop Bit Select\nField <code>USBS0</code> writer - Stop Bit Select\nRegister <code>UCSR0C</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Clock Polarity\nBit 0 - Clock Polarity\nBits 1:2 - Character Size\nBits 1:2 - Character Size\nBits 6:7 - USART Mode Select\nBits 6:7 - USART Mode Select\nBits 4:5 - Parity Mode Bits\nBits 4:5 - Parity Mode Bits\nBit 3 - Stop Bit Select\nBit 3 - Stop Bit Select\nRegister <code>UDR0</code> reader\nUSART I/O Data Register\nRegister <code>UDR0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister block\nWDTCSR (rw) register accessor: an alias for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWatchdog Timer Control Register\n0x00 - Watchdog Timer Control Register\n6: - 128K (131072) cycles, ~1s\n3: - 16K (16384) cycles, ~0.125s\n7: - 256K (262144) cycles, ~2s\n0: - 2048 cycles, ~16ms/512K (524288) cycles, ~4s if WDPH …\n4: - 32K (32768) cycles, ~0.25s\n1: - 4096 cycles, ~32ms/1024K (1048576) cycles, ~8s if …\n5: - 64K (65536) cycles, ~0.5s\n2: - 8192 cycles, ~64ms\nRegister <code>WDTCSR</code> reader\nRegister <code>WDTCSR</code> writer\nField <code>WDCE</code> reader - Watchdog Change Enable\nField <code>WDCE</code> writer - Watchdog Change Enable\nField <code>WDE</code> reader - Watch Dog Enable\nField <code>WDE</code> writer - Watch Dog Enable\nField <code>WDIE</code> reader - Watchdog Timeout Interrupt Enable\nField <code>WDIE</code> writer - Watchdog Timeout Interrupt Enable\nField <code>WDIF</code> reader - Watchdog Timeout Interrupt Flag\nField <code>WDIF</code> writer - Watchdog Timeout Interrupt Flag\nField <code>WDPH</code> reader - Watchdog Timer Prescaler - High Bit\nField <code>WDPH</code> writer - Watchdog Timer Prescaler - High Bit\nWatchdog Timer Prescaler - Low Bits\nField <code>WDPL</code> reader - Watchdog Timer Prescaler - Low Bits\nField <code>WDPL</code> writer - Watchdog Timer Prescaler - Low Bits\nWatchdog Timer Control Register\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 4 - Watchdog Change Enable\nBit 4 - Watchdog Change Enable\nBit 3 - Watch Dog Enable\nBit 3 - Watch Dog Enable\nBit 6 - Watchdog Timeout Interrupt Enable\nBit 6 - Watchdog Timeout Interrupt Enable\nBit 7 - Watchdog Timeout Interrupt Flag\nBit 7 - Watchdog Timeout Interrupt Flag\nBit 5 - Watchdog Timer Prescaler - High Bit\nBit 5 - Watchdog Timer Prescaler - High Bit\nBits 0:2 - Watchdog Timer Prescaler - Low Bits\nBits 0:2 - Watchdog Timer Prescaler - Low Bits\nType-alias for a pin type which can represent any concrete …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGPIO pin modes\nPin is configured as an analog input (for the ADC).\nAny input (floating or pulled-up), used like …\nFloating input, used like <code>Input&lt;Floating&gt;</code>.\nPin is configured as digital input (floating or pulled-up).\nPin is configured as a digital output with open drain …\nPin is configured as a digital output.\nPulled-up input, used like <code>Input&lt;PullUp&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of the value returned by <code>capture</code>\nEnumeration of channels that can be used with this <code>Capture</code> …\nEnumeration of channels that can be used with this <code>Pwm</code> …\nThe type of the value returned by <code>count</code>\nType for the <code>duty</code> methods\nType for the <code>duty</code> methods\nThe error associated to this writer\nError type returned by ADC methods\nError type\nError type\nError type\nError type\nThe type of error that can occur when writing\nError type\nError type\nRead error\nWrite error\nAn enumeration of SPI errors\nEnumeration of <code>Capture</code> errors\nType of the <code>Ok</code> variant of the result.\nThe unit of time used by this timer\nUnit of time used by the watchdog\nA time unit that can be converted into a human time unit …\nA time unit that can be converted into a human time unit …\nInput capture\nPulse Width Modulation\nA single PWM channel / pin\nQuadrature encoder interface\nADCs that sample on single channels per request, and do so …\nMillisecond delay\nMicrosecond delay\nBlocking read\nBlocking write\nBlocking write + read\nBlocking read\nWrite half of a serial interface (blocking variant)\nBlocking transfer\nBlocking write\nSingle digital input pin\nSingle digital push-pull output pin\nOutput pin that can be toggled\nRead half of a serial interface\nWrite half of a serial interface\nFull duplex (master mode)\nA count down timer\nFeeds an existing watchdog to ensure the processor isn’t …\nDisables a running watchdog timer so the processor won’t …\nEnables A watchdog timer to reset the processor if …\nA collection of methods that are required / used to format …\nUnwrapping an infallible result into its success value.\nBlock until the serial interface has sent all buffered …\nWrites a slice, blocking until everything has been written\n“Waits” for a transition in the capture <code>channel</code> and …\nReturns the current pulse count of the encoder\nPauses execution for <code>ms</code> milliseconds\nPauses execution for <code>us</code> microseconds\nReturns the count direction\nDisables the watchdog\nDisables a capture <code>channel</code>\nDisables a PWM <code>channel</code>\nDisables a PWM <code>channel</code>\nEnables a capture <code>channel</code>\nEnables a PWM <code>channel</code>\nEnables a PWM <code>channel</code>\nTriggers the watchdog. This must be done once the watchdog …\nEnsures that none of the previously written words are …\nReturns the current duty cycle\nReturns the current duty cycle\nReturns the maximum duty cycle value\nReturns the maximum duty cycle value\nReturns the current PWM period\nReturns the current resolution\nIs the input pin high?\nIs the input pin low?\nRequest that the ADC begin a conversion on the specified …\nReads enough bytes from slave with <code>address</code> to fill <code>buffer</code>\nReads enough bytes from hardware random number generator …\nReads a single word from the serial interface\nReads the word stored in the shift register\nSends a word to the slave\nSets a new duty cycle\nSets a new duty cycle\nDrives the pin high\nDrives the pin low\nSets a new PWM period\nSets the resolution of the capture timer\nStarts a new count down\nStarts the watchdog with a given period, typically once …\nToggle pin output.\nSends <code>words</code> to the slave. Returns the <code>words</code> received from …\nUnwraps a result, returning the content of an <code>Ok</code>.\nNon-blockingly “waits” until the count down finishes\nWrites bytes to slave with address <code>address</code>\nSends <code>words</code> to the slave, ignoring all the incoming words\nWrites a single word to the serial interface\nWrites a <code>char</code> into this writer, returning whether the …\nWrites bytes to slave with address <code>address</code> and then reads …\nWrites a string slice into this writer, returning whether …\nNo prescaling, the IO clock drives the timer directly.\nDivide the IO clock by 1024.\nDivide the IO clock by 256.\nDivide the IO clock by 64.\nDivide the IO clock by 8.\nClock prescaler for PWM\nImplement traits and types for PWM timers\nUse <code>TC0</code> for PWM (pins <code>PD5</code>, <code>PD6</code>)\nUse <code>TC1</code> for PWM (pins <code>PB1</code>, <code>PB2</code>)\nUse <code>TC2</code> for PWM (pins <code>PB3</code>, <code>PD3</code>)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrapper for the CS pin\nOrder of data transmission, either MSB first or LSB first\nOscillator Clock Frequency division options.\nSettings to pass to Spi.\nInternal trait for low-level SPI peripherals\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n(Re)create a <code>ChipSelectPin</code> from a real <code>Pin&lt;&gt;</code> object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>ChipSelectPin</code> into the underlying “real” …\nCheck the interrupt flag to see if the write has completed\nRead a byte from the data register\nDisable the peripheral\nSets up the control/status registers with the right …\nPerform a transaction of a single byte\nWrite a byte to the data register, which begins …\nRepresentation of a USART baudrate\nSame as <code>BaudrateExt</code> but accounts for an errata of certain …\nProvide a <code>into_baudrate()</code> method for integers.\nAll data from the USART data register was transmitted.\nEvents/Interrupts for USART peripherals\nA complete byte was received.\nA compete byte was sent.\nInternal trait for low-level USART peripherals.\nThe baudrate calculation depends on the configured clock …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculate baudrate parameters from this number.\nCalculate baudrate parameters from this number (with …\nCalculate parameters for a certain baudrate at a certain …\nDisable this USART peripheral such that the pins can be …\nFlush all remaining data in the TX buffer.\nEnable &amp; initialize this USART peripheral to the given …\nEnable/Disable a certain interrupt.\nRead a byte from the RX buffer.\nWrite a byte to the TX buffer.\nValue of the <code>U2X#</code> bit\nValue of the <code>UBRR#</code> register\nConstruct a <code>Baudrate</code> from given <code>UBRR#</code> and <code>U2X#</code> values.\n1 second\n125 milliseconds\n16 milliseconds\n2 seconds\n250 milliseconds\n32 milliseconds\n4 seconds\n500 milliseconds\n64 milliseconds\n8 seconds\nWatchdog Timeout\nInternal trait for low-level watchdog operations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFeed this watchdog, to reset its period.\nInitialize the watchdog timer.\nStart the watchdog timer with the specified timeout.\nDisable/stop this watchdog again.")