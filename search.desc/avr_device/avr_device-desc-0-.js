searchState.loadedDescShard("avr_device", 0, "This crate contains register definitions for <strong>attiny85</strong>, and …\nAssembly instructions\nATtiny85 Peripheral access API for ATTINY85 …\nCommon register and bit access and modify traits\nChip-Generic Interrupt Utilities\nBlocks the program for at least <code>cycles</code> CPU cycles.\nNo Operation\nSleep / Wait For Interrupt\nWatchdog Reset\nAnalog Comparator\nAC\nAnalog-to-Digital Converter\nADC\n8 - ADC Conversion ready\n7 - Analog comparator\nBootloader\nBOOT_LOAD\nCPU Registers\nCPU\nEEPROM\nEEPROM\n6 - EEPROM Ready\nExternal Interrupts\nEXINT\nFuses\nFUSE\n1 - External Interrupt 0\nEnumeration of all the interrupts.\nLockbits\nLOCKBIT\nNumber available in the NVIC for configuring priority\n2 - Pin change Interrupt Request 0\nI/O Port\nPORTB\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nAll the peripherals.\n0 - External Pin, Power-on Reset, Brown-out Reset,Watchdog …\nTimer/Counter0, 8-bit, PWM\nTC0\nTimer/Counter1, 8-bit\nTC1\n10 - Timer/Counter0 Compare Match A\n11 - Timer/Counter0 Compare Match B\n5 - Timer/Counter0 Overflow\n3 - Timer/Counter1 Compare Match 1A\n9 - Timer/Counter1 Compare Match B\n4 - Timer/Counter1 Overflow\nUniversal Serial Interface\nUSI\n14 - USI Overflow\n13 - USI START\nWatchdog Timer\nWDT\n12 - Watchdog Time-out\nAnalog Comparator\nAnalog-to-Digital Converter\nBootloader\nCPU Registers\nEEPROM\nExternal Interrupts\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuses\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLockbits\nI/O Port\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nUnchecked version of <code>Peripherals::take</code>.\nReturns all the peripherals <em>once</em>.\nTimer/Counter0, 8-bit, PWM\nTimer/Counter1, 8-bit\nAttempt to convert a given value into an <code>Interrupt</code>\nUniversal Serial Interface\nWatchdog Timer\nACSR (rw) register accessor: an alias for <code>Reg&lt;ACSR_SPEC&gt;</code>\nADCSRB (rw) register accessor: an alias for …\nDIDR0 (rw) register accessor: an alias for <code>Reg&lt;DIDR0_SPEC&gt;</code>\nRegister block\nAnalog Comparator Control And Status Register\n0x05 - Analog Comparator Control And Status Register\nADC Control and Status Register B\n0x00 - ADC Control and Status Register B\nDigital Input Disable Register 0\n0x11 - Digital Input Disable Register 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ACBG</code> reader - Analog Comparator Bandgap Select\nField <code>ACBG</code> writer - Analog Comparator Bandgap Select\nField <code>ACD</code> reader - Analog Comparator Disable\nField <code>ACD</code> writer - Analog Comparator Disable\nField <code>ACIE</code> reader - Analog Comparator Interrupt Enable\nField <code>ACIE</code> writer - Analog Comparator Interrupt Enable\nAnalog Comparator Interrupt Mode Select\nField <code>ACIS</code> reader - Analog Comparator Interrupt Mode Select\nField <code>ACIS</code> writer - Analog Comparator Interrupt Mode Select\nField <code>ACI</code> reader - Analog Comparator Interrupt Flag\nField <code>ACI</code> writer - Analog Comparator Interrupt Flag\nField <code>ACO</code> reader - Analog Compare Output\nAnalog Comparator Control And Status Register\n2: Interrupt on Falling Edge\n3: Interrupt on Rising Edge\n0: Interrupt on Toggle\nRegister <code>ACSR</code> reader\nRegister <code>ACSR</code> writer\nBit 6 - Analog Comparator Bandgap Select\nBit 6 - Analog Comparator Bandgap Select\nBit 7 - Analog Comparator Disable\nBit 7 - Analog Comparator Disable\nBit 4 - Analog Comparator Interrupt Flag\nBit 4 - Analog Comparator Interrupt Flag\nBit 3 - Analog Comparator Interrupt Enable\nBit 3 - Analog Comparator Interrupt Enable\nBits 0:1 - Analog Comparator Interrupt Mode Select\nBits 0:1 - Analog Comparator Interrupt Mode Select\nBit 5 - Analog Compare Output\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ON_FALLING_EDGE</code>\nChecks if the value of the field is <code>ON_RISING_EDGE</code>\nChecks if the value of the field is <code>ON_TOGGLE</code>\nInterrupt on Falling Edge\nInterrupt on Rising Edge\nInterrupt on Toggle\nGet enumerated values variant\nField <code>ACME</code> reader - Analog Comparator Multiplexer Enable\nField <code>ACME</code> writer - Analog Comparator Multiplexer Enable\nADC Control and Status Register B\nRegister <code>ADCSRB</code> reader\nRegister <code>ADCSRB</code> writer\nBit 6 - Analog Comparator Multiplexer Enable\nBit 6 - Analog Comparator Multiplexer Enable\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>AIN0D</code> reader - AIN0 Digital Input Disable\nField <code>AIN0D</code> writer - AIN0 Digital Input Disable\nField <code>AIN1D</code> reader - AIN1 Digital Input Disable\nField <code>AIN1D</code> writer - AIN1 Digital Input Disable\nDigital Input Disable Register 0\nRegister <code>DIDR0</code> reader\nRegister <code>DIDR0</code> writer\nBit 0 - AIN0 Digital Input Disable\nBit 0 - AIN0 Digital Input Disable\nBit 1 - AIN1 Digital Input Disable\nBit 1 - AIN1 Digital Input Disable\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nADC (rw) register accessor: an alias for <code>Reg&lt;ADC_SPEC&gt;</code>\nADCSRA (rw) register accessor: an alias for …\nADCSRB (rw) register accessor: an alias for …\nADMUX (rw) register accessor: an alias for <code>Reg&lt;ADMUX_SPEC&gt;</code>\nDIDR0 (rw) register accessor: an alias for <code>Reg&lt;DIDR0_SPEC&gt;</code>\nRegister block\nADC Data Register Bytes\n0x01 - ADC Data Register Bytes\nADC Control and Status Register A\n0x03 - ADC Control and Status Register A\nADC Control and Status Register B\n0x00 - ADC Control and Status Register B\nThe ADC multiplexer Selection Register\n0x04 - The ADC multiplexer Selection Register\nDigital Input Disable Register 0\n0x11 - Digital Input Disable Register 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nADC Data Register Bytes\nRegister <code>ADC</code> reader\nRegister <code>ADC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>ADATE</code> reader - ADC Auto Trigger Enable\nField <code>ADATE</code> writer - ADC Auto Trigger Enable\nADC Control and Status Register A\nField <code>ADEN</code> reader - ADC Enable\nField <code>ADEN</code> writer - ADC Enable\nField <code>ADIE</code> reader - ADC Interrupt Enable\nField <code>ADIE</code> writer - ADC Interrupt Enable\nField <code>ADIF</code> reader - ADC Interrupt Flag\nField <code>ADIF</code> writer - ADC Interrupt Flag\nADC Prescaler Select Bits\nField <code>ADPS</code> reader - ADC Prescaler Select Bits\nField <code>ADPS</code> writer - ADC Prescaler Select Bits\nField <code>ADSC</code> reader - ADC Start Conversion\nField <code>ADSC</code> writer - ADC Start Conversion\n7: Prescaler Value 128\n4: Prescaler Value 16\n1: Prescaler Value 2\n5: Prescaler Value 32\n2: Prescaler Value 4\n6: Prescaler Value 64\n3: Prescaler Value 8\nRegister <code>ADCSRA</code> reader\nRegister <code>ADCSRA</code> writer\nBit 5 - ADC Auto Trigger Enable\nBit 5 - ADC Auto Trigger Enable\nBit 7 - ADC Enable\nBit 7 - ADC Enable\nBit 3 - ADC Interrupt Enable\nBit 3 - ADC Interrupt Enable\nBit 4 - ADC Interrupt Flag\nBit 4 - ADC Interrupt Flag\nBits 0:2 - ADC Prescaler Select Bits\nBits 0:2 - ADC Prescaler Select Bits\nBit 6 - ADC Start Conversion\nBit 6 - ADC Start Conversion\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>PRESCALER_128</code>\nChecks if the value of the field is <code>PRESCALER_16</code>\nChecks if the value of the field is <code>PRESCALER_2</code>\nChecks if the value of the field is <code>PRESCALER_32</code>\nChecks if the value of the field is <code>PRESCALER_4</code>\nChecks if the value of the field is <code>PRESCALER_64</code>\nChecks if the value of the field is <code>PRESCALER_8</code>\nPrescaler Value 128\nPrescaler Value 16\nPrescaler Value 2\nPrescaler Value 32\nPrescaler Value 4\nPrescaler Value 64\nPrescaler Value 8\nGet enumerated values variant\n1: Analog Comparator\nADC Control and Status Register B\nADC Auto Trigger Sources\nField <code>ADTS</code> reader - ADC Auto Trigger Sources\nField <code>ADTS</code> writer - ADC Auto Trigger Sources\nField <code>BIN</code> reader - Bipolar Input Mode\nField <code>BIN</code> writer - Bipolar Input Mode\n0: Free Running mode\n2: External Interrupt Request 0\nField <code>IPR</code> reader - Input Polarity Mode\nField <code>IPR</code> writer - Input Polarity Mode\n6: Pin Change Interrupt Request\nRegister <code>ADCSRB</code> reader\n3: Timer/Counter0 Compare Match A\n5: Timer/Counter0 Compare Match B\n4: Timer/Counter0 Overflow\nRegister <code>ADCSRB</code> writer\nAnalog Comparator\nBits 0:2 - ADC Auto Trigger Sources\nBits 0:2 - ADC Auto Trigger Sources\nBit 7 - Bipolar Input Mode\nBit 7 - Bipolar Input Mode\nWrites raw bits to the register.\nFree Running mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExternal Interrupt Request 0\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 5 - Input Polarity Mode\nBit 5 - Input Polarity Mode\nChecks if the value of the field is <code>AC</code>\nChecks if the value of the field is <code>FREE</code>\nChecks if the value of the field is <code>INT0</code>\nChecks if the value of the field is <code>PCIR</code>\nChecks if the value of the field is <code>TC0_CMA</code>\nChecks if the value of the field is <code>TC0_CMB</code>\nChecks if the value of the field is <code>TC0_OVF</code>\nPin Change Interrupt Request\nTimer/Counter0 Compare Match A\nTimer/Counter0 Compare Match B\nTimer/Counter0 Overflow\nGet enumerated values variant\n0: Single-ended Input ADC0\n8: Differential Inputs Positive ADC0 Negative ADC0 1x Gain\n9: Differential Inputs Positive ADC0 Negative ADC0 20x Gain\n10: Differential Inputs Positive ADC0 Negative ADC1 1x Gain\n11: Differential Inputs Positive ADC0 Negative ADC1 20x …\n1: Single-ended Input ADC1\n2: Single-ended Input ADC2\n4: Differential Inputs Positive ADC2 Negative ADC2 1x Gain\n5: Differential Inputs Positive ADC2 Negative ADC2 20x Gain\n6: Differential Inputs Positive ADC2 Negative ADC3 1x Gain\n7: Differential Inputs Positive ADC2 Negative ADC3 20x Gain\n3: Single-ended Input ADC3\n13: 0V (GND)\n12: Internal Reference (VBG)\nField <code>ADLAR</code> reader - Left Adjust Result\nField <code>ADLAR</code> writer - Left Adjust Result\nThe ADC multiplexer Selection Register\n1: External Voltage Reference at AREF pin, Internal …\n2: Internal Voltage Reference (1.1V when REFS2 is cleared, …\n3: Internal 2.56V Voltage Reference with external bypass …\nAnalog Channel and Gain Selection Bits\nField <code>MUX</code> reader - Analog Channel and Gain Selection Bits\nField <code>MUX</code> writer - Analog Channel and Gain Selection Bits\nRegister <code>ADMUX</code> reader\nField <code>REFS2</code> reader - Reference Selection Bit 2\nField <code>REFS2</code> writer - Reference Selection Bit 2\nReference Selection Bits\nField <code>REFS</code> reader - Reference Selection Bits\nField <code>REFS</code> writer - Reference Selection Bits\n15: Temperature sensor\n0: Vcc used as Voltage Reference, disconnected from Aref\nRegister <code>ADMUX</code> writer\nSingle-ended Input ADC0\nDifferential Inputs Positive ADC0 Negative ADC0 1x Gain\nDifferential Inputs Positive ADC0 Negative ADC0 20x Gain\nDifferential Inputs Positive ADC0 Negative ADC1 1x Gain\nDifferential Inputs Positive ADC0 Negative ADC1 20x Gain\nSingle-ended Input ADC1\nSingle-ended Input ADC2\nDifferential Inputs Positive ADC2 Negative ADC2 1x Gain\nDifferential Inputs Positive ADC2 Negative ADC2 20x Gain\nDifferential Inputs Positive ADC2 Negative ADC3 1x Gain\nDifferential Inputs Positive ADC2 Negative ADC3 20x Gain\nSingle-ended Input ADC3\n0V (GND)\nInternal Reference (VBG)\nBit 5 - Left Adjust Result\nBit 5 - Left Adjust Result\nExternal Voltage Reference at AREF pin, Internal Voltage …\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInternal Voltage Reference (1.1V when REFS2 is cleared, …\nInternal 2.56V Voltage Reference with external bypass …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ADC0</code>\nChecks if the value of the field is <code>ADC0_ADC0_1X</code>\nChecks if the value of the field is <code>ADC0_ADC0_20X</code>\nChecks if the value of the field is <code>ADC0_ADC1_1X</code>\nChecks if the value of the field is <code>ADC0_ADC1_20X</code>\nChecks if the value of the field is <code>ADC1</code>\nChecks if the value of the field is <code>ADC2</code>\nChecks if the value of the field is <code>ADC2_ADC2_1X</code>\nChecks if the value of the field is <code>ADC2_ADC2_20X</code>\nChecks if the value of the field is <code>ADC2_ADC3_1X</code>\nChecks if the value of the field is <code>ADC2_ADC3_20X</code>\nChecks if the value of the field is <code>ADC3</code>\nChecks if the value of the field is <code>ADC_GND</code>\nChecks if the value of the field is <code>ADC_VBG</code>\nChecks if the value of the field is <code>AREF</code>\nChecks if the value of the field is <code>INTERNAL</code>\nChecks if the value of the field is <code>INTERNAL_BYPASS</code>\nChecks if the value of the field is <code>TEMPSENS</code>\nChecks if the value of the field is <code>VCC</code>\nBits 0:3 - Analog Channel and Gain Selection Bits\nBits 0:3 - Analog Channel and Gain Selection Bits\nBits 6:7 - Reference Selection Bits\nBits 6:7 - Reference Selection Bits\nBit 4 - Reference Selection Bit 2\nBit 4 - Reference Selection Bit 2\nTemperature sensor\nGet enumerated values variant\nGet enumerated values variant\nVcc used as Voltage Reference, disconnected from Aref\nField <code>ADC0D</code> reader - ADC0 Digital input Disable\nField <code>ADC0D</code> writer - ADC0 Digital input Disable\nField <code>ADC1D</code> reader - ADC1 Digital input Disable\nField <code>ADC1D</code> writer - ADC1 Digital input Disable\nField <code>ADC2D</code> reader - ADC2 Digital input Disable\nField <code>ADC2D</code> writer - ADC2 Digital input Disable\nField <code>ADC3D</code> reader - ADC3 Digital input Disable\nField <code>ADC3D</code> writer - ADC3 Digital input Disable\nDigital Input Disable Register 0\nRegister <code>DIDR0</code> reader\nRegister <code>DIDR0</code> writer\nBit 5 - ADC0 Digital input Disable\nBit 5 - ADC0 Digital input Disable\nBit 2 - ADC1 Digital input Disable\nBit 2 - ADC1 Digital input Disable\nBit 4 - ADC2 Digital input Disable\nBit 4 - ADC2 Digital input Disable\nBit 3 - ADC3 Digital input Disable\nBit 3 - ADC3 Digital input Disable\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister block\nSPMCSR (rw) register accessor: an alias for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStore Program Memory Control Register\n0x00 - Store Program Memory Control Register\nField <code>CTPB</code> reader - Clear temporary page buffer\nField <code>CTPB</code> writer - Clear temporary page buffer\nField <code>PGERS</code> reader - Page Erase\nField <code>PGERS</code> writer - Page Erase\nField <code>PGWRT</code> reader - Page Write\nField <code>PGWRT</code> writer - Page Write\nRegister <code>SPMCSR</code> reader\nField <code>RFLB</code> reader - Read fuse and lock bits\nField <code>RFLB</code> writer - Read fuse and lock bits\nField <code>RSIG</code> reader - Read Device Signature Imprint Table\nField <code>RSIG</code> writer - Read Device Signature Imprint Table\nStore Program Memory Control Register\nField <code>SPMEN</code> reader - Store Program Memory Enable\nField <code>SPMEN</code> writer - Store Program Memory Enable\nRegister <code>SPMCSR</code> writer\nWrites raw bits to the register.\nBit 4 - Clear temporary page buffer\nBit 4 - Clear temporary page buffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Page Erase\nBit 1 - Page Erase\nBit 2 - Page Write\nBit 2 - Page Write\nBit 3 - Read fuse and lock bits\nBit 3 - Read fuse and lock bits\nBit 5 - Read Device Signature Imprint Table\nBit 5 - Read Device Signature Imprint Table\nBit 0 - Store Program Memory Enable\nBit 0 - Store Program Memory Enable\nCLKPR (rw) register accessor: an alias for <code>Reg&lt;CLKPR_SPEC&gt;</code>\nDWDR (rw) register accessor: an alias for <code>Reg&lt;DWDR_SPEC&gt;</code>\nGPIOR0 (rw) register accessor: an alias for …\nGPIOR1 (rw) register accessor: an alias for …\nGPIOR2 (rw) register accessor: an alias for …\nMCUCR (rw) register accessor: an alias for <code>Reg&lt;MCUCR_SPEC&gt;</code>\nMCUSR (rw) register accessor: an alias for <code>Reg&lt;MCUSR_SPEC&gt;</code>\nOSCCAL (rw) register accessor: an alias for …\nPLLCSR (rw) register accessor: an alias for …\nPRR (rw) register accessor: an alias for <code>Reg&lt;PRR_SPEC&gt;</code>\nRegister block\nClock Prescale Register\n0x15 - Clock Prescale Register\ndebugWire data register\n0x11 - debugWire data register\nReturns the argument unchanged.\nGeneral purpose register 0\n0x00 - General purpose register 0\nGeneral Purpose register 1\n0x01 - General Purpose register 1\nGeneral Purpose IO register 2\n0x02 - General Purpose IO register 2\nCalls <code>U::from(self)</code>.\nMCU Control Register\n0x24 - MCU Control Register\nMCU Status register\n0x23 - MCU Status register\nOscillator Calibration Register\n0x20 - Oscillator Calibration Register\nPLL Control and status register\n0x16 - PLL Control and status register\nPower Reduction Register\n0x0f - Power Reduction Register\nField <code>CLKPCE</code> reader - Clock Prescaler Change Enable\nField <code>CLKPCE</code> writer - Clock Prescaler Change Enable\nClock Prescale Register\nClock Prescaler Select Bits\nField <code>CLKPS</code> reader - Clock Prescaler Select Bits\nField <code>CLKPS</code> writer - Clock Prescaler Select Bits\n0: Prescaler Value 1\n7: Prescaler Value 128\n4: Prescaler Value 16\n1: Prescaler Value 2\n8: Prescaler Value 256\n5: Prescaler Value 32\n2: Prescaler Value 4\n6: Prescaler Value 64\n3: Prescaler Value 8\nRegister <code>CLKPR</code> reader\nRegister <code>CLKPR</code> writer\nWrites raw bits to the register.\nBit 7 - Clock Prescaler Change Enable\nBit 7 - Clock Prescaler Change Enable\nBits 0:3 - Clock Prescaler Select Bits\nBits 0:3 - Clock Prescaler Select Bits\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>PRESCALER_1</code>\nChecks if the value of the field is <code>PRESCALER_128</code>\nChecks if the value of the field is <code>PRESCALER_16</code>\nChecks if the value of the field is <code>PRESCALER_2</code>\nChecks if the value of the field is <code>PRESCALER_256</code>\nChecks if the value of the field is <code>PRESCALER_32</code>\nChecks if the value of the field is <code>PRESCALER_4</code>\nChecks if the value of the field is <code>PRESCALER_64</code>\nChecks if the value of the field is <code>PRESCALER_8</code>\nPrescaler Value 1\nPrescaler Value 128\nPrescaler Value 16\nPrescaler Value 2\nPrescaler Value 256\nPrescaler Value 32\nPrescaler Value 4\nPrescaler Value 64\nPrescaler Value 8\nGet enumerated values variant\ndebugWire data register\nRegister <code>DWDR</code> reader\nRegister <code>DWDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral purpose register 0\nRegister <code>GPIOR0</code> reader\nRegister <code>GPIOR0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral Purpose register 1\nRegister <code>GPIOR1</code> reader\nRegister <code>GPIOR1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneral Purpose IO register 2\nRegister <code>GPIOR2</code> reader\nRegister <code>GPIOR2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1: ADC Noise Reduction (If Available)\nField <code>BODSE</code> reader - BOD Sleep Enable (available on some …\nField <code>BODSE</code> writer - BOD Sleep Enable (available on some …\nField <code>BODS</code> reader - BOD Sleep (available on some devices)\nField <code>BODS</code> writer - BOD Sleep (available on some devices)\n0: Idle\nMCU Control Register\n2: Power Down\nField <code>PUD</code> reader - Pull-up Disable\nField <code>PUD</code> writer - Pull-up Disable\nRegister <code>MCUCR</code> reader\nField <code>SE</code> reader - Sleep Enable\nField <code>SE</code> writer - Sleep Enable\nSleep Mode Select Bits\nField <code>SM</code> reader - Sleep Mode Select Bits\nField <code>SM</code> writer - Sleep Mode Select Bits\n3: Reserved\nRegister <code>MCUCR</code> writer\nADC Noise Reduction (If Available)\nWrites raw bits to the register.\nBit 7 - BOD Sleep (available on some devices)\nBit 7 - BOD Sleep (available on some devices)\nBit 2 - BOD Sleep Enable (available on some devices)\nBit 2 - BOD Sleep Enable (available on some devices)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdle\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ADC</code>\nChecks if the value of the field is <code>IDLE</code>\nChecks if the value of the field is <code>PDOWN</code>\nChecks if the value of the field is <code>VAL_0X03</code>\nPower Down\nBit 6 - Pull-up Disable\nBit 6 - Pull-up Disable\nBit 5 - Sleep Enable\nBit 5 - Sleep Enable\nBits 3:4 - Sleep Mode Select Bits\nBits 3:4 - Sleep Mode Select Bits\nReserved\nGet enumerated values variant\nField <code>BORF</code> reader - Brown-out Reset Flag\nField <code>BORF</code> writer - Brown-out Reset Flag\nField <code>EXTRF</code> reader - External Reset Flag\nField <code>EXTRF</code> writer - External Reset Flag\nMCU Status register\nField <code>PORF</code> reader - Power-On Reset Flag\nField <code>PORF</code> writer - Power-On Reset Flag\nRegister <code>MCUSR</code> reader\nRegister <code>MCUSR</code> writer\nField <code>WDRF</code> reader - Watchdog Reset Flag\nField <code>WDRF</code> writer - Watchdog Reset Flag\nWrites raw bits to the register.\nBit 2 - Brown-out Reset Flag\nBit 2 - Brown-out Reset Flag\nBit 1 - External Reset Flag\nBit 1 - External Reset Flag\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Power-On Reset Flag\nBit 0 - Power-On Reset Flag\nBit 3 - Watchdog Reset Flag\nBit 3 - Watchdog Reset Flag\nField <code>OSCCAL</code> reader - Oscillator Calibration\nOscillator Calibration Register\nField <code>OSCCAL</code> writer - Oscillator Calibration\nRegister <code>OSCCAL</code> reader\nRegister <code>OSCCAL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Oscillator Calibration\nBits 0:7 - Oscillator Calibration\nField <code>LSM</code> reader - Low speed mode\nField <code>LSM</code> writer - Low speed mode\nField <code>PCKE</code> reader - PCK Enable\nField <code>PCKE</code> writer - PCK Enable\nPLL Control and status register\nField <code>PLLE</code> reader - PLL Enable\nField <code>PLLE</code> writer - PLL Enable\nField <code>PLOCK</code> reader - PLL Lock detector\nRegister <code>PLLCSR</code> reader\nRegister <code>PLLCSR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 7 - Low speed mode\nBit 7 - Low speed mode\nBit 2 - PCK Enable\nBit 2 - PCK Enable\nBit 1 - PLL Enable\nBit 1 - PLL Enable\nBit 0 - PLL Lock detector\nField <code>PRADC</code> reader - Power Reduction ADC\nField <code>PRADC</code> writer - Power Reduction ADC\nPower Reduction Register\nField <code>PRTIM0</code> reader - Power Reduction Timer/Counter0\nField <code>PRTIM0</code> writer - Power Reduction Timer/Counter0\nField <code>PRTIM1</code> reader - Power Reduction Timer/Counter1\nField <code>PRTIM1</code> writer - Power Reduction Timer/Counter1\nField <code>PRUSI</code> reader - Power Reduction USI\nField <code>PRUSI</code> writer - Power Reduction USI\nRegister <code>PRR</code> reader\nRegister <code>PRR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Power Reduction ADC\nBit 0 - Power Reduction ADC\nBit 2 - Power Reduction Timer/Counter0\nBit 2 - Power Reduction Timer/Counter0\nBit 3 - Power Reduction Timer/Counter1\nBit 3 - Power Reduction Timer/Counter1\nBit 1 - Power Reduction USI\nBit 1 - Power Reduction USI\nEEAR (rw) register accessor: an alias for <code>Reg&lt;EEAR_SPEC&gt;</code>\nEECR (rw) register accessor: an alias for <code>Reg&lt;EECR_SPEC&gt;</code>\nEEDR (rw) register accessor: an alias for <code>Reg&lt;EEDR_SPEC&gt;</code>\nRegister block\nEEPROM Address Register Bytes\n0x02 - EEPROM Address Register Bytes\nEEPROM Control Register\n0x00 - EEPROM Control Register\nEEPROM Data Register\n0x01 - EEPROM Data Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEEPROM Address Register Bytes\nRegister <code>EEAR</code> reader\nRegister <code>EEAR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Atomic (erase and write in one operation)\nEEPROM Control Register\nField <code>EEMPE</code> reader - EEPROM Master Write Enable\nField <code>EEMPE</code> writer - EEPROM Master Write Enable\nField <code>EEPE</code> reader - EEPROM Write Enable\nField <code>EEPE</code> writer - EEPROM Write Enable\nEEPROM Programming Mode Bits\nField <code>EEPM</code> reader - EEPROM Programming Mode Bits\nField <code>EEPM</code> writer - EEPROM Programming Mode Bits\nField <code>EERE</code> reader - EEPROM Read Enable\nField <code>EERE</code> writer - EEPROM Read Enable\nField <code>EERIE</code> reader - EEPROM Ready Interrupt Enable\nField <code>EERIE</code> writer - EEPROM Ready Interrupt Enable\n1: Erase only\nRegister <code>EECR</code> reader\nRegister <code>EECR</code> writer\n2: Write only\nAtomic (erase and write in one operation)\nWrites raw bits to the register.\nBit 2 - EEPROM Master Write Enable\nBit 2 - EEPROM Master Write Enable\nBit 1 - EEPROM Write Enable\nBit 1 - EEPROM Write Enable\nBits 4:5 - EEPROM Programming Mode Bits\nBits 4:5 - EEPROM Programming Mode Bits\nBit 0 - EEPROM Read Enable\nBit 0 - EEPROM Read Enable\nBit 3 - EEPROM Ready Interrupt Enable\nBit 3 - EEPROM Ready Interrupt Enable\nErase only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ATOMIC</code>\nChecks if the value of the field is <code>ERASE</code>\nChecks if the value of the field is <code>WRITE</code>\nGet enumerated values variant\nWrite only\nEEPROM Data Register\nRegister <code>EEDR</code> reader\nRegister <code>EEDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGIFR (rw) register accessor: an alias for <code>Reg&lt;GIFR_SPEC&gt;</code>\nGIMSK (rw) register accessor: an alias for <code>Reg&lt;GIMSK_SPEC&gt;</code>\nMCUCR (rw) register accessor: an alias for <code>Reg&lt;MCUCR_SPEC&gt;</code>\nPCMSK (rw) register accessor: an alias for <code>Reg&lt;PCMSK_SPEC&gt;</code>\nRegister block\nReturns the argument unchanged.\nGeneral Interrupt Flag register\n0x25 - General Interrupt Flag register\nGeneral Interrupt Mask Register\n0x26 - General Interrupt Mask Register\nCalls <code>U::from(self)</code>.\nMCU Control Register\n0x20 - MCU Control Register\nPin Change Enable Mask\n0x00 - Pin Change Enable Mask\nGeneral Interrupt Flag register\nField <code>INTF0</code> reader - External Interrupt Flag 0\nField <code>INTF0</code> writer - External Interrupt Flag 0\nField <code>PCIF</code> reader - Pin Change Interrupt Flag\nField <code>PCIF</code> writer - Pin Change Interrupt Flag\nRegister <code>GIFR</code> reader\nRegister <code>GIFR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 6 - External Interrupt Flag 0\nBit 6 - External Interrupt Flag 0\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 5 - Pin Change Interrupt Flag\nBit 5 - Pin Change Interrupt Flag\nGeneral Interrupt Mask Register\nField <code>INT0</code> reader - External Interrupt Request 0 Enable\nField <code>INT0</code> writer - External Interrupt Request 0 Enable\nField <code>PCIE</code> reader - Pin Change Interrupt Enable\nField <code>PCIE</code> writer - Pin Change Interrupt Enable\nRegister <code>GIMSK</code> reader\nRegister <code>GIMSK</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 6 - External Interrupt Request 0 Enable\nBit 6 - External Interrupt Request 0 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 5 - Pin Change Interrupt Enable\nBit 5 - Pin Change Interrupt Enable\n2: The falling edge of INTx generates an interrupt request\nInterrupt Sense Control 0 bits\nField <code>ISC0</code> reader - Interrupt Sense Control 0 bits\nField <code>ISC0</code> writer - Interrupt Sense Control 0 bits\n0: The low level of INTx generates an interrupt request\nMCU Control Register\nRegister <code>MCUCR</code> reader\n3: The rising edge of INTx generates an interrupt request\n1: Any logical change on INTx generates an interrupt …\nRegister <code>MCUCR</code> writer\nWrites raw bits to the register.\nThe falling edge of INTx generates an interrupt request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>TOGGLE</code>\nBits 0:1 - Interrupt Sense Control 0 bits\nBits 0:1 - Interrupt Sense Control 0 bits\nThe low level of INTx generates an interrupt request\nThe rising edge of INTx generates an interrupt request\nAny logical change on INTx generates an interrupt request\nGet enumerated values variant\nField <code>PCINT0</code> reader - Enable pin change interrupt on pin 0\nField <code>PCINT0</code> writer - Enable pin change interrupt on pin 0\nField <code>PCINT1</code> reader - Enable pin change interrupt on pin 1\nField <code>PCINT1</code> writer - Enable pin change interrupt on pin 1\nField <code>PCINT2</code> reader - Enable pin change interrupt on pin 2\nField <code>PCINT2</code> writer - Enable pin change interrupt on pin 2\nField <code>PCINT3</code> reader - Enable pin change interrupt on pin 3\nField <code>PCINT3</code> writer - Enable pin change interrupt on pin 3\nField <code>PCINT4</code> reader - Enable pin change interrupt on pin 4\nField <code>PCINT4</code> writer - Enable pin change interrupt on pin 4\nField <code>PCINT5</code> reader - Enable pin change interrupt on pin 5\nField <code>PCINT5</code> writer - Enable pin change interrupt on pin 5\nPin Change Enable Mask\nRegister <code>PCMSK</code> reader\nRegister <code>PCMSK</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Enable pin change interrupt on pin 0\nBit 0 - Enable pin change interrupt on pin 0\nBit 1 - Enable pin change interrupt on pin 1\nBit 1 - Enable pin change interrupt on pin 1\nBit 2 - Enable pin change interrupt on pin 2\nBit 2 - Enable pin change interrupt on pin 2\nBit 3 - Enable pin change interrupt on pin 3\nBit 3 - Enable pin change interrupt on pin 3\nBit 4 - Enable pin change interrupt on pin 4\nBit 4 - Enable pin change interrupt on pin 4\nBit 5 - Enable pin change interrupt on pin 5\nBit 5 - Enable pin change interrupt on pin 5\nEXTENDED (rw) register accessor: an alias for …\nHIGH (rw) register accessor: an alias for <code>Reg&lt;HIGH_SPEC&gt;</code>\nLOW (rw) register accessor: an alias for <code>Reg&lt;LOW_SPEC&gt;</code>\nRegister block\nNo Description.\n0x02 - No Description.\nReturns the argument unchanged.\nNo Description.\n0x01 - No Description.\nCalls <code>U::from(self)</code>.\nNo Description.\n0x00 - No Description.\nNo Description.\nRegister <code>EXTENDED</code> reader\nField <code>SELFPRGEN</code> reader - Self Programming enable\nField <code>SELFPRGEN</code> writer - Self Programming enable\nRegister <code>EXTENDED</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Self Programming enable\nBit 0 - Self Programming enable\nBrown-out Detector trigger level\nField <code>BODLEVEL</code> reader - Brown-out Detector trigger level\nField <code>BODLEVEL</code> writer - Brown-out Detector trigger level\n7: Brown-out detection disabled\nField <code>DWEN</code> reader - Debug Wire enable\nField <code>DWEN</code> writer - Debug Wire enable\nField <code>EESAVE</code> reader - Preserve EEPROM through the Chip …\nField <code>EESAVE</code> writer - Preserve EEPROM through the Chip …\nNo Description.\nRegister <code>HIGH</code> reader\nField <code>RSTDISBL</code> reader - Reset Disabled (Enable PB5 as i/o …\nField <code>RSTDISBL</code> writer - Reset Disabled (Enable PB5 as i/o …\nField <code>SPIEN</code> reader - Serial program downloading (SPI) …\nField <code>SPIEN</code> writer - Serial program downloading (SPI) …\nRegister <code>HIGH</code> writer\nField <code>WDTON</code> reader - Watch-dog Timer always on\nField <code>WDTON</code> writer - Watch-dog Timer always on\n6: Brown-out detection at VCC=1.8 V\nBrown-out detection at VCC=1.8 V\n5: Brown-out detection at VCC=2.7 V\nBrown-out detection at VCC=2.7 V\n4: Brown-out detection at VCC=4.3 V\nBrown-out detection at VCC=4.3 V\nWrites raw bits to the register.\nBits 0:2 - Brown-out Detector trigger level\nBits 0:2 - Brown-out Detector trigger level\nBrown-out detection disabled\nBit 6 - Debug Wire enable\nBit 6 - Debug Wire enable\nBit 3 - Preserve EEPROM through the Chip Erase cycle\nBit 3 - Preserve EEPROM through the Chip Erase cycle\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_1V8</code>\nChecks if the value of the field is <code>_2V7</code>\nChecks if the value of the field is <code>_4V3</code>\nChecks if the value of the field is <code>DISABLED</code>\nBit 7 - Reset Disabled (Enable PB5 as i/o pin)\nBit 7 - Reset Disabled (Enable PB5 as i/o pin)\nBit 5 - Serial program downloading (SPI) enabled\nBit 5 - Serial program downloading (SPI) enabled\nGet enumerated values variant\nBit 4 - Watch-dog Timer always on\nBit 4 - Watch-dog Timer always on\nField <code>CKDIV8</code> reader - Divide clock by 8 internally\nField <code>CKDIV8</code> writer - Divide clock by 8 internally\nField <code>CKOUT</code> reader - Clock output on PORTB4\nField <code>CKOUT</code> writer - Clock output on PORTB4\n0: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 …\n16: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\n32: Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\n6: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\n22: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\n38: Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: …\n25: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n41: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n57: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n40: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n56: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n9: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n8: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n24: Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time …\n27: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n43: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n59: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n42: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n58: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n11: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n10: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n26: Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time …\n29: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n45: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n61: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n44: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n60: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n13: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n12: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n28: Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time …\n31: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n47: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n63: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n46: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n62: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n15: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n14: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n30: Ext. Crystal Osc. 8.0- MHz; Start-up time …\n51: ATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\n35: ATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\n3: ATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\n2: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 …\n18: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 …\n34: Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 …\nNo Description.\n17: PLL Clock; Start-up time PWRDWN/RESET: 16K CK/14 CK + …\n49: PLL Clock; Start-up time PWRDWN/RESET: 16K CK/14 CK + …\n1: PLL Clock; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 …\n33: PLL Clock; Start-up time PWRDWN/RESET: 1K CK/14 CK + …\nRegister <code>LOW</code> reader\nSelect Clock source\nField <code>SUT_CKSEL</code> reader - Select Clock source\nField <code>SUT_CKSEL</code> writer - Select Clock source\nRegister <code>LOW</code> writer\n4: WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 …\n20: WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 …\n36: WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 …\nWrites raw bits to the register.\nBit 7 - Divide clock by 8 internally\nBit 7 - Divide clock by 8 internally\nBit 6 - Clock output on PORTB4\nBit 6 - Clock output on PORTB4\nExt. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms\nExt. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms\nExt. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms\nExt. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\nExt. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K …\nExt. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32K …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: 1K …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: 1K …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: 1K …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: …\nExt. Crystal Osc. 8.0- MHz; Start-up time PWRDWN/RESET: …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\nATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\nATtiny15 Comp: Int. RC Osc. 6.4 MHz; Start-up time …\nInt. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK …\nInt. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK …\nInt. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK …\nChecks if the value of the field is <code>EXTCLK_6CK_14CK_0MS</code>\nChecks if the value of the field is <code>EXTCLK_6CK_14CK_4MS1</code>\nChecks if the value of the field is <code>EXTCLK_6CK_14CK_65MS</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>PLLCLK_16KCK_14CK_4MS</code>\nChecks if the value of the field is <code>PLLCLK_16KCK_14CK_64MS</code>\nChecks if the value of the field is <code>PLLCLK_1KCK_14CK_4MS</code>\nChecks if the value of the field is <code>PLLCLK_1KCK_14CK_64MS</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nPLL Clock; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4 ms\nPLL Clock; Start-up time PWRDWN/RESET: 16K CK/14 CK + 64 ms\nPLL Clock; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms\nPLL Clock; Start-up time PWRDWN/RESET: 1K CK/14 CK + 64 ms\nBits 0:5 - Select Clock source\nBits 0:5 - Select Clock source\nGet enumerated values variant\nWD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\nWD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\nWD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + …\nLOCKBIT (rw) register accessor: an alias for …\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNo Description.\n0x00 - No Description.\nMemory Lock\nField <code>LB</code> reader - Memory Lock\nField <code>LB</code> writer - Memory Lock\nNo Description.\n3: No memory lock features enabled\n2: Further programming disabled\n0: Further programming and verification disabled\nRegister <code>LOCKBIT</code> reader\nRegister <code>LOCKBIT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NO_LOCK</code>\nChecks if the value of the field is <code>PROG_DISABLED</code>\nChecks if the value of the field is <code>PROG_VER_DISABLED</code>\nBits 0:1 - Memory Lock\nBits 0:1 - Memory Lock\nNo memory lock features enabled\nFurther programming disabled\nFurther programming and verification disabled\nGet enumerated values variant\nDDRB (rw) register accessor: an alias for <code>Reg&lt;DDRB_SPEC&gt;</code>\nPINB (rw) register accessor: an alias for <code>Reg&lt;PINB_SPEC&gt;</code>\nPORTB (rw) register accessor: an alias for <code>Reg&lt;PORTB_SPEC&gt;</code>\nRegister block\nData Direction Register, Port B\n0x01 - Data Direction Register, Port B\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInput Pins, Port B\n0x00 - Input Pins, Port B\nData Register, Port B\n0x02 - Data Register, Port B\nData Direction Register, Port B\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nRegister <code>DDRB</code> reader\nRegister <code>DDRB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nInput Pins, Port B\nRegister <code>PINB</code> reader\nRegister <code>PINB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nField <code>PB0</code> reader - Pin B0\nField <code>PB0</code> writer - Pin B0\nField <code>PB1</code> reader - Pin B1\nField <code>PB1</code> writer - Pin B1\nField <code>PB2</code> reader - Pin B2\nField <code>PB2</code> writer - Pin B2\nField <code>PB3</code> reader - Pin B3\nField <code>PB3</code> writer - Pin B3\nField <code>PB4</code> reader - Pin B4\nField <code>PB4</code> writer - Pin B4\nField <code>PB5</code> reader - Pin B5\nField <code>PB5</code> writer - Pin B5\nData Register, Port B\nRegister <code>PORTB</code> reader\nRegister <code>PORTB</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Pin B0\nBit 0 - Pin B0\nBit 1 - Pin B1\nBit 1 - Pin B1\nBit 2 - Pin B2\nBit 2 - Pin B2\nBit 3 - Pin B3\nBit 3 - Pin B3\nBit 4 - Pin B4\nBit 4 - Pin B4\nBit 5 - Pin B5\nBit 5 - Pin B5\nGTCCR (rw) register accessor: an alias for <code>Reg&lt;GTCCR_SPEC&gt;</code>\nOCR0A (rw) register accessor: an alias for <code>Reg&lt;OCR0A_SPEC&gt;</code>\nOCR0B (rw) register accessor: an alias for <code>Reg&lt;OCR0B_SPEC&gt;</code>\nRegister block\nTCCR0A (rw) register accessor: an alias for …\nTCCR0B (rw) register accessor: an alias for …\nTCNT0 (rw) register accessor: an alias for <code>Reg&lt;TCNT0_SPEC&gt;</code>\nTIFR (rw) register accessor: an alias for <code>Reg&lt;TIFR_SPEC&gt;</code>\nTIMSK (rw) register accessor: an alias for <code>Reg&lt;TIMSK_SPEC&gt;</code>\nReturns the argument unchanged.\nGeneral Timer/Counter Control Register\n0x04 - General Timer/Counter Control Register\nCalls <code>U::from(self)</code>.\nOutput Compare Register A\n0x01 - Output Compare Register A\nOutput Compare Register B\n0x00 - Output Compare Register B\nTimer/Counter Control Register A\n0x02 - Timer/Counter Control Register A\nTimer/Counter Control Register B\n0x0b - Timer/Counter Control Register B\nTimer/Counter0\n0x0a - Timer/Counter0\nTimer/Counter0 Interrupt Flag register\n0x10 - Timer/Counter0 Interrupt Flag register\nTimer/Counter Interrupt Mask Register\n0x11 - Timer/Counter Interrupt Mask Register\nGeneral Timer/Counter Control Register\nField <code>PSR0</code> reader - Prescaler Reset Timer/Counter1 and …\nField <code>PSR0</code> writer - Prescaler Reset Timer/Counter1 and …\nRegister <code>GTCCR</code> reader\nField <code>TSM</code> reader - Timer/Counter Synchronization Mode\nField <code>TSM</code> writer - Timer/Counter Synchronization Mode\nRegister <code>GTCCR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 0 - Prescaler Reset Timer/Counter1 and Timer/Counter0\nBit 7 - Timer/Counter Synchronization Mode\nBit 7 - Timer/Counter Synchronization Mode\nOutput Compare Register A\nRegister <code>OCR0A</code> reader\nRegister <code>OCR0A</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOutput Compare Register B\nRegister <code>OCR0B</code> reader\nRegister <code>OCR0B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COM0A</code> reader - Compare Output A Mode Field <code>COM0B</code> …\nField <code>COM0A</code> writer - Compare Output A Mode Field <code>COM0B</code> …\nCompare Output B Mode\nField <code>COM0B</code> reader - Compare Output B Mode\nField <code>COM0B</code> writer - Compare Output B Mode\n2: CTC, Top: <em>OCRA</em>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n0: Normal port operation, OCix disconnected\n2: Clear OCix on Compare Match (If PWM is enabled, OCix is …\n3: Set OCix on Compare Match (If PWM is enabled, OCix is …\n1: Toggle OCix on Compare Match (Might depend on WGM)\n0: Normal, Top: <code>0xff</code>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\n3: Fast PWM, Top: <code>0xff</code>, Update: <em>BOTTOM</em>, Flag: <em>TOP</em>\n1: Phase Correct PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>BOTTOM</em>\nRegister <code>TCCR0A</code> reader\nTimer/Counter Control Register A\nRegister <code>TCCR0A</code> writer\nWaveform Generation Mode\nField <code>WGM0</code> reader - Waveform Generation Mode\nField <code>WGM0</code> writer - Waveform Generation Mode\nWrites raw bits to the register.\nBits 6:7 - Compare Output A Mode\nBits 6:7 - Compare Output A Mode\nBits 4:5 - Compare Output B Mode\nBits 4:5 - Compare Output B Mode\nCTC, Top: <em>OCRA</em>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\nNormal port operation, OCix disconnected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CTC</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nChecks if the value of the field is <code>MATCH_CLEAR</code>\nChecks if the value of the field is <code>MATCH_SET</code>\nChecks if the value of the field is <code>MATCH_TOGGLE</code>\nChecks if the value of the field is <code>NORMAL_TOP</code>\nChecks if the value of the field is <code>PWM_FAST</code>\nChecks if the value of the field is <code>PWM_PHASE</code>\nClear OCix on Compare Match (If PWM is enabled, OCix is …\nSet OCix on Compare Match (If PWM is enabled, OCix is …\nToggle OCix on Compare Match (Might depend on WGM)\nNormal, Top: <code>0xff</code>, Update: <em>Immediate</em>, Flag: <em>MAX</em>\nFast PWM, Top: <code>0xff</code>, Update: <em>BOTTOM</em>, Flag: <em>TOP</em>\nPhase Correct PWM, Top: <code>0xff</code>, Update: <em>TOP</em>, Flag: <em>BOTTOM</em>\nGet enumerated values variant\nGet enumerated values variant\nBits 0:1 - Waveform Generation Mode\nBits 0:1 - Waveform Generation Mode\nClock Select\nField <code>CS0</code> reader - Clock Select\nField <code>CS0</code> writer - Clock Select\n1: Running, No Prescaling\n6: Running, ExtClk Tx Falling Edge\n7: Running, ExtClk Tx Rising Edge\nField <code>FOC0A</code> writer - Force Output Compare A\nField <code>FOC0B</code> writer - Force Output Compare B\n0: No clock source (Timer/Counter stopped)\n5: Running, CLK/1024\n4: Running, CLK/256\n3: Running, CLK/64\n2: Running, CLK/8\nRegister <code>TCCR0B</code> reader\nTimer/Counter Control Register B\nRegister <code>TCCR0B</code> writer\nField <code>WGM02</code> reader - Waveform Generation Mode High Bit …\nField <code>WGM02</code> writer - Waveform Generation Mode High Bit …\nWrites raw bits to the register.\nBits 0:2 - Clock Select\nBits 0:2 - Clock Select\nRunning, No Prescaling\nRunning, ExtClk Tx Falling Edge\nRunning, ExtClk Tx Rising Edge\nBit 7 - Force Output Compare A\nBit 6 - Force Output Compare B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DIRECT</code>\nChecks if the value of the field is <code>EXT_FALLING</code>\nChecks if the value of the field is <code>EXT_RISING</code>\nChecks if the value of the field is <code>NO_CLOCK</code>\nChecks if the value of the field is <code>PRESCALE_1024</code>\nChecks if the value of the field is <code>PRESCALE_256</code>\nChecks if the value of the field is <code>PRESCALE_64</code>\nChecks if the value of the field is <code>PRESCALE_8</code>\nNo clock source (Timer/Counter stopped)\nRunning, CLK/1024\nRunning, CLK/256\nRunning, CLK/64\nRunning, CLK/8\nGet enumerated values variant\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nBit 3 - Waveform Generation Mode High Bit (Enable Top: <em>OCRA</em>…\nRegister <code>TCNT0</code> reader\nTimer/Counter0\nRegister <code>TCNT0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>OCF0A</code> reader - Timer/Counter0 Output Compare Flag 0A\nField <code>OCF0A</code> writer - Timer/Counter0 Output Compare Flag 0A\nField <code>OCF0B</code> reader - Timer/Counter0 Output Compare Flag 0B\nField <code>OCF0B</code> writer - Timer/Counter0 Output Compare Flag 0B\nRegister <code>TIFR</code> reader\nTimer/Counter0 Interrupt Flag register\nField <code>TOV0</code> reader - Timer/Counter0 Overflow Flag\nField <code>TOV0</code> writer - Timer/Counter0 Overflow Flag\nRegister <code>TIFR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 4 - Timer/Counter0 Output Compare Flag 0A\nBit 4 - Timer/Counter0 Output Compare Flag 0A\nBit 3 - Timer/Counter0 Output Compare Flag 0B\nBit 3 - Timer/Counter0 Output Compare Flag 0B\nBit 1 - Timer/Counter0 Overflow Flag\nBit 1 - Timer/Counter0 Overflow Flag\nField <code>OCIE0A</code> reader - Timer/Counter0 Output Compare Match …\nField <code>OCIE0A</code> writer - Timer/Counter0 Output Compare Match …\nField <code>OCIE0B</code> reader - Timer/Counter0 Output Compare Match …\nField <code>OCIE0B</code> writer - Timer/Counter0 Output Compare Match …\nRegister <code>TIMSK</code> reader\nTimer/Counter Interrupt Mask Register\nField <code>TOIE0</code> reader - Timer/Counter0 Overflow Interrupt …\nField <code>TOIE0</code> writer - Timer/Counter0 Overflow Interrupt …\nRegister <code>TIMSK</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 4 - Timer/Counter0 Output Compare Match A Interrupt …\nBit 4 - Timer/Counter0 Output Compare Match A Interrupt …\nBit 3 - Timer/Counter0 Output Compare Match B Interrupt …\nBit 3 - Timer/Counter0 Output Compare Match B Interrupt …\nBit 1 - Timer/Counter0 Overflow Interrupt Enable\nBit 1 - Timer/Counter0 Overflow Interrupt Enable\nDT1A (rw) register accessor: an alias for <code>Reg&lt;DT1A_SPEC&gt;</code>\nDT1B (rw) register accessor: an alias for <code>Reg&lt;DT1B_SPEC&gt;</code>\nDTPS (rw) register accessor: an alias for <code>Reg&lt;DTPS_SPEC&gt;</code>\nGTCCR (rw) register accessor: an alias for <code>Reg&lt;GTCCR_SPEC&gt;</code>\nOCR1A (rw) register accessor: an alias for <code>Reg&lt;OCR1A_SPEC&gt;</code>\nOCR1B (rw) register accessor: an alias for <code>Reg&lt;OCR1B_SPEC&gt;</code>\nOCR1C (rw) register accessor: an alias for <code>Reg&lt;OCR1C_SPEC&gt;</code>\nRegister block\nTCCR1 (rw) register accessor: an alias for <code>Reg&lt;TCCR1_SPEC&gt;</code>\nTCNT1 (rw) register accessor: an alias for <code>Reg&lt;TCNT1_SPEC&gt;</code>\nTIFR (rw) register accessor: an alias for <code>Reg&lt;TIFR_SPEC&gt;</code>\nTIMSK (rw) register accessor: an alias for <code>Reg&lt;TIMSK_SPEC&gt;</code>\nDead Time Value Register A\n0x02 - Dead Time Value Register A\nDead Time Value Register B\n0x01 - Dead Time Value Register B\nDead time prescaler register\n0x00 - Dead time prescaler register\nReturns the argument unchanged.\nTimer counter control register\n0x09 - Timer counter control register\nCalls <code>U::from(self)</code>.\nOutput Compare Register A\n0x0b - Output Compare Register A\nOutput Compare Register B\n0x08 - Output Compare Register B\nOutput Compare Register C\n0x0a - Output Compare Register C\nTimer/Counter Control Register\n0x0d - Timer/Counter Control Register\nTimer/Counter Register\n0x0c - Timer/Counter Register\nTimer/Counter Interrupt Flag Register\n0x15 - Timer/Counter Interrupt Flag Register\nTimer/Counter Interrupt Mask Register\n0x16 - Timer/Counter Interrupt Mask Register\nDead Time Value Register A\nField <code>DTVH</code> reader - No Description.\nField <code>DTVH</code> writer - No Description.\nField <code>DTVL</code> reader - No Description.\nField <code>DTVL</code> writer - No Description.\nRegister <code>DT1A</code> reader\nRegister <code>DT1A</code> writer\nWrites raw bits to the register.\nBits 4:7 - No Description.\nBits 4:7 - No Description.\nBits 0:3 - No Description.\nBits 0:3 - No Description.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDead Time Value Register B\nField <code>DTVH</code> reader - No Description.\nField <code>DTVH</code> writer - No Description.\nField <code>DTVL</code> reader - No Description.\nField <code>DTVL</code> writer - No Description.\nRegister <code>DT1B</code> reader\nRegister <code>DT1B</code> writer\nWrites raw bits to the register.\nBits 4:7 - No Description.\nBits 4:7 - No Description.\nBits 0:3 - No Description.\nBits 0:3 - No Description.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: No Prescaling\nNo Description.\nField <code>DTPS</code> reader - No Description.\nDead time prescaler register\nField <code>DTPS</code> writer - No Description.\n1: Division factor 2\n2: Division factor 4\n3: Division factor 8\nRegister <code>DTPS</code> reader\nRegister <code>DTPS</code> writer\nWrites raw bits to the register.\nNo Prescaling\nBits 0:1 - No Description.\nBits 0:1 - No Description.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DIRECT</code>\nChecks if the value of the field is <code>PRESCALE_2</code>\nChecks if the value of the field is <code>PRESCALE_4</code>\nChecks if the value of the field is <code>PRESCALE_8</code>\nDivision factor 2\nDivision factor 4\nDivision factor 8\nGet enumerated values variant\nComparator B Output Mode\nField <code>COM1B</code> reader - Comparator B Output Mode\nField <code>COM1B</code> writer - Comparator B Output Mode\n0: Normal port operation, OCix disconnected\nField <code>FOC1A</code> writer - Force Output Compare 1A\nField <code>FOC1B</code> writer - Force Output Compare Match 1B\nTimer counter control register\n2: Clear OCix on Compare Match\n3: Set OCix on Compare Match\n1: Toggle OCix on Compare Match\nField <code>PSR1</code> reader - Prescaler Reset Timer/Counter1\nField <code>PSR1</code> writer - Prescaler Reset Timer/Counter1\nField <code>PWM1B</code> reader - Pulse Width Modulator B Enable\nField <code>PWM1B</code> writer - Pulse Width Modulator B Enable\nRegister <code>GTCCR</code> reader\nRegister <code>GTCCR</code> writer\nWrites raw bits to the register.\nBits 4:5 - Comparator B Output Mode\nBits 4:5 - Comparator B Output Mode\nNormal port operation, OCix disconnected\nBit 2 - Force Output Compare 1A\nBit 3 - Force Output Compare Match 1B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISCONNECTED</code>\nChecks if the value of the field is <code>MATCH_CLEAR</code>\nChecks if the value of the field is <code>MATCH_SET</code>\nChecks if the value of the field is <code>MATCH_TOGGLE</code>\nClear OCix on Compare Match\nSet OCix on Compare Match\nToggle OCix on Compare Match\nBit 1 - Prescaler Reset Timer/Counter1\nBit 1 - Prescaler Reset Timer/Counter1\nBit 6 - Pulse Width Modulator B Enable\nBit 6 - Pulse Width Modulator B Enable\nGet enumerated values variant\nOutput Compare Register A\nRegister <code>OCR1A</code> reader\nRegister <code>OCR1A</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOutput Compare Register B\nRegister <code>OCR1B</code> reader\nRegister <code>OCR1B</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOutput Compare Register C\nRegister <code>OCR1C</code> reader\nRegister <code>OCR1C</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare Output Mode, Bits\nField <code>COM1A</code> reader - Compare Output Mode, Bits\nField <code>COM1A</code> writer - Compare Output Mode, Bits\nClock Select Bits\nField <code>CS1</code> reader - Clock Select Bits\nField <code>CS1</code> writer - Clock Select Bits\nField <code>CTC1</code> reader - Clear Timer/Counter on Compare Match\nField <code>CTC1</code> writer - Clear Timer/Counter on Compare Match\n1: Running, No Prescaling\n0: Normal port operation, OCix disconnected\n2: Clear OCix on Compare Match\n3: Set OCix on Compare Match\n1: Toggle OCix on Compare Match\n0: No clock source (Timer/Counter stopped)\n11: Running, CLK/1024\n8: Running, CLK/128\n5: Running, CLK/16\n15: Running, CLK/16384\n2: Running, CLK/2\n12: Running, CLK/2048\n9: Running, CLK/256\n6: Running, CLK/32\n3: Running, CLK/4\n13: Running, CLK/4096\n10: Running, CLK/512\n7: Running, CLK/64\n4: Running, CLK/8\n14: Running, CLK/8192\nField <code>PWM1A</code> reader - Pulse Width Modulator Enable\nField <code>PWM1A</code> writer - Pulse Width Modulator Enable\nRegister <code>TCCR1</code> reader\nTimer/Counter Control Register\nRegister <code>TCCR1</code> writer\nWrites raw bits to the register.\nBits 4:5 - Compare Output Mode, Bits\nBits 4:5 - Compare Output Mode, Bits\nBits 0:3 - Clock Select Bits\nBits 0:3 - Clock Select Bits\nBit 7 - Clear Timer/Counter on Compare Match\nBit 7 - Clear Timer/Counter on Compare Match\nRunning, No Prescaling\nNormal port operation, OCix disconnected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DIRECT</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nChecks if the value of the field is <code>MATCH_CLEAR</code>\nChecks if the value of the field is <code>MATCH_SET</code>\nChecks if the value of the field is <code>MATCH_TOGGLE</code>\nChecks if the value of the field is <code>NO_CLOCK</code>\nChecks if the value of the field is <code>PRESCALE_1024</code>\nChecks if the value of the field is <code>PRESCALE_128</code>\nChecks if the value of the field is <code>PRESCALE_16</code>\nChecks if the value of the field is <code>PRESCALE_16384</code>\nChecks if the value of the field is <code>PRESCALE_2</code>\nChecks if the value of the field is <code>PRESCALE_2048</code>\nChecks if the value of the field is <code>PRESCALE_256</code>\nChecks if the value of the field is <code>PRESCALE_32</code>\nChecks if the value of the field is <code>PRESCALE_4</code>\nChecks if the value of the field is <code>PRESCALE_4096</code>\nChecks if the value of the field is <code>PRESCALE_512</code>\nChecks if the value of the field is <code>PRESCALE_64</code>\nChecks if the value of the field is <code>PRESCALE_8</code>\nChecks if the value of the field is <code>PRESCALE_8192</code>\nClear OCix on Compare Match\nSet OCix on Compare Match\nToggle OCix on Compare Match\nNo clock source (Timer/Counter stopped)\nRunning, CLK/1024\nRunning, CLK/128\nRunning, CLK/16\nRunning, CLK/16384\nRunning, CLK/2\nRunning, CLK/2048\nRunning, CLK/256\nRunning, CLK/32\nRunning, CLK/4\nRunning, CLK/4096\nRunning, CLK/512\nRunning, CLK/64\nRunning, CLK/8\nRunning, CLK/8192\nBit 6 - Pulse Width Modulator Enable\nBit 6 - Pulse Width Modulator Enable\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>TCNT1</code> reader\nTimer/Counter Register\nRegister <code>TCNT1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>OCF1A</code> reader - Timer/Counter1 Output Compare Flag 1A\nField <code>OCF1A</code> writer - Timer/Counter1 Output Compare Flag 1A\nField <code>OCF1B</code> reader - Timer/Counter1 Output Compare Flag 1B\nField <code>OCF1B</code> writer - Timer/Counter1 Output Compare Flag 1B\nRegister <code>TIFR</code> reader\nTimer/Counter Interrupt Flag Register\nField <code>TOV1</code> reader - Timer/Counter1 Overflow Flag\nField <code>TOV1</code> writer - Timer/Counter1 Overflow Flag\nRegister <code>TIFR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 6 - Timer/Counter1 Output Compare Flag 1A\nBit 6 - Timer/Counter1 Output Compare Flag 1A\nBit 5 - Timer/Counter1 Output Compare Flag 1B\nBit 5 - Timer/Counter1 Output Compare Flag 1B\nBit 2 - Timer/Counter1 Overflow Flag\nBit 2 - Timer/Counter1 Overflow Flag\nField <code>OCIE1A</code> reader - OCIE1A: Timer/Counter1 Output …\nField <code>OCIE1A</code> writer - OCIE1A: Timer/Counter1 Output …\nField <code>OCIE1B</code> reader - OCIE1A: Timer/Counter1 Output …\nField <code>OCIE1B</code> writer - OCIE1A: Timer/Counter1 Output …\nRegister <code>TIMSK</code> reader\nTimer/Counter Interrupt Mask Register\nField <code>TOIE1</code> reader - Timer/Counter1 Overflow Interrupt …\nField <code>TOIE1</code> writer - Timer/Counter1 Overflow Interrupt …\nRegister <code>TIMSK</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 6 - OCIE1A: Timer/Counter1 Output Compare Interrupt …\nBit 6 - OCIE1A: Timer/Counter1 Output Compare Interrupt …\nBit 5 - OCIE1A: Timer/Counter1 Output Compare B Interrupt …\nBit 5 - OCIE1A: Timer/Counter1 Output Compare B Interrupt …\nBit 2 - Timer/Counter1 Overflow Interrupt Enable\nBit 2 - Timer/Counter1 Overflow Interrupt Enable\nRegister block\nUSIBR (rw) register accessor: an alias for <code>Reg&lt;USIBR_SPEC&gt;</code>\nUSICR (rw) register accessor: an alias for <code>Reg&lt;USICR_SPEC&gt;</code>\nUSIDR (rw) register accessor: an alias for <code>Reg&lt;USIDR_SPEC&gt;</code>\nUSISR (rw) register accessor: an alias for <code>Reg&lt;USISR_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSI Buffer Register\n0x03 - USI Buffer Register\nUSI Control Register\n0x00 - USI Control Register\nUSI Data Register\n0x02 - USI Data Register\nUSI Status Register\n0x01 - USI Status Register\nRegister <code>USIBR</code> reader\nUSI Buffer Register\nRegister <code>USIBR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: All detectors disabled. Port pins operates as normal.\n3: External, negative edge\n2: External, positive edge\n0: No Clock/Software clock strobe\nRegister <code>USICR</code> reader\n1: Timer/Counter0 Compare Match\n1: Three-wire mode. Uses DO, DI, and USCK pins.\n3: Two-wire mode (Master). Uses SDA and SCL pins.\n2: Two-wire mode (Slave). Uses SDA (DI) and SCL (USCK) …\nField <code>USICLK</code> writer - Clock Strobe\nUSI Control Register\nUSI Clock Source Select Bits\nField <code>USICS</code> reader - USI Clock Source Select Bits\nField <code>USICS</code> writer - USI Clock Source Select Bits\nField <code>USIOIE</code> reader - Counter Overflow Interrupt Enable\nField <code>USIOIE</code> writer - Counter Overflow Interrupt Enable\nField <code>USISIE</code> reader - Start Condition Interrupt Enable\nField <code>USISIE</code> writer - Start Condition Interrupt Enable\nField <code>USITC</code> writer - Toggle Clock Port Pin\nUSI Wire Mode Bits\nField <code>USIWM</code> reader - USI Wire Mode Bits\nField <code>USIWM</code> writer - USI Wire Mode Bits\nRegister <code>USICR</code> writer\nWrites raw bits to the register.\nAll detectors disabled. Port pins operates as normal.\nExternal, negative edge\nExternal, positive edge\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>EXT_NEG</code>\nChecks if the value of the field is <code>EXT_POS</code>\nChecks if the value of the field is <code>NO_CLOCK</code>\nChecks if the value of the field is <code>TC0</code>\nChecks if the value of the field is <code>THREE_WIRE</code>\nChecks if the value of the field is <code>TWO_WIRE_MASTER</code>\nChecks if the value of the field is <code>TWO_WIRE_SLAVE</code>\nNo Clock/Software clock strobe\nTimer/Counter0 Compare Match\nThree-wire mode. Uses DO, DI, and USCK pins.\nTwo-wire mode (Master). Uses SDA and SCL pins.\nTwo-wire mode (Slave). Uses SDA (DI) and SCL (USCK) pins.\nBit 1 - Clock Strobe\nBits 2:3 - USI Clock Source Select Bits\nBits 2:3 - USI Clock Source Select Bits\nBit 6 - Counter Overflow Interrupt Enable\nBit 6 - Counter Overflow Interrupt Enable\nBit 7 - Start Condition Interrupt Enable\nBit 7 - Start Condition Interrupt Enable\nBit 0 - Toggle Clock Port Pin\nBits 4:5 - USI Wire Mode Bits\nBits 4:5 - USI Wire Mode Bits\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>USIDR</code> reader\nUSI Data Register\nRegister <code>USIDR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>USISR</code> reader\nField <code>USICNT</code> reader - USI Counter Value Bits\nField <code>USICNT</code> writer - USI Counter Value Bits\nField <code>USIDC</code> reader - Data Output Collision\nField <code>USIOIF</code> reader - Counter Overflow Interrupt Flag\nField <code>USIOIF</code> writer - Counter Overflow Interrupt Flag\nField <code>USIPF</code> reader - Stop Condition Flag\nField <code>USIPF</code> writer - Stop Condition Flag\nField <code>USISIF</code> reader - Start Condition Interrupt Flag\nField <code>USISIF</code> writer - Start Condition Interrupt Flag\nUSI Status Register\nRegister <code>USISR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:3 - USI Counter Value Bits\nBits 0:3 - USI Counter Value Bits\nBit 4 - Data Output Collision\nBit 6 - Counter Overflow Interrupt Flag\nBit 6 - Counter Overflow Interrupt Flag\nBit 5 - Stop Condition Flag\nBit 5 - Stop Condition Flag\nBit 7 - Start Condition Interrupt Flag\nBit 7 - Start Condition Interrupt Flag\nRegister block\nWDTCR (rw) register accessor: an alias for <code>Reg&lt;WDTCR_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWatchdog Timer Control Register\n0x00 - Watchdog Timer Control Register\n6: - 128K (131072) cycles, ~1s\n3: - 16K (16384) cycles, ~0.125s\n7: - 256K (262144) cycles, ~2s\n0: - 2048 cycles, ~16ms/512K (524288) cycles, ~4s if WDPH …\n4: - 32K (32768) cycles, ~0.25s\n1: - 4096 cycles, ~32ms/1024K (1048576) cycles, ~8s if …\n5: - 64K (65536) cycles, ~0.5s\n2: - 8192 cycles, ~64ms\nRegister <code>WDTCR</code> reader\nRegister <code>WDTCR</code> writer\nField <code>WDCE</code> reader - Watchdog Change Enable\nField <code>WDCE</code> writer - Watchdog Change Enable\nField <code>WDE</code> reader - Watch Dog Enable\nField <code>WDE</code> writer - Watch Dog Enable\nField <code>WDIE</code> reader - Watchdog Timeout Interrupt Enable\nField <code>WDIE</code> writer - Watchdog Timeout Interrupt Enable\nField <code>WDIF</code> reader - Watchdog Timeout Interrupt Flag\nField <code>WDIF</code> writer - Watchdog Timeout Interrupt Flag\nField <code>WDPH</code> reader - Watchdog Timer Prescaler - High Bit\nField <code>WDPH</code> writer - Watchdog Timer Prescaler - High Bit\nWatchdog Timer Prescaler - Low Bits\nField <code>WDPL</code> reader - Watchdog Timer Prescaler - Low Bits\nField <code>WDPL</code> writer - Watchdog Timer Prescaler - Low Bits\nWatchdog Timer Control Register\nWrites raw bits to the register.\n128K (131072) cycles, ~1s\n16K (16384) cycles, ~0.125s\n256K (262144) cycles, ~2s\n2048 cycles, ~16ms/512K (524288) cycles, ~4s if WDPH is set\n32K (32768) cycles, ~0.25s\n4096 cycles, ~32ms/1024K (1048576) cycles, ~8s if WDPH is …\n64K (65536) cycles, ~0.5s\n8192 cycles, ~64ms\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CYCLES_128K</code>\nChecks if the value of the field is <code>CYCLES_16K</code>\nChecks if the value of the field is <code>CYCLES_256K</code>\nChecks if the value of the field is <code>CYCLES_2K_512K</code>\nChecks if the value of the field is <code>CYCLES_32K</code>\nChecks if the value of the field is <code>CYCLES_4K_1024K</code>\nChecks if the value of the field is <code>CYCLES_64K</code>\nChecks if the value of the field is <code>CYCLES_8K</code>\nGet enumerated values variant\nBit 4 - Watchdog Change Enable\nBit 4 - Watchdog Change Enable\nBit 3 - Watch Dog Enable\nBit 3 - Watch Dog Enable\nBit 6 - Watchdog Timeout Interrupt Enable\nBit 6 - Watchdog Timeout Interrupt Enable\nBit 7 - Watchdog Timeout Interrupt Flag\nBit 7 - Watchdog Timeout Interrupt Flag\nBit 5 - Watchdog Timer Prescaler - High Bit\nBit 5 - Watchdog Timer Prescaler - High Bit\nBits 0:2 - Watchdog Timer Prescaler - Low Bits\nBits 0:2 - Watchdog Timer Prescaler - Low Bits\nBit-wise field reader\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nField reader.\nWrite field Proxy with unsafe <code>bits</code>\nWrite field Proxy with safe <code>bits</code>\nSpecifies the register bits that are not changed if you …\nRegister reader.\nReset value of the register.\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …)\nTrait implemented by readable registers to enable the <code>read</code> …\nResult from a call to <code>read</code> and argument to <code>modify</code>.\nThis structure provides volatile access to registers.\nRaw register type\nReset value of the register.\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRegister writer.\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nTrait implemented by writeable registers.\nWriter type argument to <code>write</code>, et al.\nSpecifies the register bits that are not changed if you …\nReturns the underlying memory address of register.\nValue of the field as raw bits.\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nReturns <code>true</code> if the bit is clear (0).\nReturns <code>true</code> if the bit is set (1).\nReads raw bits from register.\nWrites raw bits to the register.\nReads raw bits from field.\nWrites raw bits to the field\nWrites raw bits to the field\nClears the field bit\nClears the field bit\nClears the field bit by passing one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMask for bits of width <code>WI</code>\nModifies the contents of the register by reading and then …\nMask for bits of width 1\nReads the contents of a <code>Readable</code> register.\nWrites the reset value to <code>Writable</code> register.\nReset value of the register.\nSets the field bit\nSets the field bit\nSets the field bit by passing zero\nToggle the field bit by passing one\nToggle the field bit by passing zero\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites bits to a <code>Writable</code> register.\nWrites 0 to a <code>Writable</code> register.\nCritical section token.\nOpaque structure for storing the global interrupt flag …\nA “mutex” based on critical sections.\nBorrows the data for the duration of the critical section.\nDisable the global interrupt flag.\nDisable the global interrupt flag and return an opaque …\nEnable the global interrupt flag.\nCheck the status of the saved global interrupt flag.\nExecute closure <code>f</code> in an interrupt-free context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the contained value when the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps the contained value, consuming the mutex.\nCheck whether the global interrupt flag is currently …\nCreates a critical section token.\nCreates a new mutex.\nRestore the global interrupt flag to its previous state …")