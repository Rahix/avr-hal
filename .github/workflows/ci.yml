name: Continuous Integration

on:
  push:
    branches:
      - main
      - next
      - wip
  pull_request:
    paths-ignore:
      - 'ravedude/**'

jobs:
  ci:
    name: "${{ matrix.m.type }}: ${{ matrix.m.name }}"
    strategy:
      fail-fast: true
      matrix:
        m:
          - type: board
            name: arduino-uno
            examples: true
          - type: board
            name: arduino-diecimila
            examples: true
          - type: board
            name: arduino-leonardo
            examples: true
          - type: board
            name: arduino-mega2560
            examples: true
          - type: board
            name: arduino-mega1280
            examples: true
          - type: board
            name: sparkfun-promicro
            examples: true
          - type: board
            name: sparkfun-promini-3v3
            examples: true
          - type: board
            name: sparkfun-promini-5v
            examples: true
          - type: board
            name: trinket-pro
            examples: true
          - type: board
            name: trinket
            examples: true
          - type: board
            name: arduino-nano
            examples: true
          - type: board
            name: arduino-nano-every
            examples: true
          - type: board
            name: nano168
            examples: true
          - type: board
            # Not really a board, but also an examples crate
            name: atmega2560
            examples: true
          - type: mcu
            name: atmega1280
            crate: atmega-hal
          - type: mcu
            name: atmega32a
            crate: atmega-hal
          - type: mcu
            name: atmega128a
            crate: atmega-hal
          - type: mcu
            name: atmega328p
            crate: atmega-hal
          - type: mcu
            name: atmega328pb
            crate: atmega-hal
          - type: mcu
            name: atmega48p
            crate: atmega-hal
          - type: mcu
            name: atmega88p
            crate: atmega-hal
          - type: mcu
            name: atmega1284p
            crate: atmega-hal
          - type: mcu
            name: atmega8
            crate: atmega-hal
          - type: mcu
            name: attiny85
            crate: attiny-hal
          - type: mcu
            name: attiny88
            crate: attiny-hal
          - type: mcu
            name: attiny167
            crate: attiny-hal
          - type: mcu
            name: attiny2313
            crate: attiny-hal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-27
          components: rust-src
      - name: Install avr-gcc, binutils, and libc
        run: sudo apt-get install -y avr-libc binutils-avr gcc-avr
      - name: Compile board crate and examples
        if: "${{ matrix.m.type == 'board' && matrix.m.examples }}"
        run: cd "examples/${{ matrix.m.name }}" && cargo build --bins
      - name: Compile board crate (without examples)
        if: "${{ matrix.m.type == 'board' && !matrix.m.examples }}"
        run: cd "arduino-hal/" && cargo build --features "${{ matrix.m.name }}"
      - name: Test-compile HAL crate for an MCU
        if: "${{ matrix.m.type == 'mcu' }}"
        run: cd "mcu/${{ matrix.m.crate }}" && RUSTFLAGS="-C target-cpu=${{ matrix.m.name }}" cargo build --target=avr-none --features "${{ matrix.m.name }}" -Z build-std=core

  rustfmt:
    name: Apply rustfmt formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2025-04-27
          components: rust-src, rustfmt
      - uses: actions-rust-lang/rustfmt@v1
