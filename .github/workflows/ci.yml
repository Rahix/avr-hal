name: Continuous Integration

on:
  push:
    branches:
      - main
      - next
      - wip
  pull_request:

jobs:
  ci:
    name: "${{ matrix.m.type }}: ${{ matrix.m.name }}"
    strategy:
      fail-fast: true
      matrix:
        m:
          - type: board
            name: arduino-uno
          - type: board
            name: arduino-diecimila
          - type: board
            name: arduino-leonardo
          - type: board
            name: arduino-mega2560
          - type: board
            name: sparkfun-promicro
          - type: board
            name: trinket-pro
          - type: mcu
            name: atmega1280
            spec: atmega1280
            crate: atmega-hal
          - type: mcu
            name: atmega168
            spec: atmega168
            crate: atmega-hal
          - type: mcu
            name: atmega328pb
            spec: atmega328p
            crate: atmega-hal
          - type: mcu
            name: atmega48p
            spec: atmega48p
            crate: atmega-hal
          - type: mcu
            name: attiny85
            spec: attiny85
            crate: attiny-hal
          - type: mcu
            name: attiny88
            spec: attiny88
            crate: attiny-hal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-01-07
          override: true
          components: rust-src
      - name: Install avr-gcc, binutils, and libc
        run: sudo apt-get install -y avr-libc binutils-avr gcc-avr
      - name: Compile board crate and examples
        if: "${{ matrix.m.type == 'board' }}"
        run: cd "examples/${{ matrix.m.name }}" && cargo build --bins
      - name: Test-compile HAL crate for an MCU
        if: "${{ matrix.m.type == 'mcu' }}"
        run: cd "mcu/${{ matrix.m.crate }}" && cargo build --features "${{ matrix.m.name }}" -Z build-std=core --target "../../avr-specs/avr-${{ matrix.m.spec }}.json"

  ravedude:
    name: "ravedude"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install libudev
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Check ravedude
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ravedude/Cargo.toml
